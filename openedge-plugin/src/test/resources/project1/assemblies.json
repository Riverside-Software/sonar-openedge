[
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.Registry",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetValue (CHARACTER, CHARACTER, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (CHARACTER, CHARACTER, System.Object, Microsoft.Win32.RegistryValueKind)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (CHARACTER, CHARACTER, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryHive",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryKey",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "CreateSubKey (CHARACTER)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "CreateSubKey (CHARACTER, Microsoft.Win32.RegistryKeyPermissionCheck)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "CreateSubKey (CHARACTER, Microsoft.Win32.RegistryKeyPermissionCheck, Microsoft.Win32.RegistryOptions)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "CreateSubKey (CHARACTER, LOGICAL)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "CreateSubKey (CHARACTER, LOGICAL, Microsoft.Win32.RegistryOptions)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "CreateSubKey (CHARACTER, Microsoft.Win32.RegistryKeyPermissionCheck, System.Security.AccessControl.RegistrySecurity)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "CreateSubKey (CHARACTER, Microsoft.Win32.RegistryKeyPermissionCheck, Microsoft.Win32.RegistryOptions, System.Security.AccessControl.RegistrySecurity)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "DeleteSubKey (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteSubKey (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteSubKeyTree (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteSubKeyTree (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteValue (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteValue (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenSubKey (CHARACTER, LOGICAL)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "OpenSubKey (CHARACTER, Microsoft.Win32.RegistryKeyPermissionCheck)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "OpenSubKey (CHARACTER, System.Security.AccessControl.RegistryRights)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "OpenSubKey (CHARACTER, Microsoft.Win32.RegistryKeyPermissionCheck, System.Security.AccessControl.RegistryRights)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "OpenSubKey (CHARACTER)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "GetSubKeyNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetValueNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetValue (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (CHARACTER, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (CHARACTER, System.Object, Microsoft.Win32.RegistryValueOptions)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValueKind (CHARACTER)",
        "returnType": "Microsoft.Win32.RegistryValueKind"
      },
      {
        "name": "SetValue (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (CHARACTER, System.Object, Microsoft.Win32.RegistryValueKind)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessControl ()",
        "returnType": "System.Security.AccessControl.RegistrySecurity"
      },
      {
        "name": "GetAccessControl (System.Security.AccessControl.AccessControlSections)",
        "returnType": "System.Security.AccessControl.RegistrySecurity"
      },
      {
        "name": "SetAccessControl (System.Security.AccessControl.RegistrySecurity)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "OpenBaseKey (Microsoft.Win32.RegistryHive, Microsoft.Win32.RegistryView)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "OpenRemoteBaseKey (Microsoft.Win32.RegistryHive, CHARACTER)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "OpenRemoteBaseKey (Microsoft.Win32.RegistryHive, CHARACTER, Microsoft.Win32.RegistryView)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle)",
        "returnType": "Microsoft.Win32.RegistryKey"
      },
      {
        "name": "FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle, Microsoft.Win32.RegistryView)",
        "returnType": "Microsoft.Win32.RegistryKey"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryValueOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryKeyPermissionCheck",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryValueKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryView",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeFileHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeRegistryHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeWaitHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.CriticalHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.CriticalHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeAccessTokenHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.AggregateException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBaseException ()",
        "returnType": "System.Exception"
      },
      {
        "name": "Handle (System.Func)",
        "returnType": "System.Void"
      },
      {
        "name": "Flatten ()",
        "returnType": "System.AggregateException"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.AppContext",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "TryGetSwitch (CHARACTER, output System.Boolean&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetSwitch (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "GetData (CHARACTER)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Object",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Equals (System.Object, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ReferenceEquals (System.Object, System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.ICloneable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`3",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`4",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke ()",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`3",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`4",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`5",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`5",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`6",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`7",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?, ?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Action`8",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?, ?, ?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`6",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`7",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`8",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Func`9",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?, ?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, ?, ?, ?, ?, ?, ?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Comparison`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginInvoke (?, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Converter`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Predicate`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Array",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetValue (System.Int32[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (INTEGER, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (INT64)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (INT64, INT64)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (INT64, INT64, INT64)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (System.Int64[])",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, INT64, INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Int64[])",
        "returnType": "System.Void"
      },
      {
        "name": "GetLongLength (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetLength (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetUpperBound (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetLowerBound (INTEGER)",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateInstance (System.Type, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "CreateInstance (System.Type, INTEGER, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "CreateInstance (System.Type, System.Int32[])",
        "returnType": "MEMPTR"
      },
      {
        "name": "CreateInstance (System.Type, System.Int64[])",
        "returnType": "MEMPTR"
      },
      {
        "name": "CreateInstance (System.Type, System.Int32[], System.Int32[])",
        "returnType": "MEMPTR"
      },
      {
        "name": "Copy (MEMPTR, MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (MEMPTR, INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ConstrainedCopy (MEMPTR, INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (MEMPTR, MEMPTR, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (MEMPTR, INT64, MEMPTR, INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (MEMPTR, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (MEMPTR, INTEGER, INTEGER, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (MEMPTR, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (MEMPTR, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (MEMPTR, System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (MEMPTR, System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (MEMPTR, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (MEMPTR, System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (MEMPTR, System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reverse (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR, System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR, MEMPTR, System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR, INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "AsReadOnly (?)",
        "returnType": "?"
      },
      {
        "name": "Resize (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateInstance (System.Type, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "BinarySearch (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (?, ?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (?, INTEGER, INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (?, INTEGER, INTEGER, ?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "ConvertAll (?, ?)",
        "returnType": "?"
      },
      {
        "name": "Empty ()",
        "returnType": "?"
      },
      {
        "name": "Exists (?, ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Find (?, ?)",
        "returnType": "?"
      },
      {
        "name": "FindAll (?, ?)",
        "returnType": "?"
      },
      {
        "name": "FindIndex (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindIndex (?, INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindIndex (?, INTEGER, INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindLast (?, ?)",
        "returnType": "?"
      },
      {
        "name": "FindLastIndex (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindLastIndex (?, INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindLastIndex (?, INTEGER, INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "ForEach (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (?, ?, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (?, ?, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (?, ?, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (?, ?, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Sort (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, ?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, ?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, INTEGER, INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, ?, INTEGER, INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "TrueForAll (?, ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (MEMPTR, INTEGER, INTEGER, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reverse (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (MEMPTR, MEMPTR, INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ArraySegment`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ArraySegment)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.ArraySegment, System.ArraySegment)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.ArraySegment, System.ArraySegment)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.IComparable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.IComparable`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CompareTo (?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.IEquatable`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Equals (?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`3",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`4",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`5",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`6",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`7",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Tuple`8",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Create ()",
        "returnType": "System.ValueTuple"
      },
      {
        "name": "Create (?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, ?, ?, ?, ?, ?, ?, ?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`2",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`3",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`4",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`5",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`6",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`7",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ValueTuple`8",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ValueTuple)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.ValueTuple)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TupleExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Deconstruct (?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Deconstruct (?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToValueTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      },
      {
        "name": "ToTuple (?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.String",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (CHARACTER, System.StringComparison)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (INTEGER, System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToCharArray ()",
        "returnType": "System.Char[]"
      },
      {
        "name": "ToCharArray (INTEGER, INTEGER)",
        "returnType": "System.Char[]"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Split (System.Char[])",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (System.Char[], INTEGER)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (System.Char[], System.StringSplitOptions)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (System.Char[], INTEGER, System.StringSplitOptions)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (System.String[], System.StringSplitOptions)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (System.String[], INTEGER, System.StringSplitOptions)",
        "returnType": "System.String[]"
      },
      {
        "name": "Substring (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Substring (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Trim (System.Char[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "TrimStart (System.Char[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "TrimEnd (System.Char[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsNormalized ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNormalized (System.Text.NormalizationForm)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Normalize ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Normalize (System.Text.NormalizationForm)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Contains (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EndsWith (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EndsWith (CHARACTER, System.StringComparison)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EndsWith (CHARACTER, LOGICAL, System.Globalization.CultureInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IndexOf (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOfAny (System.Char[])",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOfAny (System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, INTEGER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, INTEGER, INTEGER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOfAny (System.Char[])",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOfAny (System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, INTEGER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, INTEGER, INTEGER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "PadLeft (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PadLeft (INTEGER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PadRight (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PadRight (INTEGER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "StartsWith (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "StartsWith (CHARACTER, System.StringComparison)",
        "returnType": "LOGICAL"
      },
      {
        "name": "StartsWith (CHARACTER, LOGICAL, System.Globalization.CultureInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToLower ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToLower (System.Globalization.CultureInfo)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToLowerInvariant ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUpper ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUpper (System.Globalization.CultureInfo)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUpperInvariant ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Trim ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Insert (INTEGER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Remove (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Remove (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.CharEnumerator"
      },
      {
        "name": "IndexOf (CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOfAny (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOfAny (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "Join (CHARACTER, System.String[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "Join (CHARACTER, System.Object[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "Join (CHARACTER, System.Collections.Generic.IEnumerable)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Join (CHARACTER, System.String[], INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (CHARACTER, CHARACTER, System.StringComparison)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Equality (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNullOrEmpty (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNullOrWhiteSpace (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Compare (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, CHARACTER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, CHARACTER, System.Globalization.CultureInfo, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, CHARACTER, LOGICAL, System.Globalization.CultureInfo)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, CHARACTER, INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, CHARACTER, INTEGER, INTEGER, LOGICAL, System.Globalization.CultureInfo)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, CHARACTER, INTEGER, INTEGER, System.Globalization.CultureInfo, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, CHARACTER, INTEGER, INTEGER, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareOrdinal (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareOrdinal (CHARACTER, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Format (CHARACTER, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (CHARACTER, System.Object, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (System.IFormatProvider, CHARACTER, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (System.IFormatProvider, CHARACTER, System.Object, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (System.IFormatProvider, CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Copy (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (System.Object, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (System.Object, System.Object, System.Object, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (System.Object[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (System.Collections.Generic.IEnumerable)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (CHARACTER, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (System.String[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "Intern (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsInterned (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Join (CHARACTER, ?)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (?)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Concat (System.Object, System.Object, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (CHARACTER, System.Object[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (System.IFormatProvider, CHARACTER, System.Object[])",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.StringSplitOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.StringComparer",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Object, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (CHARACTER)",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (System.Globalization.CultureInfo, LOGICAL)",
        "returnType": "System.StringComparer"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.StringComparison",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Exception",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBaseException ()",
        "returnType": "System.Exception"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DateTime",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.TimeSpan)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddDays (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddHours (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddMilliseconds (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddMinutes (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddMonths (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddSeconds (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddTicks (INT64)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDaylightSavingTime ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBinary ()",
        "returnType": "INT64"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Subtract (DATETIME)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "Subtract (System.TimeSpan)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToOADate ()",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToFileTime ()",
        "returnType": "INT64"
      },
      {
        "name": "ToFileTimeUtc ()",
        "returnType": "INT64"
      },
      {
        "name": "ToLocalTime ()",
        "returnType": "DATETIME"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUniversalTime ()",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDateTimeFormats ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDateTimeFormats (System.IFormatProvider)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDateTimeFormats (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDateTimeFormats (CHARACTER, System.IFormatProvider)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      },
      {
        "name": "ToLongDateString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToLongTimeString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToShortTimeString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToShortDateString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Compare (DATETIME, DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "DaysInMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (DATETIME, DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromBinary (INT64)",
        "returnType": "DATETIME"
      },
      {
        "name": "FromFileTime (INT64)",
        "returnType": "DATETIME"
      },
      {
        "name": "FromFileTimeUtc (INT64)",
        "returnType": "DATETIME"
      },
      {
        "name": "FromOADate (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "SpecifyKind (DATETIME, System.DateTimeKind)",
        "returnType": "DATETIME"
      },
      {
        "name": "IsLeapYear (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "DATETIME"
      },
      {
        "name": "ParseExact (CHARACTER, CHARACTER, System.IFormatProvider)",
        "returnType": "DATETIME"
      },
      {
        "name": "TryParse (CHARACTER, output System.DateTime&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Addition (DATETIME, System.TimeSpan)",
        "returnType": "DATETIME"
      },
      {
        "name": "op_Subtraction (DATETIME, System.TimeSpan)",
        "returnType": "DATETIME"
      },
      {
        "name": "op_Subtraction (DATETIME, DATETIME)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "op_Equality (DATETIME, DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (DATETIME, DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThan (DATETIME, DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThanOrEqual (DATETIME, DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThan (DATETIME, DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThanOrEqual (DATETIME, DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles)",
        "returnType": "DATETIME"
      },
      {
        "name": "ParseExact (CHARACTER, CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles)",
        "returnType": "DATETIME"
      },
      {
        "name": "ParseExact (CHARACTER, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)",
        "returnType": "DATETIME"
      },
      {
        "name": "TryParseExact (CHARACTER, CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles, output System.DateTime&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParseExact (CHARACTER, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, output System.DateTime&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles, output System.DateTime&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DateTimeKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DateTimeOffset",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToOffset (System.TimeSpan)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "Add (System.TimeSpan)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddDays (DECIMAL)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddHours (DECIMAL)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddMilliseconds (DECIMAL)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddMinutes (DECIMAL)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddMonths (INTEGER)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddSeconds (DECIMAL)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddTicks (INT64)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "AddYears (INTEGER)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "CompareTo (System.DateTimeOffset)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EqualsExact (System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Subtract (System.DateTimeOffset)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "Subtract (System.TimeSpan)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ToFileTime ()",
        "returnType": "INT64"
      },
      {
        "name": "ToLocalTime ()",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUniversalTime ()",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ToUnixTimeSeconds ()",
        "returnType": "INT64"
      },
      {
        "name": "ToUnixTimeMilliseconds ()",
        "returnType": "INT64"
      }
    ],
    "staticMethods": [
      {
        "name": "Compare (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromFileTime (INT64)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ParseExact (CHARACTER, CHARACTER, System.IFormatProvider)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "TryParse (CHARACTER, output System.DateTimeOffset&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Implicit (DATETIME)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "op_Addition (System.DateTimeOffset, System.TimeSpan)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "op_Subtraction (System.DateTimeOffset, System.TimeSpan)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "op_Subtraction (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "op_Equality (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThan (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThanOrEqual (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThan (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThanOrEqual (System.DateTimeOffset, System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ParseExact (CHARACTER, CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ParseExact (CHARACTER, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "TryParse (CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles, output System.DateTimeOffset&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParseExact (CHARACTER, CHARACTER, System.IFormatProvider, System.Globalization.DateTimeStyles, output System.DateTimeOffset&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParseExact (CHARACTER, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, output System.DateTimeOffset&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromUnixTimeSeconds (INT64)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "FromUnixTimeMilliseconds (INT64)",
        "returnType": "System.DateTimeOffset"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.SystemException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.OutOfMemoryException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.StackOverflowException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.DataMisalignedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ExecutionEngineException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Delegate",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DynamicInvoke (System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetInvocationList ()",
        "returnType": "System.Delegate[]"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Combine (System.Delegate, System.Delegate)",
        "returnType": "System.Delegate"
      },
      {
        "name": "Combine (System.Delegate[])",
        "returnType": "System.Delegate"
      },
      {
        "name": "Remove (System.Delegate, System.Delegate)",
        "returnType": "System.Delegate"
      },
      {
        "name": "RemoveAll (System.Delegate, System.Delegate)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Object, CHARACTER)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Object, CHARACTER, LOGICAL)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Object, CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Type, CHARACTER)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Type, CHARACTER, LOGICAL)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Type, CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Reflection.MethodInfo, LOGICAL)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Object, System.Reflection.MethodInfo, LOGICAL)",
        "returnType": "System.Delegate"
      },
      {
        "name": "op_Equality (System.Delegate, System.Delegate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Delegate, System.Delegate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateDelegate (System.Type, System.Reflection.MethodInfo)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Object, System.Reflection.MethodInfo)",
        "returnType": "System.Delegate"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.MulticastDelegate",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetInvocationList ()",
        "returnType": "System.Delegate[]"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.MulticastDelegate, System.MulticastDelegate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.MulticastDelegate, System.MulticastDelegate)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.MemberAccessException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Activator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CreateInstance (System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (System.Type, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (System.Type, System.Object[], System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (System.Type, LOGICAL)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (System.AppDomain, CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (System.AppDomain, CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstance (System.AppDomain, CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (System.AppDomain, CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (System.AppDomain, CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle",
        "obsolete": {
          "message": "Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstanceFrom (System.AppDomain, CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (System.ActivationContext)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (System.ActivationContext, System.String[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateComInstanceFrom (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateComInstanceFrom (CHARACTER, CHARACTER, MEMPTR, System.Configuration.Assemblies.AssemblyHashAlgorithm)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "GetObject (System.Type, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetObject (System.Type, CHARACTER, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.AccessViolationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ApplicationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ResolveEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.AssemblyLoadEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ResolveEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ResolveEventArgs)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "BeginInvoke (System.Object, System.ResolveEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Reflection.Assembly"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.AssemblyLoadEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.AssemblyLoadEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AssemblyLoadEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.AppDomainInitializer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.String[])",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.String[], System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.AppDomain",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "AssemblyLoad",
      "TypeResolve",
      "ResourceResolve",
      "AssemblyResolve",
      "ReflectionOnlyAssemblyResolve",
      "ProcessExit",
      "DomainUnload",
      "UnhandledException",
      "FirstChanceException"
    ],
    "methods": [
      {
        "name": "add_AssemblyLoad (System.AssemblyLoadEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_AssemblyLoad (System.AssemblyLoadEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TypeResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TypeResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ResourceResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ResourceResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_AssemblyResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_AssemblyResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Assembly level declarative security is obsolete and is no longer enforced by the CLR by default.  See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Assembly level declarative security is obsolete and is no longer enforced by the CLR by default.  See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of DefineDynamicAssembly which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkId=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Assembly level declarative security is obsolete and is no longer enforced by the CLR by default. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Assembly level declarative security is obsolete and is no longer enforced by the CLR by default. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Assembly level declarative security is obsolete and is no longer enforced by the CLR by default.  Please see http:\/\/go.microsoft.com\/fwlink\/?LinkId=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet, LOGICAL)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Assembly level declarative security is obsolete and is no longer enforced by the CLR by default. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "Load (System.Reflection.AssemblyName)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR, MEMPTR)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR, MEMPTR, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkId=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "Load (System.Reflection.AssemblyName, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "Load (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ExecuteAssembly (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecuteAssembly (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of ExecuteAssembly which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ExecuteAssembly (CHARACTER, System.Security.Policy.Evidence, System.String[])",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of ExecuteAssembly which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "GetAssemblies ()",
        "returnType": "System.Reflection.Assembly[]"
      },
      {
        "name": "AppendPrivatePath (CHARACTER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain.AppendPrivatePath has been deprecated. Please investigate the use of AppDomainSetup.PrivateBinPath instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "ClearPrivatePath ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain.ClearPrivatePath has been deprecated. Please investigate the use of AppDomainSetup.PrivateBinPath instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "ClearShadowCopyPath ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain.ClearShadowCopyPath has been deprecated. Please investigate the use of AppDomainSetup.ShadowCopyDirectories instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SetCachePath (CHARACTER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain.SetCachePath has been deprecated. Please investigate the use of AppDomainSetup.CachePath instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SetData (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetData (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "SetAppDomainPolicy (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain policy levels are obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "SetThreadPrincipal (System.Security.Principal.IPrincipal)",
        "returnType": "System.Void"
      },
      {
        "name": "SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy)",
        "returnType": "System.Void"
      },
      {
        "name": "InitializeLifetimeService ()",
        "returnType": "System.Object"
      },
      {
        "name": "DoCallBack (System.CrossAppDomainDelegate)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ProcessExit (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ProcessExit (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DomainUnload (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DomainUnload (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UnhandledException (System.UnhandledExceptionEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UnhandledException (System.UnhandledExceptionEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "SetShadowCopyPath (CHARACTER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain.SetShadowCopyPath has been deprecated. Please investigate the use of AppDomainSetup.ShadowCopyDirectories instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "add_ReflectionOnlyAssemblyResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ReflectionOnlyAssemblyResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Collections.Generic.IEnumerable, System.Security.SecurityContextSource)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet, LOGICAL, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder",
        "obsolete": {
          "message": "Assembly level declarative security is obsolete and is no longer enforced by the CLR by default. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, LOGICAL, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "ApplyPolicy (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CreateComInstanceFrom (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateComInstanceFrom (CHARACTER, CHARACTER, MEMPTR, System.Configuration.Assemblies.AssemblyHashAlgorithm)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "ExecuteAssembly (CHARACTER, System.String[])",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecuteAssembly (CHARACTER, System.Security.Policy.Evidence, System.String[], MEMPTR, System.Configuration.Assemblies.AssemblyHashAlgorithm)",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of ExecuteAssembly which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ExecuteAssembly (CHARACTER, System.String[], MEMPTR, System.Configuration.Assemblies.AssemblyHashAlgorithm)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecuteAssemblyByName (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecuteAssemblyByName (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of ExecuteAssemblyByName which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ExecuteAssemblyByName (CHARACTER, System.Security.Policy.Evidence, System.String[])",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of ExecuteAssemblyByName which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ExecuteAssemblyByName (CHARACTER, System.String[])",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecuteAssemblyByName (System.Reflection.AssemblyName, System.Security.Policy.Evidence, System.String[])",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of ExecuteAssemblyByName which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ExecuteAssemblyByName (System.Reflection.AssemblyName, System.String[])",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReflectionOnlyGetAssemblies ()",
        "returnType": "System.Reflection.Assembly[]"
      },
      {
        "name": "IsFinalizingForUnload ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetData (CHARACTER, System.Object, System.Security.IPermission)",
        "returnType": "System.Void"
      },
      {
        "name": "IsCompatibilitySwitchSet (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "add_FirstChanceException (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_FirstChanceException (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "SetShadowCopyFiles ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain.SetShadowCopyFiles has been deprecated. Please investigate the use of AppDomainSetup.ShadowCopyFiles instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SetDynamicBase (CHARACTER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "AppDomain.SetDynamicBase has been deprecated. Please investigate the use of AppDomainSetup.DynamicBase instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "CreateInstanceAndUnwrap (CHARACTER, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstanceAndUnwrap (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstanceAndUnwrap (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Object",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceAndUnwrap which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstanceAndUnwrap (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstanceFromAndUnwrap (CHARACTER, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstanceFromAndUnwrap (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstanceFromAndUnwrap (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Object",
        "obsolete": {
          "message": "Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFromAndUnwrap which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "CreateInstanceFromAndUnwrap (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "IsDefaultAppDomain ()",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "Unload (System.AppDomain)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateDomain (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.AppDomain"
      },
      {
        "name": "CreateDomain (CHARACTER)",
        "returnType": "System.AppDomain"
      },
      {
        "name": "CreateDomain (CHARACTER, System.Security.Policy.Evidence, System.AppDomainSetup)",
        "returnType": "System.AppDomain"
      },
      {
        "name": "CreateDomain (CHARACTER, System.Security.Policy.Evidence, System.AppDomainSetup, System.Security.PermissionSet, System.Security.Policy.StrongName[])",
        "returnType": "System.AppDomain"
      },
      {
        "name": "GetCurrentThreadId ()",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "AppDomain.GetCurrentThreadId has been deprecated because it does not provide a stable Id when managed threads are running on fibers (aka lightweight threads). To get a stable identifier for a managed thread, use the ManagedThreadId property on Thread.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "CreateDomain (CHARACTER, System.Security.Policy.Evidence, CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "System.AppDomain"
      },
      {
        "name": "CreateDomain (CHARACTER, System.Security.Policy.Evidence, CHARACTER, CHARACTER, LOGICAL, System.AppDomainInitializer, System.String[])",
        "returnType": "System.AppDomain"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.CrossAppDomainDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.AppDomainManagerInitializationOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.AppDomainManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateDomain (CHARACTER, System.Security.Policy.Evidence, System.AppDomainSetup)",
        "returnType": "System.AppDomain"
      },
      {
        "name": "InitializeNewDomain (System.AppDomainSetup)",
        "returnType": "System.Void"
      },
      {
        "name": "CheckSecuritySettings (System.Security.SecurityState)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System._AppDomain",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "DomainUnload",
      "AssemblyLoad",
      "ProcessExit",
      "TypeResolve",
      "ResourceResolve",
      "AssemblyResolve",
      "UnhandledException"
    ],
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "InitializeLifetimeService ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetLifetimeService ()",
        "returnType": "System.Object"
      },
      {
        "name": "add_DomainUnload (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DomainUnload (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_AssemblyLoad (System.AssemblyLoadEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_AssemblyLoad (System.AssemblyLoadEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ProcessExit (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ProcessExit (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TypeResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TypeResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ResourceResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ResourceResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_AssemblyResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_AssemblyResolve (System.ResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UnhandledException (System.UnhandledExceptionEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UnhandledException (System.UnhandledExceptionEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, CHARACTER, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet, LOGICAL)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstanceFrom (CHARACTER, CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "Load (System.Reflection.AssemblyName)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR, MEMPTR)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR, MEMPTR, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (System.Reflection.AssemblyName, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "ExecuteAssembly (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecuteAssembly (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecuteAssembly (CHARACTER, System.Security.Policy.Evidence, System.String[])",
        "returnType": "INTEGER"
      },
      {
        "name": "GetAssemblies ()",
        "returnType": "System.Reflection.Assembly[]"
      },
      {
        "name": "AppendPrivatePath (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ClearPrivatePath ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetShadowCopyPath (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ClearShadowCopyPath ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetCachePath (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetData (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetData (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "SetAppDomainPolicy (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "SetThreadPrincipal (System.Security.Principal.IPrincipal)",
        "returnType": "System.Void"
      },
      {
        "name": "SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy)",
        "returnType": "System.Void"
      },
      {
        "name": "DoCallBack (System.CrossAppDomainDelegate)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.AppDomainSetup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetConfigurationBytes ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetConfigurationBytes (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCompatibilitySwitches (System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "SetNativeFunction (CHARACTER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.IAppDomainSetup",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.LoaderOptimization",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.LoaderOptimizationAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.AppDomainUnloadedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ActivationContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "CreatePartialActivationContext (System.ApplicationIdentity)",
        "returnType": "System.ActivationContext"
      },
      {
        "name": "CreatePartialActivationContext (System.ApplicationIdentity, System.String[])",
        "returnType": "System.ActivationContext"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ApplicationIdentity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ApplicationId",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.ApplicationId"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ArgumentException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ArgumentNullException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ArgumentOutOfRangeException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ArgIterator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetNextArg ()",
        "returnType": "System.TypedReference"
      },
      {
        "name": "GetNextArg (System.RuntimeTypeHandle)",
        "returnType": "System.TypedReference"
      },
      {
        "name": "End ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetNextArgType ()",
        "returnType": "System.RuntimeTypeHandle"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetRemainingCount ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ArithmeticException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ArrayTypeMismatchException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.AsyncCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.IAsyncResult, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Attribute",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Match (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo, System.Type)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo, System.Type, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "IsDefined (System.Reflection.MemberInfo, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.MemberInfo, System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.MemberInfo, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.MemberInfo, System.Type, LOGICAL)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo, System.Type)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo, System.Type, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "IsDefined (System.Reflection.ParameterInfo, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.ParameterInfo, System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.ParameterInfo, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.ParameterInfo, System.Type, LOGICAL)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module, System.Type)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module, System.Type, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "IsDefined (System.Reflection.Module, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.Module, System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.Module, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.Module, System.Type, LOGICAL)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly, System.Type)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly, System.Type, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly, LOGICAL)",
        "returnType": "System.Attribute[]"
      },
      {
        "name": "IsDefined (System.Reflection.Assembly, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.Assembly, System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.Assembly, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.Assembly, System.Type, LOGICAL)",
        "returnType": "System.Attribute"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.AttributeTargets",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.AttributeUsageAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.BadImageFormatException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.BitConverter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetBytes (LOGICAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (INT64)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (INT64)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (DECIMAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (DECIMAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ToChar (MEMPTR, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToInt16 (MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 (MEMPTR, INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt16 (MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt64 (MEMPTR, INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToSingle (MEMPTR, INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (MEMPTR, INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToString (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (MEMPTR)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (MEMPTR, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToBoolean (MEMPTR, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DoubleToInt64Bits (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "Int64BitsToDouble (INT64)",
        "returnType": "DECIMAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Boolean",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, output System.Boolean&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Buffer",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "BlockCopy (MEMPTR, INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetByte (MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "SetByte (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ByteLength (MEMPTR)",
        "returnType": "INTEGER"
      },
      {
        "name": "MemoryCopy (System.Void*, System.Void*, INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "MemoryCopy (System.Void*, System.Void*, INT64, INT64)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Byte",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryParse (CHARACTER, output System.Byte&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.Byte&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.CannotUnloadAppDomainException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Char",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "TryParse (CHARACTER, output System.Char&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDigit (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLetter (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsWhiteSpace (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsUpper (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLower (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsPunctuation (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLetterOrDigit (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToUpper (CHARACTER, System.Globalization.CultureInfo)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUpper (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUpperInvariant (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToLower (CHARACTER, System.Globalization.CultureInfo)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToLower (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToLowerInvariant (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsControl (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsControl (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDigit (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLetter (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLetterOrDigit (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLower (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNumber (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNumber (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsPunctuation (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSeparator (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSeparator (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSurrogate (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSurrogate (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSymbol (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSymbol (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsUpper (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsWhiteSpace (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetUnicodeCategory (CHARACTER)",
        "returnType": "System.Globalization.UnicodeCategory"
      },
      {
        "name": "GetUnicodeCategory (CHARACTER, INTEGER)",
        "returnType": "System.Globalization.UnicodeCategory"
      },
      {
        "name": "GetNumericValue (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "GetNumericValue (CHARACTER, INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "IsHighSurrogate (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsHighSurrogate (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLowSurrogate (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLowSurrogate (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSurrogatePair (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSurrogatePair (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFromUtf32 (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ConvertToUtf32 (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ConvertToUtf32 (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CharEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.CLSCompliantAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.TypeUnloadedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.__ComObject",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Console",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "CancelKeyPress"
    ],
    "staticMethods": [
      {
        "name": "Beep ()",
        "returnType": "System.Void"
      },
      {
        "name": "Beep (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ResetColor ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveBufferArea (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "MoveBufferArea (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, CHARACTER, System.ConsoleColor, System.ConsoleColor)",
        "returnType": "System.Void"
      },
      {
        "name": "SetBufferSize (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetWindowSize (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetWindowPosition (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCursorPosition (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ReadKey ()",
        "returnType": "System.ConsoleKeyInfo"
      },
      {
        "name": "ReadKey (LOGICAL)",
        "returnType": "System.ConsoleKeyInfo"
      },
      {
        "name": "add_CancelKeyPress (System.ConsoleCancelEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_CancelKeyPress (System.ConsoleCancelEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenStandardError ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenStandardError (INTEGER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenStandardInput ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenStandardInput (INTEGER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenStandardOutput ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenStandardOutput (INTEGER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "SetIn (System.IO.TextReader)",
        "returnType": "System.Void"
      },
      {
        "name": "SetOut (System.IO.TextWriter)",
        "returnType": "System.Void"
      },
      {
        "name": "SetError (System.IO.TextWriter)",
        "returnType": "System.Void"
      },
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "WriteLine ()",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ConsoleCancelEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ConsoleCancelEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ConsoleCancelEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ConsoleCancelEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ConsoleColor",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ConsoleKey",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ConsoleKeyInfo",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ConsoleKeyInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.ConsoleKeyInfo, System.ConsoleKeyInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.ConsoleKeyInfo, System.ConsoleKeyInfo)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ConsoleModifiers",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ConsoleSpecialKey",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ContextMarshalException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Base64FormattingOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Convert",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetTypeCode (System.Object)",
        "returnType": "System.TypeCode"
      },
      {
        "name": "IsDBNull (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ChangeType (System.Object, System.TypeCode)",
        "returnType": "System.Object"
      },
      {
        "name": "ChangeType (System.Object, System.TypeCode, System.IFormatProvider)",
        "returnType": "System.Object"
      },
      {
        "name": "ChangeType (System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "ChangeType (System.Object, System.Type, System.IFormatProvider)",
        "returnType": "System.Object"
      },
      {
        "name": "ToBoolean (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (System.Object, System.IFormatProvider)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (CHARACTER, System.IFormatProvider)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToBoolean (DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToChar (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (System.Object, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INT64)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (INT64)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (DECIMAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (DECIMAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (DECIMAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToChar (DATETIME)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToSByte (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (System.Object, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (System.Object, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (System.Object, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (System.Object, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (System.Object, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (System.Object, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 (System.Object)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (System.Object, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (LOGICAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (CHARACTER, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "ToInt64 (DATETIME)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (System.Object)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (System.Object, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (LOGICAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (CHARACTER, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (DATETIME)",
        "returnType": "INT64"
      },
      {
        "name": "ToSingle (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (System.Object, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (CHARACTER, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (LOGICAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (DATETIME)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (System.Object, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (CHARACTER, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (LOGICAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (DATETIME)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (System.Object, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (CHARACTER, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (LOGICAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (DATETIME)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDateTime (DATETIME)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (System.Object)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (System.Object, System.IFormatProvider)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (CHARACTER, System.IFormatProvider)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INT64)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (INT64)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (LOGICAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToDateTime (DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToString (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.Object, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INT64)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INT64, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INT64)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INT64, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DECIMAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DECIMAL, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DECIMAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DECIMAL, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DECIMAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DECIMAL, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DATETIME)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (DATETIME, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToByte (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToSByte (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 (CHARACTER, INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (CHARACTER, INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ToString (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INT64, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToBase64String (MEMPTR)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToBase64String (MEMPTR, System.Base64FormattingOptions)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToBase64String (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToBase64String (MEMPTR, INTEGER, INTEGER, System.Base64FormattingOptions)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToBase64CharArray (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToBase64CharArray (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER, System.Base64FormattingOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "FromBase64String (CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "FromBase64CharArray (System.Char[], INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ToString (LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (LOGICAL, System.IFormatProvider)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.ContextBoundObject",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ContextStaticAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DayOfWeek",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.DBNull",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Decimal",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "ToByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToOACurrency (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "FromOACurrency (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Add (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Ceiling (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Compare (DECIMAL, DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Divide (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Equals (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Floor (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "TryParse (CHARACTER, output System.Decimal&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.Decimal&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetBits (DECIMAL)",
        "returnType": "System.Int32[]"
      },
      {
        "name": "Remainder (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Multiply (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Negate (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, System.MidpointRounding)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, INTEGER, System.MidpointRounding)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Subtract (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSByte (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt16 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt64 (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "Truncate (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Implicit (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "INT64"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Explicit (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_UnaryPlus (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_UnaryNegation (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Increment (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Decrement (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Addition (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Subtraction (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Multiply (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Division (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Modulus (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Equality (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThan (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThanOrEqual (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThan (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThanOrEqual (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDouble (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToSingle (DECIMAL)",
        "returnType": "DECIMAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ArithmeticException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.DivideByZeroException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Double",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "IsInfinity (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsPositiveInfinity (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNegativeInfinity (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNaN (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Equality (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThan (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThan (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThanOrEqual (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThanOrEqual (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "TryParse (CHARACTER, output System.Double&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.Double&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.DuplicateWaitObjectException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Enum",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "The provider argument is not used. Please use ToString(String).",
          "error": false
        }
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "The provider argument is not used. Please use ToString().",
          "error": false
        }
      },
      {
        "name": "HasFlag (System.Enum)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (System.Type, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "Parse (System.Type, CHARACTER, LOGICAL)",
        "returnType": "System.Object"
      },
      {
        "name": "GetUnderlyingType (System.Type)",
        "returnType": "System.Type"
      },
      {
        "name": "GetValues (System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetName (System.Type, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetNames (System.Type)",
        "returnType": "System.String[]"
      },
      {
        "name": "ToObject (System.Type, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "IsDefined (System.Type, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Format (System.Type, System.Object, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToObject (System.Type, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToObject (System.Type, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToObject (System.Type, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToObject (System.Type, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToObject (System.Type, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToObject (System.Type, INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToObject (System.Type, INT64)",
        "returnType": "System.Object"
      },
      {
        "name": "ToObject (System.Type, INT64)",
        "returnType": "System.Object"
      },
      {
        "name": "TryParse (CHARACTER, output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, LOGICAL, output ?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.TypeLoadException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.EntryPointNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.TypeLoadException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.DllNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.EnvironmentVariableTarget",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Environment",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Exit (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnvironmentVariable (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEnvironmentVariables ()",
        "returnType": "System.Collections.IDictionary"
      },
      {
        "name": "SetEnvironmentVariable (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLogicalDrives ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFolderPath (System.Environment+SpecialFolder)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetFolderPath (System.Environment+SpecialFolder, System.Environment+SpecialFolderOption)",
        "returnType": "CHARACTER"
      },
      {
        "name": "FailFast (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "FailFast (CHARACTER, System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "ExpandEnvironmentVariables (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEnvironmentVariable (CHARACTER, System.EnvironmentVariableTarget)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEnvironmentVariables (System.EnvironmentVariableTarget)",
        "returnType": "System.Collections.IDictionary"
      },
      {
        "name": "SetEnvironmentVariable (CHARACTER, CHARACTER, System.EnvironmentVariableTarget)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCommandLineArgs ()",
        "returnType": "System.String[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.EventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.EventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BeginInvoke (System.Object, System.EventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object, System.EventArgs)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.EventHandler`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, ?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MemberAccessException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.FieldAccessException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.FlagsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.FormatException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.FormattableString",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetArguments ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetArgument (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Invariant (System.FormattableString)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.GCCollectionMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.GCNotificationStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.GC",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "AddMemoryPressure (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveMemoryPressure (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Collect (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Collect ()",
        "returnType": "System.Void"
      },
      {
        "name": "Collect (INTEGER, System.GCCollectionMode)",
        "returnType": "System.Void"
      },
      {
        "name": "Collect (INTEGER, System.GCCollectionMode, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Collect (INTEGER, System.GCCollectionMode, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "CollectionCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "KeepAlive (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetGeneration (System.WeakReference)",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitForPendingFinalizers ()",
        "returnType": "System.Void"
      },
      {
        "name": "SuppressFinalize (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ReRegisterForFinalize (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTotalMemory (LOGICAL)",
        "returnType": "INT64"
      },
      {
        "name": "GetAllocatedBytesForCurrentThread ()",
        "returnType": "INT64"
      },
      {
        "name": "RegisterForFullGCNotification (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CancelFullGCNotification ()",
        "returnType": "System.Void"
      },
      {
        "name": "WaitForFullGCApproach ()",
        "returnType": "System.GCNotificationStatus"
      },
      {
        "name": "WaitForFullGCApproach (INTEGER)",
        "returnType": "System.GCNotificationStatus"
      },
      {
        "name": "WaitForFullGCComplete ()",
        "returnType": "System.GCNotificationStatus"
      },
      {
        "name": "WaitForFullGCComplete (INTEGER)",
        "returnType": "System.GCNotificationStatus"
      },
      {
        "name": "TryStartNoGCRegion (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryStartNoGCRegion (INT64, INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryStartNoGCRegion (INT64, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryStartNoGCRegion (INT64, INT64, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EndNoGCRegion ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetGeneration (System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Guid",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToByteArray ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Guid)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (System.Guid)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Guid"
      },
      {
        "name": "TryParse (CHARACTER, output System.Guid&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ParseExact (CHARACTER, CHARACTER)",
        "returnType": "System.Guid"
      },
      {
        "name": "TryParseExact (CHARACTER, CHARACTER, output System.Guid&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Equality (System.Guid, System.Guid)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Guid, System.Guid)",
        "returnType": "LOGICAL"
      },
      {
        "name": "NewGuid ()",
        "returnType": "System.Guid"
      }
    ]
  },
  {
    "name": "System.IAsyncResult",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ICustomFormatter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Format (CHARACTER, System.Object, System.IFormatProvider)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "name": "System.IDisposable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.IFormatProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetFormat (System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.IFormattable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IndexOutOfRangeException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.IObservable`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Subscribe (?)",
        "returnType": "System.IDisposable"
      }
    ]
  },
  {
    "name": "System.IObserver`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "OnNext (?)",
        "returnType": "System.Void"
      },
      {
        "name": "OnError (System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "OnCompleted ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.IProgress`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Report (?)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.OutOfMemoryException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.InsufficientMemoryException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.InsufficientExecutionStackException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Lazy`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Int16",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryParse (CHARACTER, output System.Int16&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.Int16&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Int32",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryParse (CHARACTER, output System.Int32&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.Int32&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Int64",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INT64"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "TryParse (CHARACTER, output System.Int64&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.Int64&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IntPtr",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 ()",
        "returnType": "INT64"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToPointer ()",
        "returnType": "System.Void*"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Explicit (INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "op_Explicit (INT64)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "op_Explicit (System.Void*)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "op_Explicit (System.IntPtr)",
        "returnType": "System.Void*"
      },
      {
        "name": "op_Explicit (System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (System.IntPtr)",
        "returnType": "INT64"
      },
      {
        "name": "op_Equality (System.IntPtr, System.IntPtr)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.IntPtr, System.IntPtr)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "op_Addition (System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "Subtract (System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "op_Subtraction (System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.InvalidCastException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.InvalidOperationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.InvalidProgramException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.InvalidTimeZoneException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.IConvertible",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      },
      {
        "name": "ToBoolean (System.IFormatProvider)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToChar (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToSByte (System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 (System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "ToSingle (System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDateTime (System.IFormatProvider)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToType (System.Type, System.IFormatProvider)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.IServiceProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetService (System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.LocalDataStoreSlot",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.MarshalByRefObject",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetLifetimeService ()",
        "returnType": "System.Object"
      },
      {
        "name": "InitializeLifetimeService ()",
        "returnType": "System.Object"
      },
      {
        "name": "CreateObjRef (System.Type)",
        "returnType": "System.Runtime.Remoting.ObjRef"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Math",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Ceiling (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Floor (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, System.MidpointRounding)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, INTEGER, System.MidpointRounding)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, System.MidpointRounding)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL, INTEGER, System.MidpointRounding)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Truncate (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Truncate (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "IEEERemainder (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Abs (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Abs (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Abs (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Abs (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Abs (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Max (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Max (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Max (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Max (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Max (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Max (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Max (INT64, INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Max (INT64, INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Max (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Max (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Max (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Min (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Min (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Min (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Min (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Min (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Min (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Min (INT64, INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Min (INT64, INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Min (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Min (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Min (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Log (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Sign (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Sign (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Sign (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Sign (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "Sign (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Sign (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Sign (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "BigMul (INTEGER, INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "DivRem (INTEGER, INTEGER, output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "DivRem (INT64, INT64, output System.Int64&)",
        "returnType": "INT64"
      },
      {
        "name": "Acos (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Asin (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Atan (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Atan2 (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Cosh (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Sinh (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Tanh (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Sqrt (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Log10 (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Abs (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Abs (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Ceiling (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Cos (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Floor (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Sin (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Tan (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Round (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Log (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Exp (DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Pow (DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MemberAccessException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.MethodAccessException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.MidpointRounding",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MissingMemberException",
      "System.MemberAccessException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.MissingFieldException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MemberAccessException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.MissingMemberException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MissingMemberException",
      "System.MemberAccessException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.MissingMethodException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.MulticastNotSupportedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.NonSerializedAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ArithmeticException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.NotFiniteNumberException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.NotImplementedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.NotSupportedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.NullReferenceException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.InvalidOperationException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ObjectDisposedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ObsoleteAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.OperatingSystem",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.OperationCanceledException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ArithmeticException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.OverflowException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ParamArrayAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.PlatformID",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.NotSupportedException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.PlatformNotSupportedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Progress`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "ProgressChanged"
    ],
    "methods": [
      {
        "name": "add_ProgressChanged (?)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ProgressChanged (?)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Random",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Next ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Next (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Next (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "NextDouble ()",
        "returnType": "DECIMAL"
      },
      {
        "name": "NextBytes (MEMPTR)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.RankException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeArgumentHandle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeTypeHandle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.RuntimeTypeHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetModuleHandle ()",
        "returnType": "System.ModuleHandle"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.RuntimeTypeHandle, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Equality (System.Object, System.RuntimeTypeHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.RuntimeTypeHandle, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Object, System.RuntimeTypeHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeMethodHandle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetFunctionPointer ()",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.RuntimeMethodHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.RuntimeMethodHandle, System.RuntimeMethodHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.RuntimeMethodHandle, System.RuntimeMethodHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeFieldHandle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.RuntimeFieldHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.RuntimeFieldHandle, System.RuntimeFieldHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.RuntimeFieldHandle, System.RuntimeFieldHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ModuleHandle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ModuleHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetRuntimeTypeHandleFromMetadataToken (INTEGER)",
        "returnType": "System.RuntimeTypeHandle"
      },
      {
        "name": "ResolveTypeHandle (INTEGER)",
        "returnType": "System.RuntimeTypeHandle"
      },
      {
        "name": "ResolveTypeHandle (INTEGER, System.RuntimeTypeHandle[], System.RuntimeTypeHandle[])",
        "returnType": "System.RuntimeTypeHandle"
      },
      {
        "name": "GetRuntimeMethodHandleFromMetadataToken (INTEGER)",
        "returnType": "System.RuntimeMethodHandle"
      },
      {
        "name": "ResolveMethodHandle (INTEGER)",
        "returnType": "System.RuntimeMethodHandle"
      },
      {
        "name": "ResolveMethodHandle (INTEGER, System.RuntimeTypeHandle[], System.RuntimeTypeHandle[])",
        "returnType": "System.RuntimeMethodHandle"
      },
      {
        "name": "GetRuntimeFieldHandleFromMetadataToken (INTEGER)",
        "returnType": "System.RuntimeFieldHandle"
      },
      {
        "name": "ResolveFieldHandle (INTEGER)",
        "returnType": "System.RuntimeFieldHandle"
      },
      {
        "name": "ResolveFieldHandle (INTEGER, System.RuntimeTypeHandle[], System.RuntimeTypeHandle[])",
        "returnType": "System.RuntimeFieldHandle"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.ModuleHandle, System.ModuleHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.ModuleHandle, System.ModuleHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.SByte",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryParse (CHARACTER, output System.SByte&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.SByte&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.SerializableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Single",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (DECIMAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "IsInfinity (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsPositiveInfinity (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNegativeInfinity (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNaN (DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Equality (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThan (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThan (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThanOrEqual (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThanOrEqual (DECIMAL, DECIMAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "DECIMAL"
      },
      {
        "name": "TryParse (CHARACTER, output System.Single&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.Single&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.STAThreadAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.MTAThreadAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.TimeoutException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.TimeSpan",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.TimeSpan)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (System.TimeSpan)",
        "returnType": "INTEGER"
      },
      {
        "name": "Duration ()",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Negate ()",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "Subtract (System.TimeSpan)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Compare (System.TimeSpan, System.TimeSpan)",
        "returnType": "INTEGER"
      },
      {
        "name": "FromDays (DECIMAL)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "Equals (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromHours (DECIMAL)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "FromMilliseconds (DECIMAL)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "FromMinutes (DECIMAL)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "FromSeconds (DECIMAL)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "FromTicks (INT64)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "ParseExact (CHARACTER, CHARACTER, System.IFormatProvider)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "ParseExact (CHARACTER, System.String[], System.IFormatProvider)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "TryParse (CHARACTER, output System.TimeSpan&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.IFormatProvider, output System.TimeSpan&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParseExact (CHARACTER, CHARACTER, System.IFormatProvider, output System.TimeSpan&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParseExact (CHARACTER, System.String[], System.IFormatProvider, output System.TimeSpan&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_UnaryNegation (System.TimeSpan)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "op_Subtraction (System.TimeSpan, System.TimeSpan)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "op_UnaryPlus (System.TimeSpan)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "op_Addition (System.TimeSpan, System.TimeSpan)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "op_Equality (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThan (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThanOrEqual (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThan (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThanOrEqual (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ParseExact (CHARACTER, CHARACTER, System.IFormatProvider, System.Globalization.TimeSpanStyles)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "ParseExact (CHARACTER, System.String[], System.IFormatProvider, System.Globalization.TimeSpanStyles)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "TryParseExact (CHARACTER, CHARACTER, System.IFormatProvider, System.Globalization.TimeSpanStyles, output System.TimeSpan&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParseExact (CHARACTER, System.String[], System.IFormatProvider, System.Globalization.TimeSpanStyles, output System.TimeSpan&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TimeZone",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToUniversalTime (DATETIME)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToLocalTime (DATETIME)",
        "returnType": "DATETIME"
      },
      {
        "name": "IsDaylightSavingTime (DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetUtcOffset (DATETIME)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "GetDaylightChanges (INTEGER)",
        "returnType": "System.Globalization.DaylightTime"
      }
    ],
    "staticMethods": [
      {
        "name": "IsDaylightSavingTime (DATETIME, System.Globalization.DaylightTime)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TimeZoneInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAdjustmentRules ()",
        "returnType": "System.TimeZoneInfo+AdjustmentRule[]"
      },
      {
        "name": "GetAmbiguousTimeOffsets (System.DateTimeOffset)",
        "returnType": "System.TimeSpan[]"
      },
      {
        "name": "GetAmbiguousTimeOffsets (DATETIME)",
        "returnType": "System.TimeSpan[]"
      },
      {
        "name": "GetUtcOffset (System.DateTimeOffset)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "GetUtcOffset (DATETIME)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "IsAmbiguousTime (System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsAmbiguousTime (DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDaylightSavingTime (System.DateTimeOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDaylightSavingTime (DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsInvalidTime (DATETIME)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.TimeZoneInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "HasSameRules (System.TimeZoneInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToSerializedString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "ClearCachedData ()",
        "returnType": "System.Void"
      },
      {
        "name": "ConvertTimeBySystemTimeZoneId (System.DateTimeOffset, CHARACTER)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ConvertTimeBySystemTimeZoneId (DATETIME, CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ConvertTimeBySystemTimeZoneId (DATETIME, CHARACTER, CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ConvertTime (System.DateTimeOffset, System.TimeZoneInfo)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "ConvertTime (DATETIME, System.TimeZoneInfo)",
        "returnType": "DATETIME"
      },
      {
        "name": "ConvertTime (DATETIME, System.TimeZoneInfo, System.TimeZoneInfo)",
        "returnType": "DATETIME"
      },
      {
        "name": "ConvertTimeFromUtc (DATETIME, System.TimeZoneInfo)",
        "returnType": "DATETIME"
      },
      {
        "name": "ConvertTimeToUtc (DATETIME)",
        "returnType": "DATETIME"
      },
      {
        "name": "ConvertTimeToUtc (DATETIME, System.TimeZoneInfo)",
        "returnType": "DATETIME"
      },
      {
        "name": "FromSerializedString (CHARACTER)",
        "returnType": "System.TimeZoneInfo"
      },
      {
        "name": "CreateCustomTimeZone (CHARACTER, System.TimeSpan, CHARACTER, CHARACTER)",
        "returnType": "System.TimeZoneInfo"
      },
      {
        "name": "CreateCustomTimeZone (CHARACTER, System.TimeSpan, CHARACTER, CHARACTER, CHARACTER, System.TimeZoneInfo+AdjustmentRule[])",
        "returnType": "System.TimeZoneInfo"
      },
      {
        "name": "CreateCustomTimeZone (CHARACTER, System.TimeSpan, CHARACTER, CHARACTER, CHARACTER, System.TimeZoneInfo+AdjustmentRule[], LOGICAL)",
        "returnType": "System.TimeZoneInfo"
      },
      {
        "name": "GetSystemTimeZones ()",
        "returnType": "System.Collections.ObjectModel.ReadOnlyCollection"
      },
      {
        "name": "FindSystemTimeZoneById (CHARACTER)",
        "returnType": "System.TimeZoneInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.TimeZoneNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Type",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MakePointerType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeByRefType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType (INTEGER)",
        "returnType": "System.Type"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetArrayRank ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetConstructor (System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.ConstructorInfo"
      },
      {
        "name": "GetConstructor (System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.ConstructorInfo"
      },
      {
        "name": "GetConstructor (System.Type[])",
        "returnType": "System.Reflection.ConstructorInfo"
      },
      {
        "name": "GetConstructors ()",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Type[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethods ()",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields ()",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "FindInterfaces (System.Reflection.TypeFilter, System.Object)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetEvent (CHARACTER)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetProperty (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type, System.Type[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperties ()",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetNestedTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMember (CHARACTER)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.MemberTypes, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMembers ()",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetDefaultMembers ()",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "FindMembers (System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, System.Object)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetGenericParameterConstraints ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "MakeGenericType (System.Type[])",
        "returnType": "System.Type"
      },
      {
        "name": "GetGenericArguments ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetGenericTypeDefinition ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetEnumNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetEnumValues ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetEnumUnderlyingType ()",
        "returnType": "System.Type"
      },
      {
        "name": "IsEnumDefined (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsSubclassOf (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsInstanceOfType (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsAssignableFrom (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsEquivalentTo (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetInterfaceMap (System.Type)",
        "returnType": "System.Reflection.InterfaceMapping"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetConstructors (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetInterfaces ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetEvent (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetEvents (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetProperties (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetNestedTypes (System.Reflection.BindingFlags)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMembers (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetElementType ()",
        "returnType": "System.Type"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, System.Func, System.Func)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, System.Func, System.Func, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, System.Func, System.Func, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "ReflectionOnlyGetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromProgID (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromProgID (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromProgID (CHARACTER, CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromProgID (CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromCLSID (System.Guid)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromCLSID (System.Guid, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromCLSID (System.Guid, CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeFromCLSID (System.Guid, CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeCode (System.Type)",
        "returnType": "System.TypeCode"
      },
      {
        "name": "GetTypeHandle (System.Object)",
        "returnType": "System.RuntimeTypeHandle"
      },
      {
        "name": "GetTypeArray (System.Object[])",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetTypeFromHandle (System.RuntimeTypeHandle)",
        "returnType": "System.Type"
      },
      {
        "name": "op_Equality (System.Type, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Type, System.Type)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.TypeLoadException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.TypeAccessException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.TypeCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.TypedReference",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "MakeTypedReference (System.Object, System.Reflection.FieldInfo[])",
        "returnType": "System.TypedReference"
      },
      {
        "name": "ToObject (System.TypedReference)",
        "returnType": "System.Object"
      },
      {
        "name": "GetTargetType (System.TypedReference)",
        "returnType": "System.Type"
      },
      {
        "name": "TargetTypeToken (System.TypedReference)",
        "returnType": "System.RuntimeTypeHandle"
      },
      {
        "name": "SetTypedReference (System.TypedReference, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.TypeInitializationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.TypeLoadException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UInt16",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryParse (CHARACTER, output System.UInt16&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.UInt16&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UInt32",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryParse (CHARACTER, output System.UInt32&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.UInt32&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UInt64",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (CHARACTER, System.IFormatProvider)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeCode ()",
        "returnType": "System.TypeCode"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles)",
        "returnType": "INT64"
      },
      {
        "name": "Parse (CHARACTER, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "Parse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider)",
        "returnType": "INT64"
      },
      {
        "name": "TryParse (CHARACTER, output System.UInt64&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryParse (CHARACTER, System.Globalization.NumberStyles, System.IFormatProvider, output System.UInt64&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UIntPtr",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt64 ()",
        "returnType": "INT64"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToPointer ()",
        "returnType": "System.Void*"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Explicit (INT64)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "op_Explicit (INTEGER)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "op_Explicit (System.UIntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Explicit (System.UIntPtr)",
        "returnType": "INT64"
      },
      {
        "name": "op_Explicit (System.Void*)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "op_Explicit (System.UIntPtr)",
        "returnType": "System.Void*"
      },
      {
        "name": "op_Equality (System.UIntPtr, System.UIntPtr)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.UIntPtr, System.UIntPtr)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (System.UIntPtr, INTEGER)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "op_Addition (System.UIntPtr, INTEGER)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "Subtract (System.UIntPtr, INTEGER)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "op_Subtraction (System.UIntPtr, INTEGER)",
        "returnType": "System.UIntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.UnauthorizedAccessException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.UnhandledExceptionEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.UnhandledExceptionEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.UnhandledExceptionEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.UnhandledExceptionEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ValueType",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Version",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "CompareTo (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareTo (System.Version)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Version)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Version, System.Version)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Version, System.Version)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThan (System.Version, System.Version)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_LessThanOrEqual (System.Version, System.Version)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThan (System.Version, System.Version)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_GreaterThanOrEqual (System.Version, System.Version)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Version"
      },
      {
        "name": "TryParse (CHARACTER, output System.Version&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Void",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.WeakReference",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.WeakReference`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TryGetTarget (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetTarget (?)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ThreadStaticAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Nullable`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetValueOrDefault ()",
        "returnType": "?"
      },
      {
        "name": "GetValueOrDefault (?)",
        "returnType": "?"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Implicit (?)",
        "returnType": "System.Nullable"
      },
      {
        "name": "op_Explicit (System.Nullable)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Nullable",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetUnderlyingType (System.Type)",
        "returnType": "System.Type"
      },
      {
        "name": "Compare (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (?, ?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Configuration.Assemblies.AssemblyHash",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetValue ()",
        "returnType": "MEMPTR",
        "obsolete": {
          "message": "The AssemblyHash class has been deprecated. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SetValue (MEMPTR)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "The AssemblyHash class has been deprecated. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object",
        "obsolete": {
          "message": "The AssemblyHash class has been deprecated. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Configuration.Assemblies.AssemblyHashAlgorithm",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Configuration.Assemblies.AssemblyVersionCompatibility",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.BinaryReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "PeekChar ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadBoolean ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadSByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadInt16 ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadUInt16 ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt32 ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadUInt32 ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt64 ()",
        "returnType": "INT64"
      },
      {
        "name": "ReadUInt64 ()",
        "returnType": "INT64"
      },
      {
        "name": "ReadSingle ()",
        "returnType": "DECIMAL"
      },
      {
        "name": "ReadDouble ()",
        "returnType": "DECIMAL"
      },
      {
        "name": "ReadDecimal ()",
        "returnType": "DECIMAL"
      },
      {
        "name": "ReadString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Read (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadChars (INTEGER)",
        "returnType": "System.Char[]"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadBytes (INTEGER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.BinaryWriter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INTEGER, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "Write (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.BufferedStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Directory",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetParent (CHARACTER)",
        "returnType": "System.IO.DirectoryInfo"
      },
      {
        "name": "CreateDirectory (CHARACTER)",
        "returnType": "System.IO.DirectoryInfo"
      },
      {
        "name": "CreateDirectory (CHARACTER, System.Security.AccessControl.DirectorySecurity)",
        "returnType": "System.IO.DirectoryInfo"
      },
      {
        "name": "Exists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetCreationTime (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCreationTimeUtc (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCreationTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetCreationTimeUtc (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "SetLastWriteTime (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLastWriteTimeUtc (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLastWriteTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetLastWriteTimeUtc (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "SetLastAccessTime (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLastAccessTimeUtc (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLastAccessTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetLastAccessTimeUtc (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetAccessControl (CHARACTER)",
        "returnType": "System.Security.AccessControl.DirectorySecurity"
      },
      {
        "name": "GetAccessControl (CHARACTER, System.Security.AccessControl.AccessControlSections)",
        "returnType": "System.Security.AccessControl.DirectorySecurity"
      },
      {
        "name": "SetAccessControl (CHARACTER, System.Security.AccessControl.DirectorySecurity)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFiles (CHARACTER, CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFiles (CHARACTER, CHARACTER, System.IO.SearchOption)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDirectories (CHARACTER, CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDirectories (CHARACTER, CHARACTER, System.IO.SearchOption)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFileSystemEntries (CHARACTER, CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFileSystemEntries (CHARACTER, CHARACTER, System.IO.SearchOption)",
        "returnType": "System.String[]"
      },
      {
        "name": "EnumerateDirectories (CHARACTER, CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateDirectories (CHARACTER, CHARACTER, System.IO.SearchOption)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFiles (CHARACTER, CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFiles (CHARACTER, CHARACTER, System.IO.SearchOption)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFileSystemEntries (CHARACTER, CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFileSystemEntries (CHARACTER, CHARACTER, System.IO.SearchOption)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetLogicalDrives ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDirectoryRoot (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetCurrentDirectory ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "SetCurrentDirectory (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Move (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Delete (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Delete (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFiles (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFileSystemEntries (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "EnumerateDirectories (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFiles (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFileSystemEntries (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetDirectories (CHARACTER)",
        "returnType": "System.String[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.FileSystemInfo",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.DirectoryInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Delete ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "CreateSubdirectory (CHARACTER)",
        "returnType": "System.IO.DirectoryInfo"
      },
      {
        "name": "CreateSubdirectory (CHARACTER, System.Security.AccessControl.DirectorySecurity)",
        "returnType": "System.IO.DirectoryInfo"
      },
      {
        "name": "Create ()",
        "returnType": "System.Void"
      },
      {
        "name": "Create (System.Security.AccessControl.DirectorySecurity)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessControl ()",
        "returnType": "System.Security.AccessControl.DirectorySecurity"
      },
      {
        "name": "GetAccessControl (System.Security.AccessControl.AccessControlSections)",
        "returnType": "System.Security.AccessControl.DirectorySecurity"
      },
      {
        "name": "SetAccessControl (System.Security.AccessControl.DirectorySecurity)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFiles (CHARACTER)",
        "returnType": "System.IO.FileInfo[]"
      },
      {
        "name": "GetFiles (CHARACTER, System.IO.SearchOption)",
        "returnType": "System.IO.FileInfo[]"
      },
      {
        "name": "GetFiles ()",
        "returnType": "System.IO.FileInfo[]"
      },
      {
        "name": "GetDirectories ()",
        "returnType": "System.IO.DirectoryInfo[]"
      },
      {
        "name": "GetFileSystemInfos (CHARACTER)",
        "returnType": "System.IO.FileSystemInfo[]"
      },
      {
        "name": "GetFileSystemInfos (CHARACTER, System.IO.SearchOption)",
        "returnType": "System.IO.FileSystemInfo[]"
      },
      {
        "name": "GetFileSystemInfos ()",
        "returnType": "System.IO.FileSystemInfo[]"
      },
      {
        "name": "GetDirectories (CHARACTER)",
        "returnType": "System.IO.DirectoryInfo[]"
      },
      {
        "name": "GetDirectories (CHARACTER, System.IO.SearchOption)",
        "returnType": "System.IO.DirectoryInfo[]"
      },
      {
        "name": "EnumerateDirectories ()",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateDirectories (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateDirectories (CHARACTER, System.IO.SearchOption)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFiles ()",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFiles (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFiles (CHARACTER, System.IO.SearchOption)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFileSystemInfos ()",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFileSystemInfos (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "EnumerateFileSystemInfos (CHARACTER, System.IO.SearchOption)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "MoveTo (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Delete (LOGICAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.SearchOption",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.IOException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.DirectoryNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.DriveType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.DriveInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetDrives ()",
        "returnType": "System.IO.DriveInfo[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.IOException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.DriveNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.IOException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.EndOfStreamException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.File",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "OpenText (CHARACTER)",
        "returnType": "System.IO.StreamReader"
      },
      {
        "name": "CreateText (CHARACTER)",
        "returnType": "System.IO.StreamWriter"
      },
      {
        "name": "AppendText (CHARACTER)",
        "returnType": "System.IO.StreamWriter"
      },
      {
        "name": "Copy (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Create (CHARACTER, INTEGER)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Create (CHARACTER, INTEGER, System.IO.FileOptions)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Create (CHARACTER, INTEGER, System.IO.FileOptions, System.Security.AccessControl.FileSecurity)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Delete (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Exists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Open (CHARACTER, System.IO.FileMode)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Open (CHARACTER, System.IO.FileMode, System.IO.FileAccess)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Open (CHARACTER, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "SetCreationTime (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCreationTimeUtc (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCreationTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetCreationTimeUtc (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "SetLastAccessTime (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLastAccessTimeUtc (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLastAccessTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetLastAccessTimeUtc (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "SetLastWriteTime (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLastWriteTimeUtc (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLastWriteTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetLastWriteTimeUtc (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetAttributes (CHARACTER)",
        "returnType": "System.IO.FileAttributes"
      },
      {
        "name": "SetAttributes (CHARACTER, System.IO.FileAttributes)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessControl (CHARACTER)",
        "returnType": "System.Security.AccessControl.FileSecurity"
      },
      {
        "name": "GetAccessControl (CHARACTER, System.Security.AccessControl.AccessControlSections)",
        "returnType": "System.Security.AccessControl.FileSecurity"
      },
      {
        "name": "SetAccessControl (CHARACTER, System.Security.AccessControl.FileSecurity)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenRead (CHARACTER)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "OpenWrite (CHARACTER)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "ReadAllText (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadAllText (CHARACTER, System.Text.Encoding)",
        "returnType": "CHARACTER"
      },
      {
        "name": "WriteAllText (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAllText (CHARACTER, CHARACTER, System.Text.Encoding)",
        "returnType": "System.Void"
      },
      {
        "name": "ReadAllBytes (CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "WriteAllBytes (CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "ReadAllLines (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "ReadAllLines (CHARACTER, System.Text.Encoding)",
        "returnType": "System.String[]"
      },
      {
        "name": "ReadLines (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "ReadLines (CHARACTER, System.Text.Encoding)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "WriteAllLines (CHARACTER, System.String[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAllLines (CHARACTER, System.String[], System.Text.Encoding)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAllLines (CHARACTER, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAllLines (CHARACTER, System.Collections.Generic.IEnumerable, System.Text.Encoding)",
        "returnType": "System.Void"
      },
      {
        "name": "AppendAllText (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AppendAllText (CHARACTER, CHARACTER, System.Text.Encoding)",
        "returnType": "System.Void"
      },
      {
        "name": "AppendAllLines (CHARACTER, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "AppendAllLines (CHARACTER, System.Collections.Generic.IEnumerable, System.Text.Encoding)",
        "returnType": "System.Void"
      },
      {
        "name": "Move (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Decrypt (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Encrypt (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.FileAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.FileSystemInfo",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.FileInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Delete ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAccessControl ()",
        "returnType": "System.Security.AccessControl.FileSecurity"
      },
      {
        "name": "GetAccessControl (System.Security.AccessControl.AccessControlSections)",
        "returnType": "System.Security.AccessControl.FileSecurity"
      },
      {
        "name": "SetAccessControl (System.Security.AccessControl.FileSecurity)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenText ()",
        "returnType": "System.IO.StreamReader"
      },
      {
        "name": "CreateText ()",
        "returnType": "System.IO.StreamWriter"
      },
      {
        "name": "AppendText ()",
        "returnType": "System.IO.StreamWriter"
      },
      {
        "name": "CopyTo (CHARACTER)",
        "returnType": "System.IO.FileInfo"
      },
      {
        "name": "CopyTo (CHARACTER, LOGICAL)",
        "returnType": "System.IO.FileInfo"
      },
      {
        "name": "Create ()",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Decrypt ()",
        "returnType": "System.Void"
      },
      {
        "name": "Encrypt ()",
        "returnType": "System.Void"
      },
      {
        "name": "Open (System.IO.FileMode)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Open (System.IO.FileMode, System.IO.FileAccess)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "Open (System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "OpenRead ()",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "OpenWrite ()",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "MoveTo (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER)",
        "returnType": "System.IO.FileInfo"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "System.IO.FileInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.IOException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.FileLoadException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.FileMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.IOException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.FileNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.FileOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.FileShare",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.FileStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessControl ()",
        "returnType": "System.Security.AccessControl.FileSecurity"
      },
      {
        "name": "SetAccessControl (System.Security.AccessControl.FileSecurity)",
        "returnType": "System.Void"
      },
      {
        "name": "Lock (INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Unlock (INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.FileSystemInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Delete ()",
        "returnType": "System.Void"
      },
      {
        "name": "Refresh ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.FileAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.IOException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.MemoryStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "GetBuffer ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "TryGetBuffer (output System.ArraySegment)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "CopyToAsync (System.IO.Stream, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteTo (System.IO.Stream)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Path",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetDirectoryName (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetInvalidPathChars ()",
        "returnType": "System.Char[]"
      },
      {
        "name": "GetInvalidFileNameChars ()",
        "returnType": "System.Char[]"
      },
      {
        "name": "GetExtension (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetFullPath (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetFileName (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetFileNameWithoutExtension (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetPathRoot (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTempPath ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetRandomFileName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTempFileName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "HasExtension (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsPathRooted (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Combine (System.String[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "Combine (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Combine (CHARACTER, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ChangeExtension (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Combine (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.IOException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.PathTooLongException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.SeekOrigin",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.Stream",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyToAsync (System.IO.Stream, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyToAsync (System.IO.Stream)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "CopyToAsync (System.IO.Stream, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "CopyTo (System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.IO.Stream, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "FlushAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.IO.Stream)",
        "returnType": "System.IO.Stream"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.TextReader",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.StreamReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ReadToEnd ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Read (output System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Peek ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadLineAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadToEndAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "DiscardBufferedData ()",
        "returnType": "System.Void"
      },
      {
        "name": "ReadBlock (output System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadBlockAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.TextWriter",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.StreamWriter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.TextReader",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.StringReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Peek ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (output System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadToEnd ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadLineAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadToEndAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadBlockAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.TextWriter",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.StringWriter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetStringBuilder ()",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.TextReader",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Peek ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (output System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadToEnd ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadBlock (output System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadLineAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadToEndAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadBlockAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.IO.TextReader)",
        "returnType": "System.IO.TextReader"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.TextWriter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine ()",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Write (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (System.Char[])",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (System.Char[])",
        "returnType": "System.Threading.Tasks.Task"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.IO.TextWriter)",
        "returnType": "System.IO.TextWriter"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.UnmanagedMemoryAccessor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "ReadBoolean (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ReadByte (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadDecimal (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Write (INT64, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "ReadChar (INT64)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadInt16 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt32 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt64 (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "ReadSingle (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ReadDouble (INT64)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ReadSByte (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadUInt16 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadUInt32 (INT64)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadUInt64 (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Read (INT64, output ?)",
        "returnType": "System.Void"
      },
      {
        "name": "ReadArray (INT64, ?, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (INT64, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteArray (INT64, ?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.UnmanagedMemoryStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.IsolatedStorage.IsolatedStorageScope",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.IsolatedStorage.IsolatedStorage",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IncreaseQuotaTo (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.FileStream",
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.IsolatedStorage.IsolatedStorageFileStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Lock (INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Unlock (INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.IsolatedStorage.IsolatedStorageException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.IsolatedStorage.IsolatedStorageSecurityOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.SecurityState",
      "System.Object"
    ],
    "name": "System.IO.IsolatedStorage.IsolatedStorageSecurityState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "EnsureState ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.IO.IsolatedStorage.INormalizeForIsolatedStorage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Normalize ()",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.IsolatedStorage.IsolatedStorage",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.IsolatedStorage.IsolatedStorageFile",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IncreaseQuotaTo (INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteFile (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "FileExists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DirectoryExists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateDirectory (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCreationTime (CHARACTER)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "GetLastAccessTime (CHARACTER)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "GetLastWriteTime (CHARACTER)",
        "returnType": "System.DateTimeOffset"
      },
      {
        "name": "CopyFile (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyFile (CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "MoveFile (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "MoveDirectory (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteDirectory (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFileNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFileNames (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDirectoryNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDirectoryNames (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "OpenFile (CHARACTER, System.IO.FileMode)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFileStream"
      },
      {
        "name": "OpenFile (CHARACTER, System.IO.FileMode, System.IO.FileAccess)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFileStream"
      },
      {
        "name": "OpenFile (CHARACTER, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFileStream"
      },
      {
        "name": "CreateFile (CHARACTER)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFileStream"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetUserStoreForDomain ()",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetUserStoreForAssembly ()",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetUserStoreForApplication ()",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetUserStoreForSite ()",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetMachineStoreForDomain ()",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetMachineStoreForAssembly ()",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetMachineStoreForApplication ()",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetStore (System.IO.IsolatedStorage.IsolatedStorageScope, System.Type, System.Type)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetStore (System.IO.IsolatedStorage.IsolatedStorageScope, System.Object, System.Object)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetStore (System.IO.IsolatedStorage.IsolatedStorageScope, System.Security.Policy.Evidence, System.Type, System.Security.Policy.Evidence, System.Type)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetStore (System.IO.IsolatedStorage.IsolatedStorageScope, System.Type)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "GetStore (System.IO.IsolatedStorage.IsolatedStorageScope, System.Object)",
        "returnType": "System.IO.IsolatedStorage.IsolatedStorageFile"
      },
      {
        "name": "Remove (System.IO.IsolatedStorage.IsolatedStorageScope)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator (System.IO.IsolatedStorage.IsolatedStorageScope)",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.SecurityElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddAttribute (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddChild (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equal (System.Security.SecurityElement)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "Attribute (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SearchForChildByTag (CHARACTER)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "SearchForTextOfTag (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "FromString (CHARACTER)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "IsValidTag (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValidText (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValidAttributeName (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValidAttributeValue (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Escape (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.XmlSyntaxException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.SuppressUnmanagedCodeSecurityAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.UnverifiableCodeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.AllowPartiallyTrustedCallersAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.PartialTrustVisibilityLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.SecurityCriticalScope",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.SecurityCriticalAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.SecurityTreatAsSafeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.SecuritySafeCriticalAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.SecurityTransparentAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.SecurityRuleSet",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.SecurityRulesAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.CodeAccessPermission",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Demand ()",
        "returnType": "System.Void"
      },
      {
        "name": "Assert ()",
        "returnType": "System.Void"
      },
      {
        "name": "Deny ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Deny is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "PermitOnly ()",
        "returnType": "System.Void"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "RevertAssert ()",
        "returnType": "System.Void"
      },
      {
        "name": "RevertDeny ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Deny is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "RevertPermitOnly ()",
        "returnType": "System.Void"
      },
      {
        "name": "RevertAll ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Security.IEvidenceFactory",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Security.IPermission",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Demand ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Security.ISecurityEncodable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Security.ISecurityPolicyEncodable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Security.IStackWalk",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Assert ()",
        "returnType": "System.Void"
      },
      {
        "name": "Demand ()",
        "returnType": "System.Void"
      },
      {
        "name": "Deny ()",
        "returnType": "System.Void"
      },
      {
        "name": "PermitOnly ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.HostSecurityManagerOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.HostSecurityManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ProvideAppDomainEvidence (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.Evidence"
      },
      {
        "name": "ProvideAssemblyEvidence (System.Reflection.Assembly, System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.Evidence"
      },
      {
        "name": "DetermineApplicationTrust (System.Security.Policy.Evidence, System.Security.Policy.Evidence, System.Security.Policy.TrustManagerContext)",
        "returnType": "System.Security.Policy.ApplicationTrust"
      },
      {
        "name": "ResolvePolicy (System.Security.Policy.Evidence)",
        "returnType": "System.Security.PermissionSet"
      },
      {
        "name": "GetHostSuppliedAppDomainEvidenceTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GenerateAppDomainEvidence (System.Type)",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "GenerateAssemblyEvidence (System.Type, System.Reflection.Assembly)",
        "returnType": "System.Security.Policy.EvidenceBase"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.PermissionSet",
      "System.Object"
    ],
    "name": "System.Security.NamedPermissionSet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.PermissionSet"
      },
      {
        "name": "Copy (CHARACTER)",
        "returnType": "System.Security.NamedPermissionSet"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.PermissionSet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsEmpty ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetPermission (System.Type)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "SetPermission (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "AddPermission (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "RemovePermission (System.Type)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubsetOf (System.Security.PermissionSet)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Demand ()",
        "returnType": "System.Void"
      },
      {
        "name": "Assert ()",
        "returnType": "System.Void"
      },
      {
        "name": "Deny ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Deny is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "PermitOnly ()",
        "returnType": "System.Void"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.PermissionSet"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ContainsNonCodeAccessPermissions ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.PermissionSet)",
        "returnType": "System.Security.PermissionSet"
      },
      {
        "name": "Union (System.Security.PermissionSet)",
        "returnType": "System.Security.PermissionSet"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ],
    "staticMethods": [
      {
        "name": "ConvertPermissionSet (CHARACTER, MEMPTR, CHARACTER)",
        "returnType": "MEMPTR",
        "obsolete": {
          "message": "This method is obsolete and shoud no longer be used.",
          "error": false
        }
      },
      {
        "name": "RevertAssert ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.PermissionSet",
      "System.Object"
    ],
    "name": "System.Security.ReadOnlyPermissionSet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.PermissionSet"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.SecureString",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.SecureString"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "IsReadOnly ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "MakeReadOnly ()",
        "returnType": "System.Void"
      },
      {
        "name": "AppendChar (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertAt (INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAt (INTEGER, CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.SecurityContextSource",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.SecurityContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "CreateCopy ()",
        "returnType": "System.Security.SecurityContext"
      }
    ],
    "staticMethods": [
      {
        "name": "SuppressFlow ()",
        "returnType": "System.Threading.AsyncFlowControl"
      },
      {
        "name": "SuppressFlowWindowsIdentity ()",
        "returnType": "System.Threading.AsyncFlowControl"
      },
      {
        "name": "RestoreFlow ()",
        "returnType": "System.Void"
      },
      {
        "name": "IsFlowSuppressed ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsWindowsIdentityFlowSuppressed ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Run (System.Security.SecurityContext, System.Threading.ContextCallback, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Capture ()",
        "returnType": "System.Security.SecurityContext"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.SecurityException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.SecurityState",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsStateAvailable ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "EnsureState ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.HostProtectionException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.PolicyLevelType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.SecurityManager",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetStandardSandbox (System.Security.Policy.Evidence)",
        "returnType": "System.Security.PermissionSet"
      },
      {
        "name": "CurrentThreadRequiresSecurityContextCapture ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsGranted (System.Security.IPermission)",
        "returnType": "LOGICAL",
        "obsolete": {
          "message": "IsGranted is obsolete and will be removed in a future release of the .NET Framework.  Please use the PermissionSet property of either AppDomain or Assembly instead.",
          "error": false
        }
      },
      {
        "name": "GetZoneAndOrigin (output System.Collections.ArrayList&, output System.Collections.ArrayList&)",
        "returnType": "System.Void"
      },
      {
        "name": "LoadPolicyLevelFromString (CHARACTER, System.Security.PolicyLevelType)",
        "returnType": "System.Security.Policy.PolicyLevel",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "SavePolicyLevel (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ResolvePolicy (System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet, output System.Security.PermissionSet&)",
        "returnType": "System.Security.PermissionSet",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ResolvePolicy (System.Security.Policy.Evidence)",
        "returnType": "System.Security.PermissionSet",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ResolvePolicy (System.Security.Policy.Evidence[])",
        "returnType": "System.Security.PermissionSet",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ResolveSystemPolicy (System.Security.Policy.Evidence)",
        "returnType": "System.Security.PermissionSet",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "ResolvePolicyGroups (System.Security.Policy.Evidence)",
        "returnType": "System.Collections.IEnumerator",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "PolicyHierarchy ()",
        "returnType": "System.Collections.IEnumerator",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "SavePolicy ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "LoadPolicyLevelFromFile (CHARACTER, System.Security.PolicyLevelType)",
        "returnType": "System.Security.Policy.PolicyLevel",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.SecurityZone",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.VerificationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.InheritanceFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.PropagationFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AuditFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.SecurityInfos",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ResourceType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AccessControlSections",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AccessControlActions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AceType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AceFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.AccessControl.GenericAce",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.AccessControl.GenericAce"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateFromBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Security.AccessControl.GenericAce"
      },
      {
        "name": "op_Equality (System.Security.AccessControl.GenericAce, System.Security.AccessControl.GenericAce)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Security.AccessControl.GenericAce, System.Security.AccessControl.GenericAce)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.GenericAce",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.KnownAce",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.GenericAce",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CustomAce",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetOpaque ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetOpaque (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CompoundAceType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.KnownAce",
      "System.Security.AccessControl.GenericAce",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CompoundAce",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AceQualifier",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.KnownAce",
      "System.Security.AccessControl.GenericAce",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.QualifiedAce",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetOpaque ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetOpaque (MEMPTR)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.QualifiedAce",
      "System.Security.AccessControl.KnownAce",
      "System.Security.AccessControl.GenericAce",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CommonAce",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "MaxOpaqueLength (LOGICAL)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ObjectAceFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.QualifiedAce",
      "System.Security.AccessControl.KnownAce",
      "System.Security.AccessControl.GenericAce",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ObjectAce",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "MaxOpaqueLength (LOGICAL)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AceEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.AccessControl.GenericAcl",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Security.AccessControl.GenericAce[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.AccessControl.AceEnumerator"
      },
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.GenericAcl",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.RawAcl",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertAce (INTEGER, System.Security.AccessControl.GenericAce)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAce (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.GenericAcl",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CommonAcl",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveInheritedAces ()",
        "returnType": "System.Void"
      },
      {
        "name": "Purge (System.Security.Principal.SecurityIdentifier)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.CommonAcl",
      "System.Security.AccessControl.GenericAcl",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.SystemAcl",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddAudit (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAudit (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAudit (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditSpecific (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAudit (System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAudit (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAudit (System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAudit (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAudit (System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAudit (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditSpecific (System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditSpecific (System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.CommonAcl",
      "System.Security.AccessControl.GenericAcl",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.DiscretionaryAcl",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessSpecific (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccess (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessSpecific (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessSpecific (System.Security.AccessControl.AccessControlType, System.Security.Principal.SecurityIdentifier, INTEGER, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CryptoKeyRights",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CryptoKeyAccessRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CryptoKeyAuditRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CryptoKeySecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "AddAccessRule (System.Security.AccessControl.CryptoKeyAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRule (System.Security.AccessControl.CryptoKeyAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetAccessRule (System.Security.AccessControl.CryptoKeyAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRule (System.Security.AccessControl.CryptoKeyAccessRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessRuleAll (System.Security.AccessControl.CryptoKeyAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRuleSpecific (System.Security.AccessControl.CryptoKeyAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAuditRule (System.Security.AccessControl.CryptoKeyAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRule (System.Security.AccessControl.CryptoKeyAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRule (System.Security.AccessControl.CryptoKeyAuditRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditRuleAll (System.Security.AccessControl.CryptoKeyAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRuleSpecific (System.Security.AccessControl.CryptoKeyAuditRule)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.EventWaitHandleRights",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.EventWaitHandleAccessRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.EventWaitHandleAuditRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.EventWaitHandleSecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "AddAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessRuleAll (System.Security.AccessControl.EventWaitHandleAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRuleSpecific (System.Security.AccessControl.EventWaitHandleAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditRuleAll (System.Security.AccessControl.EventWaitHandleAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRuleSpecific (System.Security.AccessControl.EventWaitHandleAuditRule)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.FileSystemRights",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.FileSystemAccessRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.FileSystemAuditRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.FileSystemSecurity",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "AddAccessRule (System.Security.AccessControl.FileSystemAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRule (System.Security.AccessControl.FileSystemAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAuditRule (System.Security.AccessControl.FileSystemAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRule (System.Security.AccessControl.FileSystemAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.FileSystemSecurity",
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.FileSecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.FileSystemSecurity",
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.DirectorySecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.MutexRights",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.MutexAccessRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.MutexAuditRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.MutexSecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "AddAccessRule (System.Security.AccessControl.MutexAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRule (System.Security.AccessControl.MutexAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetAccessRule (System.Security.AccessControl.MutexAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRule (System.Security.AccessControl.MutexAccessRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessRuleAll (System.Security.AccessControl.MutexAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRuleSpecific (System.Security.AccessControl.MutexAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAuditRule (System.Security.AccessControl.MutexAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRule (System.Security.AccessControl.MutexAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRule (System.Security.AccessControl.MutexAuditRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditRuleAll (System.Security.AccessControl.MutexAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRuleSpecific (System.Security.AccessControl.MutexAuditRule)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.NativeObjectSecurity",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AccessControlModification",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ObjectSecurity",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetOwner (System.Type)",
        "returnType": "System.Security.Principal.IdentityReference"
      },
      {
        "name": "SetOwner (System.Security.Principal.IdentityReference)",
        "returnType": "System.Void"
      },
      {
        "name": "GetGroup (System.Type)",
        "returnType": "System.Security.Principal.IdentityReference"
      },
      {
        "name": "SetGroup (System.Security.Principal.IdentityReference)",
        "returnType": "System.Void"
      },
      {
        "name": "PurgeAccessRules (System.Security.Principal.IdentityReference)",
        "returnType": "System.Void"
      },
      {
        "name": "PurgeAuditRules (System.Security.Principal.IdentityReference)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRuleProtection (LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRuleProtection (LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSecurityDescriptorSddlForm (System.Security.AccessControl.AccessControlSections)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SetSecurityDescriptorSddlForm (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSecurityDescriptorSddlForm (CHARACTER, System.Security.AccessControl.AccessControlSections)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSecurityDescriptorBinaryForm ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetSecurityDescriptorBinaryForm (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSecurityDescriptorBinaryForm (MEMPTR, System.Security.AccessControl.AccessControlSections)",
        "returnType": "System.Void"
      },
      {
        "name": "ModifyAccessRule (System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, output System.Boolean&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ModifyAuditRule (System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, output System.Boolean&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      }
    ],
    "staticMethods": [
      {
        "name": "IsSddlConversionSupported ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AccessRule`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AuditRule`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ObjectSecurity`1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "AddAccessRule (?)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRule (?)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetAccessRule (?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRule (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessRuleAll (?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRuleSpecific (?)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAuditRule (?)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRule (?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRule (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditRuleAll (?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRuleSpecific (?)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CommonObjectSecurity",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAccessRules (LOGICAL, LOGICAL, System.Type)",
        "returnType": "System.Security.AccessControl.AuthorizationRuleCollection"
      },
      {
        "name": "GetAuditRules (LOGICAL, LOGICAL, System.Type)",
        "returnType": "System.Security.AccessControl.AuthorizationRuleCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.DirectoryObjectSecurity",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType, System.Guid, System.Guid)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags, System.Guid, System.Guid)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "GetAccessRules (LOGICAL, LOGICAL, System.Type)",
        "returnType": "System.Security.AccessControl.AuthorizationRuleCollection"
      },
      {
        "name": "GetAuditRules (LOGICAL, LOGICAL, System.Type)",
        "returnType": "System.Security.AccessControl.AuthorizationRuleCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.UnauthorizedAccessException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.PrivilegeNotHeldException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.RegistryRights",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.RegistryAccessRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.RegistryAuditRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.RegistrySecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "AddAccessRule (System.Security.AccessControl.RegistryAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRule (System.Security.AccessControl.RegistryAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetAccessRule (System.Security.AccessControl.RegistryAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRule (System.Security.AccessControl.RegistryAccessRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessRuleAll (System.Security.AccessControl.RegistryAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRuleSpecific (System.Security.AccessControl.RegistryAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAuditRule (System.Security.AccessControl.RegistryAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRule (System.Security.AccessControl.RegistryAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRule (System.Security.AccessControl.RegistryAuditRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditRuleAll (System.Security.AccessControl.RegistryAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRuleSpecific (System.Security.AccessControl.RegistryAuditRule)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AccessControlType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AuthorizationRule",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AccessRule",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ObjectAccessRule",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AuditRule",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ObjectAuditRule",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.ReadOnlyCollectionBase",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.AuthorizationRuleCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddRule (System.Security.AccessControl.AuthorizationRule)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.Security.AccessControl.AuthorizationRule[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.ControlFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.AccessControl.GenericSecurityDescriptor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetSddlForm (System.Security.AccessControl.AccessControlSections)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "IsSddlConversionSupported ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.GenericSecurityDescriptor",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.RawSecurityDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetFlags (System.Security.AccessControl.ControlFlags)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.GenericSecurityDescriptor",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CommonSecurityDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetSystemAclProtection (LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "SetDiscretionaryAclProtection (LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "PurgeAccessControl (System.Security.Principal.SecurityIdentifier)",
        "returnType": "System.Void"
      },
      {
        "name": "PurgeAudit (System.Security.Principal.SecurityIdentifier)",
        "returnType": "System.Void"
      },
      {
        "name": "AddDiscretionaryAcl (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddSystemAcl (INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CipherMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.PaddingMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.KeySizes",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptographicException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.CryptographicException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptographicUnexpectedOperationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Security.Cryptography.ICryptoTransform",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "TransformBlock (MEMPTR, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TransformFinalBlock (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RandomNumberGenerator",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetBytes (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNonZeroBytes (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "GetBytes (MEMPTR)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.RandomNumberGenerator"
      },
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.RandomNumberGenerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.RandomNumberGenerator",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RNGCryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBytes (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNonZeroBytes (MEMPTR)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.Aes",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.Aes"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.Aes"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsymmetricAlgorithm",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "FromXmlString (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXmlString (LOGICAL)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.AsymmetricAlgorithm"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.AsymmetricAlgorithm"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsymmetricKeyExchangeDeformatter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "DecryptKeyExchange (MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsymmetricKeyExchangeFormatter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateKeyExchange (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "CreateKeyExchange (MEMPTR, System.Type)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsymmetricSignatureDeformatter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "VerifySignature (System.Security.Cryptography.HashAlgorithm, MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "SetHashAlgorithm (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "VerifySignature (MEMPTR, MEMPTR)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsymmetricSignatureFormatter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateSignature (System.Security.Cryptography.HashAlgorithm)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "SetHashAlgorithm (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateSignature (MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.FromBase64TransformMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.ToBase64Transform",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TransformBlock (MEMPTR, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TransformFinalBlock (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.FromBase64Transform",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TransformBlock (MEMPTR, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TransformFinalBlock (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptoAPITransform",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "TransformBlock (MEMPTR, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TransformFinalBlock (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CspProviderFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CspParameters",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptoConfig",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CreateFromName (CHARACTER, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "AddAlgorithm (System.Type, System.String[])",
        "returnType": "System.Void"
      },
      {
        "name": "CreateFromName (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "AddOID (CHARACTER, System.String[])",
        "returnType": "System.Void"
      },
      {
        "name": "MapNameToOID (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "EncodeOID (CHARACTER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptoStreamMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptoStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushFinalBlock ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DES",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.DES"
      },
      {
        "name": "IsWeakKey (MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSemiWeakKey (MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.DES"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.DES",
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DESCryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateEncryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "CreateDecryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "GenerateKey ()",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateIV ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DeriveBytes",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetBytes (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DSAParameters",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DSA",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SignData (MEMPTR, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (MEMPTR, INTEGER, INTEGER, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (System.IO.Stream, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyData (MEMPTR, MEMPTR, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "LOGICAL"
      },
      {
        "name": "VerifyData (MEMPTR, INTEGER, INTEGER, MEMPTR, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "LOGICAL"
      },
      {
        "name": "VerifyData (System.IO.Stream, MEMPTR, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateSignature (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifySignature (MEMPTR, MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromXmlString (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXmlString (LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ExportParameters (LOGICAL)",
        "returnType": "System.Security.Cryptography.DSAParameters"
      },
      {
        "name": "ImportParameters (System.Security.Cryptography.DSAParameters)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.DSA"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.DSA"
      },
      {
        "name": "Create (INTEGER)",
        "returnType": "System.Security.Cryptography.DSA"
      },
      {
        "name": "Create (System.Security.Cryptography.DSAParameters)",
        "returnType": "System.Security.Cryptography.DSA"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.DSA",
      "System.Security.Cryptography.AsymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DSACryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ExportParameters (LOGICAL)",
        "returnType": "System.Security.Cryptography.DSAParameters"
      },
      {
        "name": "ExportCspBlob (LOGICAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ImportParameters (System.Security.Cryptography.DSAParameters)",
        "returnType": "System.Void"
      },
      {
        "name": "ImportCspBlob (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SignData (System.IO.Stream)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyData (MEMPTR, MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateSignature (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifySignature (MEMPTR, MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignHash (MEMPTR, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyHash (MEMPTR, CHARACTER, MEMPTR)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricSignatureDeformatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DSASignatureDeformatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "SetHashAlgorithm (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "VerifySignature (MEMPTR, MEMPTR)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricSignatureFormatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.DSASignatureFormatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "SetHashAlgorithm (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateSignature (MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMAC",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.HMAC"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.HMAC"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HMAC",
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACMD5",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HMAC",
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACRIPEMD160",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HMAC",
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACSHA1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HMAC",
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACSHA256",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HMAC",
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACSHA384",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HMAC",
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACSHA512",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HashAlgorithm",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ComputeHash (System.IO.Stream)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ComputeHash (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ComputeHash (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "TransformBlock (MEMPTR, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TransformFinalBlock (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.HashAlgorithm"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.HashAlgorithm"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HashAlgorithmName",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.KeyNumber",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CspKeyContainerInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Security.Cryptography.ICspAsymmetricAlgorithm",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ExportCspBlob (LOGICAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ImportCspBlob (MEMPTR)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.KeyedHashAlgorithm",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.KeyedHashAlgorithm"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.KeyedHashAlgorithm"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.KeyedHashAlgorithm",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.MACTripleDES",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.MD5",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.MD5"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.MD5"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.MD5",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.MD5CryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.MaskGenerationMethod",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GenerateMask (MEMPTR, INTEGER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.DeriveBytes",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.PasswordDeriveBytes",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBytes (INTEGER)",
        "returnType": "MEMPTR",
        "obsolete": {
          "message": "Rfc2898DeriveBytes replaces PasswordDeriveBytes for deriving key material from a password and is preferred in new applications.",
          "error": false
        }
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "CryptDeriveKey (CHARACTER, CHARACTER, INTEGER, MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.MaskGenerationMethod",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.PKCS1MaskGenerationMethod",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GenerateMask (MEMPTR, INTEGER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RC2",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.RC2"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.RC2"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.RC2",
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RC2CryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateEncryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "CreateDecryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "GenerateKey ()",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateIV ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.DeriveBytes",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.Rfc2898DeriveBytes",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBytes (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "CryptDeriveKey (CHARACTER, CHARACTER, INTEGER, MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RIPEMD160",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.RIPEMD160"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.RIPEMD160"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.RIPEMD160",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RIPEMD160Managed",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAParameters",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSA",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Encrypt (MEMPTR, System.Security.Cryptography.RSAEncryptionPadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Decrypt (MEMPTR, System.Security.Cryptography.RSAEncryptionPadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignHash (MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyHash (MEMPTR, MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignData (MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (MEMPTR, INTEGER, INTEGER, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (System.IO.Stream, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyData (MEMPTR, MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "VerifyData (MEMPTR, INTEGER, INTEGER, MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "VerifyData (System.IO.Stream, MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DecryptValue (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "EncryptValue (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "FromXmlString (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXmlString (LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ExportParameters (LOGICAL)",
        "returnType": "System.Security.Cryptography.RSAParameters"
      },
      {
        "name": "ImportParameters (System.Security.Cryptography.RSAParameters)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.RSA"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.RSA"
      },
      {
        "name": "Create (INTEGER)",
        "returnType": "System.Security.Cryptography.RSA"
      },
      {
        "name": "Create (System.Security.Cryptography.RSAParameters)",
        "returnType": "System.Security.Cryptography.RSA"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSASignaturePadding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Security.Cryptography.RSASignaturePadding, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Security.Cryptography.RSASignaturePadding, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSASignaturePaddingMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.RSA",
      "System.Security.Cryptography.AsymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSACryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ExportParameters (LOGICAL)",
        "returnType": "System.Security.Cryptography.RSAParameters"
      },
      {
        "name": "ExportCspBlob (LOGICAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ImportParameters (System.Security.Cryptography.RSAParameters)",
        "returnType": "System.Void"
      },
      {
        "name": "ImportCspBlob (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SignData (System.IO.Stream, System.Object)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (MEMPTR, System.Object)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignData (MEMPTR, INTEGER, INTEGER, System.Object)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyData (MEMPTR, System.Object, MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignHash (MEMPTR, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyHash (MEMPTR, CHARACTER, MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Encrypt (MEMPTR, LOGICAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Decrypt (MEMPTR, LOGICAL)",
        "returnType": "MEMPTR"
      },
      {
        "name": "DecryptValue (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "EncryptValue (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Encrypt (MEMPTR, System.Security.Cryptography.RSAEncryptionPadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Decrypt (MEMPTR, System.Security.Cryptography.RSAEncryptionPadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SignHash (MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "MEMPTR"
      },
      {
        "name": "VerifyHash (MEMPTR, MEMPTR, System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAEncryptionPadding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Security.Cryptography.RSAEncryptionPadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateOaep (System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "System.Security.Cryptography.RSAEncryptionPadding"
      },
      {
        "name": "op_Equality (System.Security.Cryptography.RSAEncryptionPadding, System.Security.Cryptography.RSAEncryptionPadding)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Security.Cryptography.RSAEncryptionPadding, System.Security.Cryptography.RSAEncryptionPadding)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAEncryptionPaddingMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricKeyExchangeDeformatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "DecryptKeyExchange (MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricKeyExchangeFormatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAOAEPKeyExchangeFormatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateKeyExchange (MEMPTR, System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "CreateKeyExchange (MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricKeyExchangeDeformatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DecryptKeyExchange (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricKeyExchangeFormatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateKeyExchange (MEMPTR, System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "CreateKeyExchange (MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricSignatureDeformatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAPKCS1SignatureDeformatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "SetHashAlgorithm (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "VerifySignature (MEMPTR, MEMPTR)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsymmetricSignatureFormatter",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RSAPKCS1SignatureFormatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetKey (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Void"
      },
      {
        "name": "SetHashAlgorithm (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateSignature (MEMPTR)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.Rijndael",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.Rijndael"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.Rijndael"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.Rijndael",
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RijndaelManaged",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateEncryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "CreateDecryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "GenerateKey ()",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateIV ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.RijndaelManagedTransform",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "TransformBlock (MEMPTR, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TransformFinalBlock (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.SHA1"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.SHA1"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SHA1",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA1CryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SHA1",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA1Managed",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA256",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.SHA256"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.SHA256"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SHA256",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA256Managed",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA384",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.SHA384"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.SHA384"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SHA384",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA384Managed",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA512",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.SHA512"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.SHA512"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SHA512",
      "System.Security.Cryptography.HashAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SHA512Managed",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SignatureDescription",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateDeformatter (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Security.Cryptography.AsymmetricSignatureDeformatter"
      },
      {
        "name": "CreateFormatter (System.Security.Cryptography.AsymmetricAlgorithm)",
        "returnType": "System.Security.Cryptography.AsymmetricSignatureFormatter"
      },
      {
        "name": "CreateDigest ()",
        "returnType": "System.Security.Cryptography.HashAlgorithm"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.SymmetricAlgorithm",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ValidKeySize (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateEncryptor ()",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "CreateDecryptor ()",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "CreateEncryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "CreateDecryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "GenerateKey ()",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateIV ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.SymmetricAlgorithm"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.SymmetricAlgorithm"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.TripleDES",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Security.Cryptography.TripleDES"
      },
      {
        "name": "IsWeakKey (MEMPTR)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.TripleDES"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.TripleDES",
      "System.Security.Cryptography.SymmetricAlgorithm",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.TripleDESCryptoServiceProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateEncryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "CreateDecryptor (MEMPTR, MEMPTR)",
        "returnType": "System.Security.Cryptography.ICryptoTransform"
      },
      {
        "name": "GenerateKey ()",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateIV ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ContentType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509KeyStorageFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Certificate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRawCertData ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetName ()",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "This method has been deprecated.  Please use the Subject property instead.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetIssuerName ()",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "This method has been deprecated.  Please use the Issuer property instead.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetSerialNumber ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetSerialNumberString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetKeyAlgorithmParameters ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetKeyAlgorithmParametersString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetKeyAlgorithm ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetPublicKey ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetPublicKeyString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetRawCertDataString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetCertHash ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetCertHash (System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetCertHashString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetCertHashString (System.Security.Cryptography.HashAlgorithmName)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEffectiveDateString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetExpirationDateString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Import (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (MEMPTR, CHARACTER, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (MEMPTR, System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (CHARACTER, CHARACTER, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (CHARACTER, System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Export (System.Security.Cryptography.X509Certificates.X509ContentType)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Export (System.Security.Cryptography.X509Certificates.X509ContentType, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Export (System.Security.Cryptography.X509Certificates.X509ContentType, System.Security.SecureString)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToString (LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetFormat ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateFromCertFile (CHARACTER)",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate"
      },
      {
        "name": "CreateFromSignedFile (CHARACTER)",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.EnvironmentPermissionAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.EnvironmentPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetPathList (System.Security.Permissions.EnvironmentPermissionAccess, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddPathList (System.Security.Permissions.EnvironmentPermissionAccess, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetPathList (System.Security.Permissions.EnvironmentPermissionAccess)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.FileDialogPermissionAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.FileDialogPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.FileIOPermissionAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.FileIOPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetPathList (System.Security.Permissions.FileIOPermissionAccess, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetPathList (System.Security.Permissions.FileIOPermissionAccess, System.String[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddPathList (System.Security.Permissions.FileIOPermissionAccess, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddPathList (System.Security.Permissions.FileIOPermissionAccess, System.String[])",
        "returnType": "System.Void"
      },
      {
        "name": "GetPathList (System.Security.Permissions.FileIOPermissionAccess)",
        "returnType": "System.String[]"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.HostProtectionResource",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.HostProtectionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.IsolatedStorageContainment",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.IsolatedStoragePermission",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.IsolatedStoragePermission",
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.IsolatedStorageFilePermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.PermissionState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.SecurityAction",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.SecurityAttribute",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.CodeAccessSecurityAttribute",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.EnvironmentPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.FileDialogPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.FileIOPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.KeyContainerPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.PrincipalPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.ReflectionPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.RegistryPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.SecurityPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.UIPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.ZoneIdentityPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.StrongNameIdentityPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.SiteIdentityPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.UrlIdentityPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.PublisherIdentityPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.IsolatedStoragePermissionAttribute",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.IsolatedStoragePermissionAttribute",
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.IsolatedStorageFilePermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.PermissionSetAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "CreatePermissionSet ()",
        "returnType": "System.Security.PermissionSet"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.ReflectionPermissionFlag",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.ReflectionPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Permissions.PrincipalPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Demand ()",
        "returnType": "System.Void"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.SecurityPermissionFlag",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.SecurityPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.SiteIdentityPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.StrongNameIdentityPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Permissions.StrongNamePublicKeyBlob",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.UIPermissionWindow",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.UIPermissionClipboard",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.UIPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.UrlIdentityPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.ZoneIdentityPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.GacIdentityPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.GacIdentityPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "name": "System.Security.Permissions.IUnrestrictedPermission",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.KeyContainerPermissionFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Permissions.KeyContainerPermissionAccessEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Permissions.KeyContainerPermissionAccessEntryCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Permissions.KeyContainerPermissionAccessEntry)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Security.Permissions.KeyContainerPermissionAccessEntry)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Security.Permissions.KeyContainerPermissionAccessEntry)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator"
      },
      {
        "name": "CopyTo (System.Security.Permissions.KeyContainerPermissionAccessEntry[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.KeyContainerPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.PublisherIdentityPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.RegistryPermissionAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.RegistryPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetPathList (System.Security.Permissions.RegistryPermissionAccess, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddPathList (System.Security.Permissions.RegistryPermissionAccess, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddPathList (System.Security.Permissions.RegistryPermissionAccess, System.Security.AccessControl.AccessControlActions, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetPathList (System.Security.Permissions.RegistryPermissionAccess)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.Claim",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Claims.Claim"
      },
      {
        "name": "Clone (System.Security.Claims.ClaimsIdentity)",
        "returnType": "System.Security.Claims.Claim"
      },
      {
        "name": "WriteTo (System.IO.BinaryWriter)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimsIdentity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Claims.ClaimsIdentity"
      },
      {
        "name": "AddClaim (System.Security.Claims.Claim)",
        "returnType": "System.Void"
      },
      {
        "name": "AddClaims (System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "TryRemoveClaim (System.Security.Claims.Claim)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveClaim (System.Security.Claims.Claim)",
        "returnType": "System.Void"
      },
      {
        "name": "FindAll (System.Predicate)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "FindAll (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "HasClaim (System.Predicate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "HasClaim (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FindFirst (System.Predicate)",
        "returnType": "System.Security.Claims.Claim"
      },
      {
        "name": "FindFirst (CHARACTER)",
        "returnType": "System.Security.Claims.Claim"
      },
      {
        "name": "WriteTo (System.IO.BinaryWriter)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimsPrincipal",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Claims.ClaimsPrincipal"
      },
      {
        "name": "AddIdentity (System.Security.Claims.ClaimsIdentity)",
        "returnType": "System.Void"
      },
      {
        "name": "AddIdentities (System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "FindAll (System.Predicate)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "FindAll (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "FindFirst (System.Predicate)",
        "returnType": "System.Security.Claims.Claim"
      },
      {
        "name": "FindFirst (CHARACTER)",
        "returnType": "System.Security.Claims.Claim"
      },
      {
        "name": "HasClaim (System.Predicate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "HasClaim (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsInRole (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WriteTo (System.IO.BinaryWriter)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimTypes",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimValueTypes",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Claims.ClaimsIdentity",
      "System.Object"
    ],
    "name": "System.Security.Principal.GenericIdentity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Claims.ClaimsIdentity"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Claims.ClaimsPrincipal",
      "System.Object"
    ],
    "name": "System.Security.Principal.GenericPrincipal",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsInRole (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Security.Principal.IIdentity",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Security.Principal.IPrincipal",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "IsInRole (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Principal.PrincipalPolicy",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Principal.TokenAccessLevels",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Principal.TokenImpersonationLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsAccountType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Claims.ClaimsIdentity",
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsIdentity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Impersonate ()",
        "returnType": "System.Security.Principal.WindowsImpersonationContext"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Claims.ClaimsIdentity"
      }
    ],
    "staticMethods": [
      {
        "name": "GetCurrent ()",
        "returnType": "System.Security.Principal.WindowsIdentity"
      },
      {
        "name": "GetCurrent (LOGICAL)",
        "returnType": "System.Security.Principal.WindowsIdentity"
      },
      {
        "name": "GetCurrent (System.Security.Principal.TokenAccessLevels)",
        "returnType": "System.Security.Principal.WindowsIdentity"
      },
      {
        "name": "GetAnonymous ()",
        "returnType": "System.Security.Principal.WindowsIdentity"
      },
      {
        "name": "RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle, System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "Impersonate (System.IntPtr)",
        "returnType": "System.Security.Principal.WindowsImpersonationContext"
      },
      {
        "name": "RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle, ?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsImpersonationContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Undo ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsBuiltInRole",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Claims.ClaimsPrincipal",
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsPrincipal",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsInRole (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsInRole (System.Security.Principal.WindowsBuiltInRole)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsInRole (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsInRole (System.Security.Principal.SecurityIdentifier)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Principal.IdentityReference",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsValidTargetType (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Translate (System.Type)",
        "returnType": "System.Security.Principal.IdentityReference"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Security.Principal.IdentityReference, System.Security.Principal.IdentityReference)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Security.Principal.IdentityReference, System.Security.Principal.IdentityReference)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Principal.IdentityReferenceCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Security.Principal.IdentityReference[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Security.Principal.IdentityReference)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Security.Principal.IdentityReference)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Security.Principal.IdentityReference)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      },
      {
        "name": "Translate (System.Type)",
        "returnType": "System.Security.Principal.IdentityReferenceCollection"
      },
      {
        "name": "Translate (System.Type, LOGICAL)",
        "returnType": "System.Security.Principal.IdentityReferenceCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Principal.IdentityReference",
      "System.Object"
    ],
    "name": "System.Security.Principal.NTAccount",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsValidTargetType (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Translate (System.Type)",
        "returnType": "System.Security.Principal.IdentityReference"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Security.Principal.NTAccount, System.Security.Principal.NTAccount)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Security.Principal.NTAccount, System.Security.Principal.NTAccount)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Principal.WellKnownSidType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Principal.IdentityReference",
      "System.Object"
    ],
    "name": "System.Security.Principal.SecurityIdentifier",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Security.Principal.SecurityIdentifier)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsValidTargetType (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsAccountSid ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Translate (System.Type)",
        "returnType": "System.Security.Principal.IdentityReference"
      },
      {
        "name": "CompareTo (System.Security.Principal.SecurityIdentifier)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsWellKnown (System.Security.Principal.WellKnownSidType)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetBinaryForm (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsEqualDomainSid (System.Security.Principal.SecurityIdentifier)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Security.Principal.SecurityIdentifier, System.Security.Principal.SecurityIdentifier)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Security.Principal.SecurityIdentifier, System.Security.Principal.SecurityIdentifier)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.Principal.IdentityNotMappedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.AllMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationDirectory",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationDirectoryMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationSecurityInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationSecurityManager",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "DetermineApplicationTrust (System.ActivationContext, System.Security.Policy.TrustManagerContext)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationVersionMatch",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationTrust",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationTrustCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Policy.ApplicationTrust)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.Security.Policy.ApplicationTrust[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Security.Policy.ApplicationTrustCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Find (System.ApplicationIdentity, System.Security.Policy.ApplicationVersionMatch)",
        "returnType": "System.Security.Policy.ApplicationTrustCollection"
      },
      {
        "name": "Remove (System.ApplicationIdentity, System.Security.Policy.ApplicationVersionMatch)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Security.Policy.ApplicationTrust)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (System.Security.Policy.ApplicationTrust[])",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (System.Security.Policy.ApplicationTrustCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Policy.ApplicationTrustEnumerator"
      },
      {
        "name": "CopyTo (System.Security.Policy.ApplicationTrust[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.ApplicationTrustEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.CodeGroup",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddChild (System.Security.Policy.CodeGroup)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveChild (System.Security.Policy.CodeGroup)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Security.Policy.CodeGroup, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Resolve (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.PolicyStatement"
      },
      {
        "name": "ResolveMatchingCodeGroups (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHostEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "AddHostEvidence (?)",
        "returnType": "System.Void"
      },
      {
        "name": "AddHost (System.Object)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This method is obsolete. Please use AddHostEvidence instead.",
          "error": false
        }
      },
      {
        "name": "AddAssembly (System.Object)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This method is obsolete. Please use AddAssemblyEvidence instead.",
          "error": false
        }
      },
      {
        "name": "Merge (System.Security.Policy.Evidence)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Evidence should not be treated as an ICollection. Please use the GetHostEnumerator and GetAssemblyEnumerator methods rather than using CopyTo.",
          "error": false
        }
      },
      {
        "name": "GetAssemblyEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator",
        "obsolete": {
          "message": "GetEnumerator is obsolete. Please use GetAssemblyEnumerator and GetHostEnumerator instead.",
          "error": false
        }
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.Evidence"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveType (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAssemblyEvidence (?)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAssemblyEvidence ()",
        "returnType": "?"
      },
      {
        "name": "GetHostEvidence ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.EvidenceBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.CodeGroup",
      "System.Object"
    ],
    "name": "System.Security.Policy.FileCodeGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Resolve (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.PolicyStatement"
      },
      {
        "name": "ResolveMatchingCodeGroups (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.CodeGroup",
      "System.Object"
    ],
    "name": "System.Security.Policy.FirstMatchCodeGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Resolve (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.PolicyStatement"
      },
      {
        "name": "ResolveMatchingCodeGroups (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.CodeGroup"
      }
    ]
  },
  {
    "name": "System.Security.Policy.IIdentityPermissionFactory",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CreateIdentityPermission (System.Security.Policy.Evidence)",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "name": "System.Security.Policy.IMembershipCondition",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Security.Policy.IApplicationTrustManager",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "DetermineApplicationTrust (System.ActivationContext, System.Security.Policy.TrustManagerContext)",
        "returnType": "System.Security.Policy.ApplicationTrust"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Policy.TrustManagerUIContext",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.TrustManagerContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.CodeConnectAccess",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateOriginSchemeAccess (INTEGER)",
        "returnType": "System.Security.Policy.CodeConnectAccess"
      },
      {
        "name": "CreateAnySchemeAccess (INTEGER)",
        "returnType": "System.Security.Policy.CodeConnectAccess"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.CodeGroup",
      "System.Object"
    ],
    "name": "System.Security.Policy.NetCodeGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ResetConnectAccess ()",
        "returnType": "System.Void"
      },
      {
        "name": "AddConnectAccess (CHARACTER, System.Security.Policy.CodeConnectAccess)",
        "returnType": "System.Void"
      },
      {
        "name": "GetConnectAccessRules ()",
        "returnType": "System.Collections.DictionaryEntry[]"
      },
      {
        "name": "Resolve (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.PolicyStatement"
      },
      {
        "name": "ResolveMatchingCodeGroups (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.PermissionRequestEvidence",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.PermissionRequestEvidence"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.Policy.PolicyException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.PolicyLevel",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ResolveMatchingCodeGroups (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "AddFullTrustAssembly (System.Security.Policy.StrongName)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Because all GAC assemblies always get full trust, the full trust list is no longer meaningful. You should install any assemblies that are used in security policy in the GAC to ensure they are trusted.",
          "error": false
        }
      },
      {
        "name": "AddFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Because all GAC assemblies always get full trust, the full trust list is no longer meaningful. You should install any assemblies that are used in security policy in the GAC to ensure they are trusted.",
          "error": false
        }
      },
      {
        "name": "RemoveFullTrustAssembly (System.Security.Policy.StrongName)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Because all GAC assemblies always get full trust, the full trust list is no longer meaningful. You should install any assemblies that are used in security policy in the GAC to ensure they are trusted.",
          "error": false
        }
      },
      {
        "name": "RemoveFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Because all GAC assemblies always get full trust, the full trust list is no longer meaningful. You should install any assemblies that are used in security policy in the GAC to ensure they are trusted.",
          "error": false
        }
      },
      {
        "name": "AddNamedPermissionSet (System.Security.NamedPermissionSet)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveNamedPermissionSet (System.Security.NamedPermissionSet)",
        "returnType": "System.Security.NamedPermissionSet"
      },
      {
        "name": "RemoveNamedPermissionSet (CHARACTER)",
        "returnType": "System.Security.NamedPermissionSet"
      },
      {
        "name": "ChangeNamedPermissionSet (CHARACTER, System.Security.PermissionSet)",
        "returnType": "System.Security.NamedPermissionSet"
      },
      {
        "name": "GetNamedPermissionSet (CHARACTER)",
        "returnType": "System.Security.NamedPermissionSet"
      },
      {
        "name": "Recover ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Resolve (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.PolicyStatement"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateAppDomainLevel ()",
        "returnType": "System.Security.Policy.PolicyLevel",
        "obsolete": {
          "message": "AppDomain policy levels are obsolete and will be removed in a future release of the .NET Framework. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Policy.PolicyStatementAttribute",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.PolicyStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.PolicyStatement"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.Site",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateIdentityPermission (System.Security.Policy.Evidence)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateFromUrl (CHARACTER)",
        "returnType": "System.Security.Policy.Site"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.SiteMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.StrongName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateIdentityPermission (System.Security.Policy.Evidence)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.StrongNameMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.CodeGroup",
      "System.Object"
    ],
    "name": "System.Security.Policy.UnionCodeGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Resolve (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.PolicyStatement"
      },
      {
        "name": "ResolveMatchingCodeGroups (System.Security.Policy.Evidence)",
        "returnType": "System.Security.Policy.CodeGroup"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.CodeGroup"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.Url",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateIdentityPermission (System.Security.Policy.Evidence)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.UrlMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.Zone",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateIdentityPermission (System.Security.Policy.Evidence)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateFromUrl (CHARACTER)",
        "returnType": "System.Security.Policy.Zone"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.ZoneMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.GacInstalled",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateIdentityPermission (System.Security.Policy.Evidence)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.GacMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.Hash",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "GenerateHash (System.Security.Cryptography.HashAlgorithm)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateSHA1 (MEMPTR)",
        "returnType": "System.Security.Policy.Hash"
      },
      {
        "name": "CreateSHA256 (MEMPTR)",
        "returnType": "System.Security.Policy.Hash"
      },
      {
        "name": "CreateMD5 (MEMPTR)",
        "returnType": "System.Security.Policy.Hash"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.HashMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Security.Policy.Publisher",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateIdentityPermission (System.Security.Policy.Evidence)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.PublisherMembershipCondition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Check (System.Security.Policy.Evidence)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.Policy.IMembershipCondition"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToXml (System.Security.Policy.PolicyLevel)",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement, System.Security.Policy.PolicyLevel)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Resources.IResourceReader",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      }
    ]
  },
  {
    "name": "System.Resources.IResourceWriter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddResource (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResource (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResource (CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Generate ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Resources.MissingManifestResourceException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Resources.MissingSatelliteAssemblyException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Resources.NeutralResourcesLanguageAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ReleaseAllResources ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetResourceSet (System.Globalization.CultureInfo, LOGICAL, LOGICAL)",
        "returnType": "System.Resources.ResourceSet"
      },
      {
        "name": "GetString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetString (CHARACTER, System.Globalization.CultureInfo)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObject (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetObject (CHARACTER, System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "GetStream (CHARACTER)",
        "returnType": "System.IO.UnmanagedMemoryStream"
      },
      {
        "name": "GetStream (CHARACTER, System.Globalization.CultureInfo)",
        "returnType": "System.IO.UnmanagedMemoryStream"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateFileBasedResourceManager (CHARACTER, CHARACTER, System.Type)",
        "returnType": "System.Resources.ResourceManager"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "GetResourceData (CHARACTER, output System.String&, output System.Byte[]&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceSet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetDefaultReader ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetDefaultWriter ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "GetString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetString (CHARACTER, LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObject (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetObject (CHARACTER, LOGICAL)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceWriter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddResource (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResource (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResource (CHARACTER, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResource (CHARACTER, System.IO.Stream, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResource (CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResourceData (CHARACTER, CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Generate ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Resources.SatelliteContractVersionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Resources.UltimateResourceFallbackLocation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.Calendar",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "AddMilliseconds (DATETIME, DECIMAL)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddDays (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddHours (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddMinutes (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddSeconds (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddWeeks (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHour (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMilliseconds (DATETIME)",
        "returnType": "DECIMAL"
      },
      {
        "name": "GetMinute (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetSecond (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetWeekOfYear (DATETIME, System.Globalization.CalendarWeekRule, System.DayOfWeek)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapYear (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      }
    ],
    "staticMethods": [
      {
        "name": "ReadOnly (System.Globalization.Calendar)",
        "returnType": "System.Globalization.Calendar"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CalendarAlgorithmType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CalendarWeekRule",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.CharUnicodeInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetUnicodeCategory (CHARACTER)",
        "returnType": "System.Globalization.UnicodeCategory"
      },
      {
        "name": "GetNumericValue (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "GetNumericValue (CHARACTER, INTEGER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "GetDecimalDigitValue (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDecimalDigitValue (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDigitValue (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDigitValue (CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetUnicodeCategory (CHARACTER, INTEGER)",
        "returnType": "System.Globalization.UnicodeCategory"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CompareOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.CompareInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (CHARACTER, CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, INTEGER, CHARACTER, INTEGER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsPrefix (CHARACTER, CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSuffix (CHARACTER, CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Compare (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, CHARACTER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "Compare (CHARACTER, INTEGER, CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsPrefix (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSuffix (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (CHARACTER, CHARACTER, INTEGER, INTEGER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetSortKey (CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "System.Globalization.SortKey"
      },
      {
        "name": "GetSortKey (CHARACTER)",
        "returnType": "System.Globalization.SortKey"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode (CHARACTER, System.Globalization.CompareOptions)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetCompareInfo (INTEGER, System.Reflection.Assembly)",
        "returnType": "System.Globalization.CompareInfo"
      },
      {
        "name": "GetCompareInfo (INTEGER)",
        "returnType": "System.Globalization.CompareInfo"
      },
      {
        "name": "GetCompareInfo (CHARACTER)",
        "returnType": "System.Globalization.CompareInfo"
      },
      {
        "name": "IsSortable (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSortable (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCompareInfo (CHARACTER, System.Reflection.Assembly)",
        "returnType": "System.Globalization.CompareInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.CultureInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetFormat (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "ClearCachedData ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetConsoleFallbackUICulture ()",
        "returnType": "System.Globalization.CultureInfo"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateSpecificCulture (CHARACTER)",
        "returnType": "System.Globalization.CultureInfo"
      },
      {
        "name": "GetCultures (System.Globalization.CultureTypes)",
        "returnType": "System.Globalization.CultureInfo[]"
      },
      {
        "name": "ReadOnly (System.Globalization.CultureInfo)",
        "returnType": "System.Globalization.CultureInfo"
      },
      {
        "name": "GetCultureInfo (INTEGER)",
        "returnType": "System.Globalization.CultureInfo"
      },
      {
        "name": "GetCultureInfo (CHARACTER)",
        "returnType": "System.Globalization.CultureInfo"
      },
      {
        "name": "GetCultureInfo (CHARACTER, CHARACTER)",
        "returnType": "System.Globalization.CultureInfo"
      },
      {
        "name": "GetCultureInfoByIetfLanguageTag (CHARACTER)",
        "returnType": "System.Globalization.CultureInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Globalization.CultureNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CultureTypes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.DateTimeStyles",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.DateTimeFormatInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAllDateTimePatterns (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFormat (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetEra (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEraName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAbbreviatedEraName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAbbreviatedDayName (System.DayOfWeek)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetShortestDayName (System.DayOfWeek)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAllDateTimePatterns ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetDayName (System.DayOfWeek)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAbbreviatedMonthName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetMonthName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SetAllDateTimePatterns (System.String[], CHARACTER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetInstance (System.IFormatProvider)",
        "returnType": "System.Globalization.DateTimeFormatInfo"
      },
      {
        "name": "ReadOnly (System.Globalization.DateTimeFormatInfo)",
        "returnType": "System.Globalization.DateTimeFormatInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.DaylightTime",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.DigitShapes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.GlobalizationExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetStringComparer (System.Globalization.CompareInfo, System.Globalization.CompareOptions)",
        "returnType": "System.StringComparer"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.GregorianCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.GregorianCalendarTypes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.HebrewCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.HijriCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.UmAlQuraCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.EastAsianLunisolarCalendar",
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.ChineseLunisolarCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.EastAsianLunisolarCalendar",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetSexagenaryYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCelestialStem (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTerrestrialBranch (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.EastAsianLunisolarCalendar",
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.JapaneseLunisolarCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.JulianCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.EastAsianLunisolarCalendar",
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.KoreanLunisolarCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.PersianCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.EastAsianLunisolarCalendar",
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.TaiwanLunisolarCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.IdnMapping",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAscii (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAscii (CHARACTER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetUnicode (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetUnicode (CHARACTER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetAscii (CHARACTER, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetUnicode (CHARACTER, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.JapaneseCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetWeekOfYear (DATETIME, System.Globalization.CalendarWeekRule, System.DayOfWeek)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.KoreanCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetWeekOfYear (DATETIME, System.Globalization.CalendarWeekRule, System.DayOfWeek)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.RegionInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.SortKey",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Compare (System.Globalization.SortKey, System.Globalization.SortKey)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.StringInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "SubstringByTextElements (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SubstringByTextElements (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetNextTextElement (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetNextTextElement (CHARACTER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTextElementEnumerator (CHARACTER)",
        "returnType": "System.Globalization.TextElementEnumerator"
      },
      {
        "name": "GetTextElementEnumerator (CHARACTER, INTEGER)",
        "returnType": "System.Globalization.TextElementEnumerator"
      },
      {
        "name": "ParseCombiningCharacters (CHARACTER)",
        "returnType": "System.Int32[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.TaiwanCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetWeekOfYear (DATETIME, System.Globalization.CalendarWeekRule, System.DayOfWeek)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.TextElementEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetTextElement ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.TextInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToLower (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToLower (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUpper (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToUpper (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToTitleCase (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "ReadOnly (System.Globalization.TextInfo)",
        "returnType": "System.Globalization.TextInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Globalization.Calendar",
      "System.Object"
    ],
    "name": "System.Globalization.ThaiBuddhistCalendar",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddMonths (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "AddYears (DATETIME, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetDaysInMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDaysInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDayOfWeek (DATETIME)",
        "returnType": "System.DayOfWeek"
      },
      {
        "name": "GetDayOfYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonthsInYear (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetWeekOfYear (DATETIME, System.Globalization.CalendarWeekRule, System.DayOfWeek)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEra (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMonth (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetYear (DATETIME)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapDay (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsLeapYear (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLeapMonth (INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLeapMonth (INTEGER, INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDateTime (INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToFourDigitYear (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanStyles",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.NumberFormatInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetFormat (System.Type)",
        "returnType": "System.Object"
      }
    ],
    "staticMethods": [
      {
        "name": "GetInstance (System.IFormatProvider)",
        "returnType": "System.Globalization.NumberFormatInfo"
      },
      {
        "name": "ReadOnly (System.Globalization.NumberFormatInfo)",
        "returnType": "System.Globalization.NumberFormatInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.NumberStyles",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.UnicodeCategory",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.SortVersion",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Globalization.SortVersion)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Globalization.SortVersion, System.Globalization.SortVersion)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Globalization.SortVersion, System.Globalization.SortVersion)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.ConditionalAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Debugger",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "NotifyOfCrossThreadDependency ()",
        "returnType": "System.Void"
      },
      {
        "name": "IsLogging ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Break ()",
        "returnType": "System.Void"
      },
      {
        "name": "Launch ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Log (INTEGER, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerStepThroughAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerStepperBoundaryAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerHiddenAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerNonUserCodeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerBrowsableState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerBrowsableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerTypeProxyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerDisplayAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggerVisualizerAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.StackTrace",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetFrame (INTEGER)",
        "returnType": "System.Diagnostics.StackFrame"
      },
      {
        "name": "GetFrames ()",
        "returnType": "System.Diagnostics.StackFrame[]"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.StackFrame",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetMethod ()",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "GetNativeOffset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetILOffset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetFileName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetFileLineNumber ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetFileColumnNumber ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolBinder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetReader (INTEGER, CHARACTER, CHARACTER)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolReader",
        "obsolete": {
          "message": "The recommended alternative is ISymbolBinder1.GetReader. ISymbolBinder1.GetReader takes the importer interface pointer as an IntPtr instead of an Int32, and thus works on both 32-bit and 64-bit architectures. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202=14202",
          "error": false
        }
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolBinder1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetReader (System.IntPtr, CHARACTER, CHARACTER)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolReader"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolDocument",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetCheckSum ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "FindClosestLine (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetSourceRange (INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolDocumentWriter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "SetSource (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCheckSum (System.Guid, MEMPTR)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolMethod",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetSequencePoints (System.Int32[], System.Diagnostics.SymbolStore.ISymbolDocument[], System.Int32[], System.Int32[], System.Int32[], System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "GetScope (INTEGER)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolScope"
      },
      {
        "name": "GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument, INTEGER, INTEGER)",
        "returnType": "System.Int32[]"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolVariable[]"
      },
      {
        "name": "GetNamespace ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolNamespace"
      },
      {
        "name": "GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[], System.Int32[], System.Int32[])",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolNamespace",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetNamespaces ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolNamespace[]"
      },
      {
        "name": "GetVariables ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolVariable[]"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolReader",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetDocument (CHARACTER, System.Guid, System.Guid, System.Guid)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolDocument"
      },
      {
        "name": "GetDocuments ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolDocument[]"
      },
      {
        "name": "GetMethod (System.Diagnostics.SymbolStore.SymbolToken)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolMethod"
      },
      {
        "name": "GetMethod (System.Diagnostics.SymbolStore.SymbolToken, INTEGER)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolMethod"
      },
      {
        "name": "GetVariables (System.Diagnostics.SymbolStore.SymbolToken)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolVariable[]"
      },
      {
        "name": "GetGlobalVariables ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolVariable[]"
      },
      {
        "name": "GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument, INTEGER, INTEGER)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolMethod"
      },
      {
        "name": "GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetNamespaces ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolNamespace[]"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolScope",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetChildren ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolScope[]"
      },
      {
        "name": "GetLocals ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolVariable[]"
      },
      {
        "name": "GetNamespaces ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolNamespace[]"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolVariable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetSignature ()",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "name": "System.Diagnostics.SymbolStore.ISymbolWriter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Initialize (System.IntPtr, CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineDocument (CHARACTER, System.Guid, System.Guid, System.Guid)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolDocumentWriter"
      },
      {
        "name": "SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenMethod (System.Diagnostics.SymbolStore.SymbolToken)",
        "returnType": "System.Void"
      },
      {
        "name": "CloseMethod ()",
        "returnType": "System.Void"
      },
      {
        "name": "DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter, System.Int32[], System.Int32[], System.Int32[], System.Int32[], System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "OpenScope (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "CloseScope (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetScopeRange (INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineLocalVariable (CHARACTER, System.Reflection.FieldAttributes, MEMPTR, System.Diagnostics.SymbolStore.SymAddressKind, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineParameter (CHARACTER, System.Reflection.ParameterAttributes, INTEGER, System.Diagnostics.SymbolStore.SymAddressKind, INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineField (System.Diagnostics.SymbolStore.SymbolToken, CHARACTER, System.Reflection.FieldAttributes, MEMPTR, System.Diagnostics.SymbolStore.SymAddressKind, INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineGlobalVariable (CHARACTER, System.Reflection.FieldAttributes, MEMPTR, System.Diagnostics.SymbolStore.SymAddressKind, INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken, CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenNamespace (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "CloseNamespace ()",
        "returnType": "System.Void"
      },
      {
        "name": "UsingNamespace (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter, INTEGER, INTEGER, System.Diagnostics.SymbolStore.ISymbolDocumentWriter, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetUnderlyingWriter (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SymbolStore.SymAddressKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.SymbolStore.SymDocumentType",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.SymbolStore.SymLanguageType",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.SymbolStore.SymLanguageVendor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SymbolStore.SymbolToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetToken ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Diagnostics.SymbolStore.SymbolToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Diagnostics.SymbolStore.SymbolToken, System.Diagnostics.SymbolStore.SymbolToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Diagnostics.SymbolStore.SymbolToken, System.Diagnostics.SymbolStore.SymbolToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.PureAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractClassAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractClassForAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractInvariantMethodAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractVerificationAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractArgumentValidatorAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractAbbreviatorAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractOptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.Contract",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "ContractFailed"
    ],
    "staticMethods": [
      {
        "name": "Assume (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Assume (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ForAll (INTEGER, INTEGER, System.Predicate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Exists (INTEGER, INTEGER, System.Predicate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EndContractBlock ()",
        "returnType": "System.Void"
      },
      {
        "name": "add_ContractFailed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ContractFailed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Requires (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Requires (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Requires (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Requires (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Ensures (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Ensures (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "EnsuresOnThrow (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "EnsuresOnThrow (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Result ()",
        "returnType": "?"
      },
      {
        "name": "ValueAtReturn (output ?)",
        "returnType": "?"
      },
      {
        "name": "OldValue (?)",
        "returnType": "?"
      },
      {
        "name": "Invariant (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Invariant (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ForAll (?, ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Exists (?, ?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractFailureKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.ContractFailedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetHandled ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetUnwind ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Contracts.Internal.ContractHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "TriggerFailure (System.Diagnostics.Contracts.ContractFailureKind, CHARACTER, CHARACTER, CHARACTER, System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "RaiseContractFailedEvent (System.Diagnostics.Contracts.ContractFailureKind, CHARACTER, CHARACTER, System.Exception)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.CodeAnalysis.SuppressMessageAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventActivityOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSource",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "EventCommandExecuted"
    ],
    "methods": [
      {
        "name": "IsEnabled ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsEnabled (System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsEnabled (System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords, System.Diagnostics.Tracing.EventChannel)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetTrait (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "add_EventCommandExecuted (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_EventCommandExecuted (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Diagnostics.Tracing.EventSourceOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Write (CHARACTER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Diagnostics.Tracing.EventSourceOptions, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Diagnostics.Tracing.EventSourceOptions&, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Diagnostics.Tracing.EventSourceOptions&, System.Guid&, System.Guid&, ?)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetGuid (System.Type)",
        "returnType": "System.Guid"
      },
      {
        "name": "GetName (System.Type)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GenerateManifest (System.Type, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GenerateManifest (System.Type, CHARACTER, System.Diagnostics.Tracing.EventManifestOptions)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetSources ()",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "SendCommand (System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventCommand, System.Collections.Generic.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCurrentThreadActivityId (System.Guid)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCurrentThreadActivityId (System.Guid, output System.Guid&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSourceSettings",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "EventSourceCreated",
      "EventWritten"
    ],
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "EnableEvents (System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "EnableEvents (System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords)",
        "returnType": "System.Void"
      },
      {
        "name": "EnableEvents (System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords, System.Collections.Generic.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "DisableEvents (System.Diagnostics.Tracing.EventSource)",
        "returnType": "System.Void"
      },
      {
        "name": "add_EventSourceCreated (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_EventSourceCreated (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_EventWritten (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_EventWritten (System.EventHandler)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "EventSourceIndex (System.Diagnostics.Tracing.EventSource)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventCommandEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "EnableEvent (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DisableEvent (INTEGER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSourceCreatedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventWrittenEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSourceAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.NonEventAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventCommand",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventManifestOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSourceException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventTask",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventOpcode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventChannel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventKeywords",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventDataAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventFieldTags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventFieldAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventFieldFormat",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventIgnoreAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSourceOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventTags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.CaseInsensitiveComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Object, System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.CaseInsensitiveHashCodeProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode (System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.CollectionBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.DictionaryBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ReadOnlyCollectionBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Queue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Enqueue (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Dequeue ()",
        "returnType": "System.Object"
      },
      {
        "name": "Peek ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.Collections.Queue)",
        "returnType": "System.Collections.Queue"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (INTEGER, INTEGER, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetEnumerator (INTEGER, INTEGER)",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "LastIndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "ToArray (System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetRange (INTEGER, INTEGER)",
        "returnType": "System.Collections.ArrayList"
      }
    ],
    "staticMethods": [
      {
        "name": "Adapter (MEMPTR)",
        "returnType": "System.Collections.ArrayList"
      },
      {
        "name": "FixedSize (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "FixedSize (System.Collections.ArrayList)",
        "returnType": "System.Collections.ArrayList"
      },
      {
        "name": "ReadOnly (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ReadOnly (System.Collections.ArrayList)",
        "returnType": "System.Collections.ArrayList"
      },
      {
        "name": "Repeat (System.Object, INTEGER)",
        "returnType": "System.Collections.ArrayList"
      },
      {
        "name": "Synchronized (MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Synchronized (System.Collections.ArrayList)",
        "returnType": "System.Collections.ArrayList"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.BitArray",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Get (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Set (INTEGER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAll (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "And (System.Collections.BitArray)",
        "returnType": "System.Collections.BitArray"
      },
      {
        "name": "Or (System.Collections.BitArray)",
        "returnType": "System.Collections.BitArray"
      },
      {
        "name": "Xor (System.Collections.BitArray)",
        "returnType": "System.Collections.BitArray"
      },
      {
        "name": "Not ()",
        "returnType": "System.Collections.BitArray"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Stack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Peek ()",
        "returnType": "System.Object"
      },
      {
        "name": "Pop ()",
        "returnType": "System.Object"
      },
      {
        "name": "Push (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.Collections.Stack)",
        "returnType": "System.Collections.Stack"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Comparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Object, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Hashtable",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsKey (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.Collections.Hashtable)",
        "returnType": "System.Collections.Hashtable"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.DictionaryEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Collections.ICollection",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Collections.IComparer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Compare (System.Object, System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Collections.IDictionary",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Collections.IDictionaryEnumerator",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Collections.IEnumerable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "name": "System.Collections.IEnumerator",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Collections.IEqualityComparer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Equals (System.Object, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Collections.IHashCodeProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetHashCode (System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Collections.IList",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.SortedList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsKey (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetByIndex (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "GetKey (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetKeyList ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetValueList ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "IndexOfKey (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOfValue (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetByIndex (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.Collections.SortedList)",
        "returnType": "System.Collections.SortedList"
      }
    ]
  },
  {
    "name": "System.Collections.IStructuralEquatable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Equals (System.Object, System.Collections.IEqualityComparer)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (System.Collections.IEqualityComparer)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Collections.IStructuralComparable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CompareTo (System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.StructuralComparisons",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentStack`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Push (?)",
        "returnType": "System.Void"
      },
      {
        "name": "PushRange (?)",
        "returnType": "System.Void"
      },
      {
        "name": "PushRange (?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "TryPeek (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryPop (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryPopRange (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryPopRange (?, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "name": "System.Collections.Concurrent.IProducerConsumerCollection`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "TryAdd (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryTake (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentDictionary`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TryAdd (?, ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsKey (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryRemove (?, output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryUpdate (?, ?, ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "GetOrAdd (?, ?)",
        "returnType": "?"
      },
      {
        "name": "GetOrAdd (?, ?)",
        "returnType": "?"
      },
      {
        "name": "GetOrAdd (?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "AddOrUpdate (?, ?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "AddOrUpdate (?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "AddOrUpdate (?, ?, ?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentQueue`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Enqueue (?)",
        "returnType": "System.Void"
      },
      {
        "name": "TryDequeue (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryPeek (output ?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner`1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetPartitions (INTEGER)",
        "returnType": "?"
      },
      {
        "name": "GetDynamicPartitions ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.OrderablePartitioner`1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetOrderablePartitions (INTEGER)",
        "returnType": "?"
      },
      {
        "name": "GetOrderableDynamicPartitions ()",
        "returnType": "?"
      },
      {
        "name": "GetPartitions (INTEGER)",
        "returnType": "?"
      },
      {
        "name": "GetDynamicPartitions ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.EnumerablePartitionerOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (INT64, INT64)",
        "returnType": "System.Collections.Concurrent.OrderablePartitioner"
      },
      {
        "name": "Create (INT64, INT64, INT64)",
        "returnType": "System.Collections.Concurrent.OrderablePartitioner"
      },
      {
        "name": "Create (INTEGER, INTEGER)",
        "returnType": "System.Collections.Concurrent.OrderablePartitioner"
      },
      {
        "name": "Create (INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Collections.Concurrent.OrderablePartitioner"
      },
      {
        "name": "Create (?, LOGICAL)",
        "returnType": "?"
      },
      {
        "name": "Create (?, LOGICAL)",
        "returnType": "?"
      },
      {
        "name": "Create (?)",
        "returnType": "?"
      },
      {
        "name": "Create (?, System.Collections.Concurrent.EnumerablePartitionerOptions)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.Collection`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "IndexOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ReadOnlyCollection`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ReadOnlyDictionary`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ContainsKey (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.KeyedCollection`2",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.Comparer`1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (?, ?)",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (?)",
        "returnType": "System.Collections.Generic.Comparer"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.Dictionary`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ContainsKey (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.EqualityComparer`1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (?, ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.ICollection`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.IComparer`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Compare (?, ?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.IDictionary`2",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ContainsKey (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.IEnumerable`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.IEnumerator`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Collections.Generic.IEqualityComparer`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Equals (?, ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.IList`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "IndexOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.IReadOnlyCollection`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Collections.Generic.IReadOnlyList`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Collections.Generic.IReadOnlyDictionary`2",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ContainsKey (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Collections.Generic.KeyNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.KeyValuePair`2",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.List`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (?)",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (INTEGER, INTEGER, ?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (INTEGER, ?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "FindIndex (INTEGER, INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "IndexOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertRange (INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAll (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (INTEGER, INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (?)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "TrimExcess ()",
        "returnType": "System.Void"
      },
      {
        "name": "AsReadOnly ()",
        "returnType": "?"
      },
      {
        "name": "BinarySearch (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (?, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "ConvertAll (?)",
        "returnType": "?"
      },
      {
        "name": "CopyTo (?)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Exists (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Find (?)",
        "returnType": "?"
      },
      {
        "name": "FindAll (?)",
        "returnType": "System.Collections.Generic.List"
      },
      {
        "name": "FindIndex (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindIndex (INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindLast (?)",
        "returnType": "?"
      },
      {
        "name": "FindLastIndex (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindLastIndex (INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindLastIndex (INTEGER, INTEGER, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "ForEach (?)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRange (INTEGER, INTEGER)",
        "returnType": "System.Collections.Generic.List"
      },
      {
        "name": "IndexOf (?, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (?, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (?, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (?, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reverse ()",
        "returnType": "System.Void"
      },
      {
        "name": "TrueForAll (?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.AbandonedMutexException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocal`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocalValueChangedArgs`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.EventWaitHandle",
      "System.Threading.WaitHandle",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.AutoResetEvent",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.SendOrPostCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.SynchronizationContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OperationStarted ()",
        "returnType": "System.Void"
      },
      {
        "name": "OperationCompleted ()",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.IntPtr[], LOGICAL, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsWaitNotificationRequired ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Send (System.Threading.SendOrPostCallback, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateCopy ()",
        "returnType": "System.Threading.SynchronizationContext"
      },
      {
        "name": "Post (System.Threading.SendOrPostCallback, System.Object)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "SetSynchronizationContext (System.Threading.SynchronizationContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.CompressedStack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateCopy ()",
        "returnType": "System.Threading.CompressedStack"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Capture ()",
        "returnType": "System.Threading.CompressedStack"
      },
      {
        "name": "Run (System.Threading.CompressedStack, System.Threading.ContextCallback, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCompressedStack ()",
        "returnType": "System.Threading.CompressedStack"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.EventResetMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.WaitHandle",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.EventWaitHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Set ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetAccessControl ()",
        "returnType": "System.Security.AccessControl.EventWaitHandleSecurity"
      },
      {
        "name": "SetAccessControl (System.Security.AccessControl.EventWaitHandleSecurity)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "OpenExisting (CHARACTER)",
        "returnType": "System.Threading.EventWaitHandle"
      },
      {
        "name": "OpenExisting (CHARACTER, System.Security.AccessControl.EventWaitHandleRights)",
        "returnType": "System.Threading.EventWaitHandle"
      },
      {
        "name": "TryOpenExisting (CHARACTER, output System.Threading.EventWaitHandle&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryOpenExisting (CHARACTER, System.Security.AccessControl.EventWaitHandleRights, output System.Threading.EventWaitHandle&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.ContextCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.AsyncFlowControl",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Undo ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Threading.AsyncFlowControl)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Threading.AsyncFlowControl, System.Threading.AsyncFlowControl)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Threading.AsyncFlowControl, System.Threading.AsyncFlowControl)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ExecutionContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "CreateCopy ()",
        "returnType": "System.Threading.ExecutionContext"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Run (System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "IsFlowSuppressed ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Capture ()",
        "returnType": "System.Threading.ExecutionContext"
      },
      {
        "name": "SuppressFlow ()",
        "returnType": "System.Threading.AsyncFlowControl"
      },
      {
        "name": "RestoreFlow ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Interlocked",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Increment (System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Increment (System.Int64&)",
        "returnType": "INT64"
      },
      {
        "name": "Decrement (System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Decrement (System.Int64&)",
        "returnType": "INT64"
      },
      {
        "name": "Add (System.Int32&, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Add (System.Int64&, INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Read (System.Int64&)",
        "returnType": "INT64"
      },
      {
        "name": "MemoryBarrier ()",
        "returnType": "System.Void"
      },
      {
        "name": "Exchange (System.Int64&, INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Exchange (System.Single&, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Exchange (System.Double&, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Exchange (?, ?)",
        "returnType": "?"
      },
      {
        "name": "CompareExchange (System.Int64&, INT64, INT64)",
        "returnType": "INT64"
      },
      {
        "name": "CompareExchange (System.Single&, DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "CompareExchange (System.Double&, DECIMAL, DECIMAL)",
        "returnType": "DECIMAL"
      },
      {
        "name": "CompareExchange (?, ?, ?)",
        "returnType": "?"
      },
      {
        "name": "SpeculationBarrier ()",
        "returnType": "System.Void"
      },
      {
        "name": "Exchange (System.Int32&, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Exchange (System.Object&, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "Exchange (System.IntPtr&, System.IntPtr)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "CompareExchange (System.Int32&, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "CompareExchange (System.Object&, System.Object, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "CompareExchange (System.IntPtr&, System.IntPtr, System.IntPtr)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.HostExecutionContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateCopy ()",
        "returnType": "System.Threading.HostExecutionContext"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose (LOGICAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.HostExecutionContextManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Revert (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Capture ()",
        "returnType": "System.Threading.HostExecutionContext"
      },
      {
        "name": "SetHostExecutionContext (System.Threading.HostExecutionContext)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.LockCookie",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Threading.LockCookie)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Threading.LockCookie, System.Threading.LockCookie)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Threading.LockCookie, System.Threading.LockCookie)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.LockRecursionException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.EventWaitHandle",
      "System.Threading.WaitHandle",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.ManualResetEvent",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Monitor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Enter (System.Object, System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "TryEnter (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryEnter (System.Object, System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "TryEnter (System.Object, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryEnter (System.Object, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryEnter (System.Object, INTEGER, System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "TryEnter (System.Object, System.TimeSpan, System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsEntered (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.Object, INTEGER, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.Object, System.TimeSpan, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.Object, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.Object, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Pulse (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "PulseAll (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Enter (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Exit (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Threading.WaitHandle",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.Mutex",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ReleaseMutex ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessControl ()",
        "returnType": "System.Security.AccessControl.MutexSecurity"
      },
      {
        "name": "SetAccessControl (System.Security.AccessControl.MutexSecurity)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "OpenExisting (CHARACTER)",
        "returnType": "System.Threading.Mutex"
      },
      {
        "name": "OpenExisting (CHARACTER, System.Security.AccessControl.MutexRights)",
        "returnType": "System.Threading.Mutex"
      },
      {
        "name": "TryOpenExisting (CHARACTER, output System.Threading.Mutex&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryOpenExisting (CHARACTER, System.Security.AccessControl.MutexRights, output System.Threading.Mutex&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.NativeOverlapped",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Overlapped",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Pack (System.Threading.IOCompletionCallback, System.Object)",
        "returnType": "System.Threading.NativeOverlapped*"
      },
      {
        "name": "UnsafePack (System.Threading.IOCompletionCallback, System.Object)",
        "returnType": "System.Threading.NativeOverlapped*"
      },
      {
        "name": "Pack (System.Threading.IOCompletionCallback)",
        "returnType": "System.Threading.NativeOverlapped*",
        "obsolete": {
          "message": "This method is not safe.  Use Pack (iocb, userData) instead.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "UnsafePack (System.Threading.IOCompletionCallback)",
        "returnType": "System.Threading.NativeOverlapped*",
        "obsolete": {
          "message": "This method is not safe.  Use UnsafePack (iocb, userData) instead.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      }
    ],
    "staticMethods": [
      {
        "name": "Unpack (System.Threading.NativeOverlapped*)",
        "returnType": "System.Threading.Overlapped"
      },
      {
        "name": "Free (System.Threading.NativeOverlapped*)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.PreAllocatedOverlapped",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadPoolBoundHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AllocateNativeOverlapped (System.Threading.IOCompletionCallback, System.Object, System.Object)",
        "returnType": "System.Threading.NativeOverlapped*"
      },
      {
        "name": "AllocateNativeOverlapped (System.Threading.PreAllocatedOverlapped)",
        "returnType": "System.Threading.NativeOverlapped*"
      },
      {
        "name": "FreeNativeOverlapped (System.Threading.NativeOverlapped*)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "BindHandle (System.Runtime.InteropServices.SafeHandle)",
        "returnType": "System.Threading.ThreadPoolBoundHandle"
      },
      {
        "name": "GetNativeOverlappedState (System.Threading.NativeOverlapped*)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.ParameterizedThreadStart",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Threading.ReaderWriterLock",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AcquireReaderLock (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AcquireReaderLock (System.TimeSpan)",
        "returnType": "System.Void"
      },
      {
        "name": "AcquireWriterLock (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AcquireWriterLock (System.TimeSpan)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseReaderLock ()",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseWriterLock ()",
        "returnType": "System.Void"
      },
      {
        "name": "UpgradeToWriterLock (INTEGER)",
        "returnType": "System.Threading.LockCookie"
      },
      {
        "name": "UpgradeToWriterLock (System.TimeSpan)",
        "returnType": "System.Threading.LockCookie"
      },
      {
        "name": "DowngradeFromWriterLock (System.Threading.LockCookie&)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseLock ()",
        "returnType": "System.Threading.LockCookie"
      },
      {
        "name": "RestoreLock (System.Threading.LockCookie&)",
        "returnType": "System.Void"
      },
      {
        "name": "AnyWritersSince (INTEGER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.SemaphoreFullException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.SynchronizationLockException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Threading.Thread",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Start ()",
        "returnType": "System.Void"
      },
      {
        "name": "Start (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCompressedStack (System.Threading.CompressedStack)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Thread.SetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class",
          "error": false
        }
      },
      {
        "name": "GetCompressedStack ()",
        "returnType": "System.Threading.CompressedStack",
        "obsolete": {
          "message": "Thread.GetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class",
          "error": false
        }
      },
      {
        "name": "Abort (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Suspend ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Thread.Suspend has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "Resume ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Thread.Resume has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "Interrupt ()",
        "returnType": "System.Void"
      },
      {
        "name": "Join ()",
        "returnType": "System.Void"
      },
      {
        "name": "Join (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Join (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetApartmentState ()",
        "returnType": "System.Threading.ApartmentState"
      },
      {
        "name": "TrySetApartmentState (System.Threading.ApartmentState)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetApartmentState (System.Threading.ApartmentState)",
        "returnType": "System.Void"
      },
      {
        "name": "DisableComObjectEagerCleanup ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "ResetAbort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Sleep (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sleep (System.TimeSpan)",
        "returnType": "System.Void"
      },
      {
        "name": "SpinWait (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Yield ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "AllocateDataSlot ()",
        "returnType": "System.LocalDataStoreSlot"
      },
      {
        "name": "AllocateNamedDataSlot (CHARACTER)",
        "returnType": "System.LocalDataStoreSlot"
      },
      {
        "name": "GetNamedDataSlot (CHARACTER)",
        "returnType": "System.LocalDataStoreSlot"
      },
      {
        "name": "FreeNamedDataSlot (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetData (System.LocalDataStoreSlot)",
        "returnType": "System.Object"
      },
      {
        "name": "SetData (System.LocalDataStoreSlot, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDomain ()",
        "returnType": "System.AppDomain"
      },
      {
        "name": "GetDomainID ()",
        "returnType": "INTEGER"
      },
      {
        "name": "VolatileRead (System.Byte&)",
        "returnType": "INTEGER"
      },
      {
        "name": "VolatileRead (System.Int16&)",
        "returnType": "INTEGER"
      },
      {
        "name": "VolatileRead (System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "VolatileRead (System.Int64&)",
        "returnType": "INT64"
      },
      {
        "name": "VolatileRead (System.SByte&)",
        "returnType": "INTEGER"
      },
      {
        "name": "VolatileRead (System.UInt16&)",
        "returnType": "INTEGER"
      },
      {
        "name": "VolatileRead (System.UInt32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "VolatileRead (System.IntPtr&)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "VolatileRead (System.UIntPtr&)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "VolatileRead (System.UInt64&)",
        "returnType": "INT64"
      },
      {
        "name": "VolatileRead (System.Single&)",
        "returnType": "DECIMAL"
      },
      {
        "name": "VolatileRead (System.Double&)",
        "returnType": "DECIMAL"
      },
      {
        "name": "VolatileRead (System.Object&)",
        "returnType": "System.Object"
      },
      {
        "name": "VolatileWrite (System.Byte&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.Int16&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.Int32&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.Int64&, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.SByte&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.UInt16&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.UInt32&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.IntPtr&, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.UIntPtr&, System.UIntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.UInt64&, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.Single&, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.Double&, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "VolatileWrite (System.Object&, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "MemoryBarrier ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginCriticalRegion ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndCriticalRegion ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginThreadAffinity ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndThreadAffinity ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.ThreadAbortException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.ThreadInterruptedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.RegisteredWaitHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Unregister (System.Threading.WaitHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.WaitCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.WaitOrTimerCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.IOCompletionCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, INTEGER, System.Threading.NativeOverlapped*)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (INTEGER, INTEGER, System.Threading.NativeOverlapped*, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadPool",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "SetMaxThreads (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetMaxThreads (output System.Int32&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "SetMinThreads (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetMinThreads (output System.Int32&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAvailableThreads (output System.Int32&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, INTEGER, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "UnsafeRegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, INTEGER, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "RegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, INTEGER, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "UnsafeRegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, INTEGER, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "RegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, INT64, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "UnsafeRegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, INT64, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "RegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.TimeSpan, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "UnsafeRegisterWaitForSingleObject (System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.TimeSpan, LOGICAL)",
        "returnType": "System.Threading.RegisteredWaitHandle"
      },
      {
        "name": "QueueUserWorkItem (System.Threading.WaitCallback, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "QueueUserWorkItem (System.Threading.WaitCallback)",
        "returnType": "LOGICAL"
      },
      {
        "name": "UnsafeQueueUserWorkItem (System.Threading.WaitCallback, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "UnsafeQueueNativeOverlapped (System.Threading.NativeOverlapped*)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BindHandle (System.IntPtr)",
        "returnType": "LOGICAL",
        "obsolete": {
          "message": "ThreadPool.BindHandle(IntPtr) has been deprecated.  Please use ThreadPool.BindHandle(SafeHandle) instead.",
          "error": false
        }
      },
      {
        "name": "BindHandle (System.Runtime.InteropServices.SafeHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.ThreadPriority",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.ThreadStart",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.ThreadState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.ThreadStateException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.ThreadStartException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Timeout",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.TimerCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.Timer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Change (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Change (System.TimeSpan, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Change (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Change (INT64, INT64)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose (System.Threading.WaitHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Volatile",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Read (?)",
        "returnType": "?"
      },
      {
        "name": "Write (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (System.Boolean&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Read (System.SByte&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.Byte&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.Int16&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.UInt16&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.UInt32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.Int64&)",
        "returnType": "INT64"
      },
      {
        "name": "Read (System.UInt64&)",
        "returnType": "INT64"
      },
      {
        "name": "Read (System.IntPtr&)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "Read (System.UIntPtr&)",
        "returnType": "System.UIntPtr"
      },
      {
        "name": "Read (System.Single&)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Read (System.Double&)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Write (System.Boolean&, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.SByte&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Byte&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Int16&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.UInt16&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Int32&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.UInt32&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Int64&, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.UInt64&, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.IntPtr&, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.UIntPtr&, System.UIntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Single&, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Double&, DECIMAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.WaitHandle",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "WaitOne (INTEGER, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitOne (System.TimeSpan, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitOne ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitOne (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitOne (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "WaitAll (System.Threading.WaitHandle[], INTEGER, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAll (System.Threading.WaitHandle[], System.TimeSpan, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAll (System.Threading.WaitHandle[])",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAll (System.Threading.WaitHandle[], INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAll (System.Threading.WaitHandle[], System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAny (System.Threading.WaitHandle[], INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.WaitHandle[], System.TimeSpan, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.WaitHandle[], System.TimeSpan)",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.WaitHandle[])",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.WaitHandle[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "SignalAndWait (System.Threading.WaitHandle, System.Threading.WaitHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignalAndWait (System.Threading.WaitHandle, System.Threading.WaitHandle, System.TimeSpan, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignalAndWait (System.Threading.WaitHandle, System.Threading.WaitHandle, INTEGER, LOGICAL)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.WaitHandleExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetSafeWaitHandle (System.Threading.WaitHandle)",
        "returnType": "Microsoft.Win32.SafeHandles.SafeWaitHandle"
      },
      {
        "name": "SetSafeWaitHandle (System.Threading.WaitHandle, Microsoft.Win32.SafeHandles.SafeWaitHandle)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ApplicationException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.WaitHandleCannotBeOpenedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.ApartmentState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.SpinLock",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Enter (System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "TryEnter (System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "TryEnter (System.TimeSpan, System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "TryEnter (INTEGER, System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "Exit ()",
        "returnType": "System.Void"
      },
      {
        "name": "Exit (LOGICAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.SpinWait",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SpinOnce ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "SpinUntil (System.Func)",
        "returnType": "System.Void"
      },
      {
        "name": "SpinUntil (System.Func, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SpinUntil (System.Func, INTEGER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.CountdownEvent",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Signal ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Signal (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "AddCount ()",
        "returnType": "System.Void"
      },
      {
        "name": "TryAddCount ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "AddCount (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "TryAddCount (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Wait ()",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.Threading.CancellationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.TimeSpan, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.LazyThreadSafetyMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.LazyInitializer",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "EnsureInitialized (?)",
        "returnType": "?"
      },
      {
        "name": "EnsureInitialized (?, ?)",
        "returnType": "?"
      },
      {
        "name": "EnsureInitialized (?, System.Boolean&, System.Object&)",
        "returnType": "?"
      },
      {
        "name": "EnsureInitialized (?, System.Boolean&, System.Object&, ?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadLocal`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.SemaphoreSlim",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Wait ()",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.Threading.CancellationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.TimeSpan, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WaitAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WaitAsync (INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WaitAsync (System.TimeSpan)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WaitAsync (System.TimeSpan, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WaitAsync (INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Release ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Release (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ManualResetEventSlim",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Set ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Wait ()",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.Threading.CancellationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.TimeSpan, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.CancellationTokenRegistration",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Threading.CancellationTokenRegistration)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Threading.CancellationTokenRegistration, System.Threading.CancellationTokenRegistration)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Threading.CancellationTokenRegistration, System.Threading.CancellationTokenRegistration)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.CancellationTokenSource",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Cancel (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "CancelAfter (System.TimeSpan)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Cancel ()",
        "returnType": "System.Void"
      },
      {
        "name": "CancelAfter (INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateLinkedTokenSource (System.Threading.CancellationToken, System.Threading.CancellationToken)",
        "returnType": "System.Threading.CancellationTokenSource"
      },
      {
        "name": "CreateLinkedTokenSource (System.Threading.CancellationToken[])",
        "returnType": "System.Threading.CancellationTokenSource"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.CancellationToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Register (System.Action)",
        "returnType": "System.Threading.CancellationTokenRegistration"
      },
      {
        "name": "Register (System.Action, LOGICAL)",
        "returnType": "System.Threading.CancellationTokenRegistration"
      },
      {
        "name": "Register (System.Action, System.Object)",
        "returnType": "System.Threading.CancellationTokenRegistration"
      },
      {
        "name": "Register (System.Action, System.Object, LOGICAL)",
        "returnType": "System.Threading.CancellationTokenRegistration"
      },
      {
        "name": "Equals (System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ThrowIfCancellationRequested ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Threading.CancellationToken, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Threading.CancellationToken, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAwaiter ()",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ConfigureAwait (LOGICAL)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Object)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "StartNew (?)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.IAsyncResult, ?)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.IAsyncResult, ?, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.IAsyncResult, ?, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.Func, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.Func, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ParallelOptions",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Invoke (System.Action[])",
        "returnType": "System.Void"
      },
      {
        "name": "For (INTEGER, INTEGER, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INT64, INT64, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INTEGER, INTEGER, System.Threading.Tasks.ParallelOptions, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INT64, INT64, System.Threading.Tasks.ParallelOptions, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INTEGER, INTEGER, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INT64, INT64, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INTEGER, INTEGER, System.Threading.Tasks.ParallelOptions, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INT64, INT64, System.Threading.Tasks.ParallelOptions, System.Action)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "Invoke (System.Threading.Tasks.ParallelOptions, System.Action[])",
        "returnType": "System.Void"
      },
      {
        "name": "For (INTEGER, INTEGER, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INT64, INT64, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INTEGER, INTEGER, System.Threading.Tasks.ParallelOptions, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "For (INT64, INT64, System.Threading.Tasks.ParallelOptions, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      },
      {
        "name": "ForEach (?, System.Threading.Tasks.ParallelOptions, ?, ?, ?)",
        "returnType": "System.Threading.Tasks.ParallelLoopResult"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ParallelLoopState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Stop ()",
        "returnType": "System.Void"
      },
      {
        "name": "Break ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ParallelLoopResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Start ()",
        "returnType": "System.Void"
      },
      {
        "name": "Start (System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Void"
      },
      {
        "name": "RunSynchronously ()",
        "returnType": "System.Void"
      },
      {
        "name": "RunSynchronously (System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetAwaiter ()",
        "returnType": "System.Runtime.CompilerServices.TaskAwaiter"
      },
      {
        "name": "ConfigureAwait (LOGICAL)",
        "returnType": "System.Runtime.CompilerServices.ConfiguredTaskAwaitable"
      },
      {
        "name": "Wait ()",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (System.Threading.CancellationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "Wait (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Wait (INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContinueWith (System.Action)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Object)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Object, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Object, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Object, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (System.Action, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWith (?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWith (?, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      }
    ],
    "staticMethods": [
      {
        "name": "Yield ()",
        "returnType": "System.Runtime.CompilerServices.YieldAwaitable"
      },
      {
        "name": "WaitAll (System.Threading.Tasks.Task[])",
        "returnType": "System.Void"
      },
      {
        "name": "WaitAll (System.Threading.Tasks.Task[], System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAll (System.Threading.Tasks.Task[], INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAll (System.Threading.Tasks.Task[], System.Threading.CancellationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "WaitAll (System.Threading.Tasks.Task[], INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitAny (System.Threading.Tasks.Task[])",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.Tasks.Task[], System.TimeSpan)",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.Tasks.Task[], System.Threading.CancellationToken)",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.Tasks.Task[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "WaitAny (System.Threading.Tasks.Task[], INTEGER, System.Threading.CancellationToken)",
        "returnType": "INTEGER"
      },
      {
        "name": "FromException (System.Exception)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromCanceled (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Run (System.Action)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Run (System.Action, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Run (System.Func)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Run (System.Func, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Delay (System.TimeSpan)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Delay (System.TimeSpan, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Delay (INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WhenAll (System.Collections.Generic.IEnumerable)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WhenAll (System.Threading.Tasks.Task[])",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WhenAny (System.Threading.Tasks.Task[])",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WhenAny (System.Collections.Generic.IEnumerable)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromResult (?)",
        "returnType": "?"
      },
      {
        "name": "FromException (System.Exception)",
        "returnType": "?"
      },
      {
        "name": "FromCanceled (System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "Run (?)",
        "returnType": "?"
      },
      {
        "name": "Run (?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "Run (?)",
        "returnType": "?"
      },
      {
        "name": "Run (?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "Delay (INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WhenAll (?)",
        "returnType": "?"
      },
      {
        "name": "WhenAll (?)",
        "returnType": "?"
      },
      {
        "name": "WhenAny (?)",
        "returnType": "?"
      },
      {
        "name": "WhenAny (?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskCreationOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskContinuationOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.OperationCanceledException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskCanceledException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskSchedulerException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "StartNew (System.Action, System.Object)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (System.Action)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (System.Action, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (System.Action, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (System.Action, System.Object, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (System.Action, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (System.Action, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (System.IAsyncResult, System.Action)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (System.IAsyncResult, System.Action, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (System.IAsyncResult, System.Action, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (System.Func, System.Action, System.Object)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (System.Func, System.Action, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], System.Action)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], System.Action, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], System.Action, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], System.Action)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], System.Action, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], System.Action, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "StartNew (?)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "StartNew (?, System.Object, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, System.Action, ?, System.Object)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (?, System.Action, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (?, System.Action, ?, ?, System.Object)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (?, System.Action, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (?, System.Action, ?, ?, ?, System.Object)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (?, System.Action, ?, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FromAsync (System.IAsyncResult, ?)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.IAsyncResult, ?, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.IAsyncResult, ?, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.Func, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (System.Func, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, ?, System.Object)",
        "returnType": "?"
      },
      {
        "name": "FromAsync (?, ?, ?, ?, ?, System.Object, System.Threading.Tasks.TaskCreationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAll (?, ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (System.Threading.Tasks.Task[], ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "?"
      },
      {
        "name": "ContinueWhenAny (?, ?)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.Tasks.TaskContinuationOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ContinueWhenAny (?, ?, System.Threading.CancellationToken, System.Threading.Tasks.TaskContinuationOptions, System.Threading.Tasks.TaskScheduler)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskScheduler",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "UnobservedTaskException"
    ],
    "staticMethods": [
      {
        "name": "FromCurrentSynchronizationContext ()",
        "returnType": "System.Threading.Tasks.TaskScheduler"
      },
      {
        "name": "add_UnobservedTaskException (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UnobservedTaskException (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.UnobservedTaskExceptionEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetObserved ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskCompletionSource`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TrySetException (System.Exception)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TrySetResult (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetResult (?)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCanceled ()",
        "returnType": "System.Void"
      },
      {
        "name": "TrySetException (System.Collections.Generic.IEnumerable)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetException (System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "SetException (System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "TrySetCanceled ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "TrySetCanceled (System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ConcurrentExclusiveSchedulerPair",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Complete ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Reflection.AmbiguousMatchException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Reflection.ModuleResolveEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ResolveEventArgs)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "BeginInvoke (System.Object, System.ResolveEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Reflection.Module"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Assembly",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "ModuleResolve"
    ],
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "add_ModuleResolve (System.Reflection.ModuleResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ModuleResolve (System.Reflection.ModuleResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "GetName ()",
        "returnType": "System.Reflection.AssemblyName"
      },
      {
        "name": "GetName (LOGICAL)",
        "returnType": "System.Reflection.AssemblyName"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetExportedTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetManifestResourceStream (System.Type, CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetManifestResourceStream (CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetSatelliteAssembly (System.Globalization.CultureInfo)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetSatelliteAssembly (System.Globalization.CultureInfo, System.Version)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributesData ()",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "LoadModule (CHARACTER, MEMPTR)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "LoadModule (CHARACTER, MEMPTR, MEMPTR)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "CreateInstance (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (CHARACTER, LOGICAL)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetLoadedModules ()",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetLoadedModules (LOGICAL)",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetModules ()",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetModules (LOGICAL)",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetModule (CHARACTER)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "GetFile (CHARACTER)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "GetFiles ()",
        "returnType": "System.IO.FileStream[]"
      },
      {
        "name": "GetFiles (LOGICAL)",
        "returnType": "System.IO.FileStream[]"
      },
      {
        "name": "GetManifestResourceNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetReferencedAssemblies ()",
        "returnType": "System.Reflection.AssemblyName[]"
      },
      {
        "name": "GetManifestResourceInfo (CHARACTER)",
        "returnType": "System.Reflection.ManifestResourceInfo"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetAssembly (System.Type)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "op_Equality (System.Reflection.Assembly, System.Reflection.Assembly)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Assembly, System.Reflection.Assembly)",
        "returnType": "LOGICAL"
      },
      {
        "name": "LoadFrom (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "ReflectionOnlyLoadFrom (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "LoadFrom (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of LoadFrom which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "LoadFrom (CHARACTER, System.Security.Policy.Evidence, MEMPTR, System.Configuration.Assemblies.AssemblyHashAlgorithm)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of LoadFrom which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "LoadFrom (CHARACTER, MEMPTR, System.Configuration.Assemblies.AssemblyHashAlgorithm)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "UnsafeLoadFrom (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "ReflectionOnlyLoad (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "Load (System.Reflection.AssemblyName)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (System.Reflection.AssemblyName, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "LoadWithPartialName (CHARACTER)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method has been deprecated. Please use Assembly.Load() instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "LoadWithPartialName (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method has been deprecated. Please use Assembly.Load() instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "Load (MEMPTR)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "ReflectionOnlyLoad (MEMPTR)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR, MEMPTR)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR, MEMPTR, System.Security.SecurityContextSource)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "Load (MEMPTR, MEMPTR, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "LoadFile (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "LoadFile (CHARACTER, System.Security.Policy.Evidence)",
        "returnType": "System.Reflection.Assembly",
        "obsolete": {
          "message": "This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of LoadFile which does not take an Evidence parameter. See http:\/\/go.microsoft.com\/fwlink\/?LinkID=155570 for more information.",
          "error": false
        }
      },
      {
        "name": "GetExecutingAssembly ()",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetCallingAssembly ()",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetEntryAssembly ()",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "CreateQualifiedName (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyCopyrightAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyTrademarkAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyProductAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyCompanyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyDescriptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyTitleAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyConfigurationAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyDefaultAliasAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyInformationalVersionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyFileVersionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyCultureAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyVersionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyKeyFileAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyDelaySignAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyAlgorithmIdAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyFlagsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyMetadataAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblySignatureKeyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyKeyNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetPublicKey ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetPublicKey (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "GetPublicKeyToken ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetPublicKeyToken (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetAssemblyName (CHARACTER)",
        "returnType": "System.Reflection.AssemblyName"
      },
      {
        "name": "ReferenceMatchesDefinition (System.Reflection.AssemblyName, System.Reflection.AssemblyName)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyNameProxy",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAssemblyName (CHARACTER)",
        "returnType": "System.Reflection.AssemblyName"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyNameFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.AssemblyContentType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.ProcessorArchitecture",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.CustomAttributeExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetCustomAttribute (System.Reflection.Assembly, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.Module, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.MemberInfo, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.ParameterInfo, System.Type)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.MemberInfo, System.Type, LOGICAL)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.ParameterInfo, System.Type, LOGICAL)",
        "returnType": "System.Attribute"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo, LOGICAL)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo, LOGICAL)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly, System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module, System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo, System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo, System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo, System.Type, LOGICAL)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo, System.Type, LOGICAL)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "IsDefined (System.Reflection.Assembly, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.Module, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.MemberInfo, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.ParameterInfo, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.MemberInfo, System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefined (System.Reflection.ParameterInfo, System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.Assembly)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.Module)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.MemberInfo)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.ParameterInfo)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.MemberInfo, LOGICAL)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttribute (System.Reflection.ParameterInfo, LOGICAL)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo, LOGICAL)",
        "returnType": "?"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo, LOGICAL)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.FormatException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Reflection.CustomAttributeFormatException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Binder",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BindToMethod (System.Reflection.BindingFlags, System.Reflection.MethodBase[], System.Object[]&, System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[], output System.Object&)",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "BindToField (System.Reflection.BindingFlags, System.Reflection.FieldInfo[], System.Object, System.Globalization.CultureInfo)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "SelectMethod (System.Reflection.BindingFlags, System.Reflection.MethodBase[], System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "SelectProperty (System.Reflection.BindingFlags, System.Reflection.PropertyInfo[], System.Type, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "ChangeType (System.Object, System.Type, System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "ReorderArgumentArray (System.Object[]&, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.BindingFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.CallingConventions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MethodBase",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.ConstructorInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Invoke (System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.ConstructorInfo, System.Reflection.ConstructorInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.ConstructorInfo, System.Reflection.ConstructorInfo)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.CustomAttributeData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetCustomAttributes (System.Reflection.MemberInfo)",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Module)",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.Assembly)",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "GetCustomAttributes (System.Reflection.ParameterInfo)",
        "returnType": "System.Collections.Generic.IList"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.CustomAttributeNamedArgument",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.CustomAttributeNamedArgument, System.Reflection.CustomAttributeNamedArgument)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.CustomAttributeNamedArgument, System.Reflection.CustomAttributeNamedArgument)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.CustomAttributeTypedArgument",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.CustomAttributeTypedArgument, System.Reflection.CustomAttributeTypedArgument)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.CustomAttributeTypedArgument, System.Reflection.CustomAttributeTypedArgument)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.DefaultMemberAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.EventAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.EventInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetOtherMethods (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetOtherMethods ()",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetAddMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRemoveMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRaiseMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "AddEventHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveEventHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAddMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRemoveMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRaiseMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.EventInfo, System.Reflection.EventInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.EventInfo, System.Reflection.EventInfo)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.FieldAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.FieldInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetRequiredCustomModifiers ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetOptionalCustomModifiers ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "SetValueDirect (System.TypedReference, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetValueDirect (System.TypedReference)",
        "returnType": "System.Object"
      },
      {
        "name": "GetRawConstantValue ()",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Globalization.CultureInfo)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetFieldFromHandle (System.RuntimeFieldHandle)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFieldFromHandle (System.RuntimeFieldHandle, System.RuntimeTypeHandle)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "op_Equality (System.Reflection.FieldInfo, System.Reflection.FieldInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.FieldInfo, System.Reflection.FieldInfo)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.GenericParameterAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Reflection.ICustomAttributeProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Reflection.IReflectableType",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfo ()",
        "returnType": "System.Reflection.TypeInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.IntrospectionExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetTypeInfo (System.Type)",
        "returnType": "System.Reflection.TypeInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.RuntimeReflectionExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetRuntimeProperties (System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetRuntimeEvents (System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetRuntimeMethods (System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetRuntimeFields (System.Type)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetRuntimeProperty (System.Type, CHARACTER)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetRuntimeEvent (System.Type, CHARACTER)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetRuntimeMethod (System.Type, CHARACTER, System.Type[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRuntimeField (System.Type, CHARACTER)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetRuntimeBaseDefinition (System.Reflection.MethodInfo)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRuntimeInterfaceMap (System.Reflection.TypeInfo, System.Type)",
        "returnType": "System.Reflection.InterfaceMapping"
      },
      {
        "name": "GetMethodInfo (System.Delegate)",
        "returnType": "System.Reflection.MethodInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.InterfaceMapping",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ApplicationException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Reflection.InvalidFilterCriteriaException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Reflection.IReflect",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetProperty (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperties (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMembers (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.ManifestResourceInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.ResourceLocation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Reflection.MemberFilter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Reflection.MemberInfo, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (System.Reflection.MemberInfo, System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.MemberInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetCustomAttributesData ()",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.MemberInfo, System.Reflection.MemberInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.MemberInfo, System.Reflection.MemberInfo)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.MemberTypes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.MethodAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.MethodBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetGenericArguments ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "Invoke (System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetMethodBody ()",
        "returnType": "System.Reflection.MethodBody"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      }
    ],
    "staticMethods": [
      {
        "name": "GetMethodFromHandle (System.RuntimeMethodHandle)",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "GetMethodFromHandle (System.RuntimeMethodHandle, System.RuntimeTypeHandle)",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "GetCurrentMethod ()",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "op_Equality (System.Reflection.MethodBase, System.Reflection.MethodBase)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.MethodBase, System.Reflection.MethodBase)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.MethodImplAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MethodBase",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.MethodInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetGenericArguments ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetGenericMethodDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "MakeGenericMethod (System.Type[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "CreateDelegate (System.Type)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Object)",
        "returnType": "System.Delegate"
      },
      {
        "name": "GetBaseDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.MethodInfo, System.Reflection.MethodInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.MethodInfo, System.Reflection.MethodInfo)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Missing",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.PortableExecutableKinds",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.ImageFileMachine",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Module",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributesData ()",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "ResolveMethod (INTEGER)",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "ResolveMethod (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "ResolveField (INTEGER)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "ResolveField (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "ResolveType (INTEGER)",
        "returnType": "System.Type"
      },
      {
        "name": "ResolveType (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Type"
      },
      {
        "name": "ResolveMember (INTEGER)",
        "returnType": "System.Reflection.MemberInfo"
      },
      {
        "name": "ResolveMember (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Reflection.MemberInfo"
      },
      {
        "name": "ResolveSignature (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ResolveString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetPEKind (output System.Reflection.PortableExecutableKinds&, output System.Reflection.ImageFileMachine&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "FindTypes (System.Reflection.TypeFilter, System.Object)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "IsResource ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetFields ()",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetField (CHARACTER)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetMethods ()",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Type[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetSignerCertificate ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Module, System.Reflection.Module)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Module, System.Reflection.Module)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.ObfuscateAssemblyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Reflection.ObfuscationAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.ExceptionHandlingClauseOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.ExceptionHandlingClause",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.MethodBody",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetILAsByteArray ()",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.LocalVariableInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.ParameterAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.ParameterInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRequiredCustomModifiers ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetOptionalCustomModifiers ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributesData ()",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.ParameterModifier",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Pointer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Box (System.Void*, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "Unbox (System.Object)",
        "returnType": "System.Void*"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.PropertyAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.PropertyInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetConstantValue ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetRawConstantValue ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "GetRequiredCustomModifiers ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetOptionalCustomModifiers ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetAccessors ()",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetGetMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetSetMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessors (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetGetMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetSetMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetIndexParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetValue (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.PropertyInfo, System.Reflection.PropertyInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.PropertyInfo, System.Reflection.PropertyInfo)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.ReflectionContext",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetTypeForObject (System.Object)",
        "returnType": "System.Reflection.TypeInfo"
      },
      {
        "name": "MapAssembly (System.Reflection.Assembly)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "MapType (System.Reflection.TypeInfo)",
        "returnType": "System.Reflection.TypeInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Reflection.ReflectionTypeLoadException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.ResourceAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.StrongNameKeyPair",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ApplicationException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Reflection.TargetException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ApplicationException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Reflection.TargetInvocationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ApplicationException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Reflection.TargetParameterCountException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.TypeAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.TypeInfo",
      "System.Type",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.TypeDelegator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsAssignableFrom (System.Reflection.TypeInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetConstructors (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetInterfaces ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetEvent (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetProperties (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetEvents (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetNestedTypes (System.Reflection.BindingFlags)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.MemberTypes, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMembers (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetElementType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetInterfaceMap (System.Type)",
        "returnType": "System.Reflection.InterfaceMapping"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Reflection.TypeFilter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Type, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (System.Type, System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Type",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.TypeInfo",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AsType ()",
        "returnType": "System.Type"
      },
      {
        "name": "IsAssignableFrom (System.Reflection.TypeInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetDeclaredEvent (CHARACTER)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetDeclaredField (CHARACTER)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetDeclaredMethod (CHARACTER)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetDeclaredMethods (CHARACTER)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetDeclaredNestedType (CHARACTER)",
        "returnType": "System.Reflection.TypeInfo"
      },
      {
        "name": "GetDeclaredProperty (CHARACTER)",
        "returnType": "System.Reflection.PropertyInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.Assembly",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.AssemblyBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "ModuleResolve"
    ],
    "methods": [
      {
        "name": "DefineDynamicModule (CHARACTER)",
        "returnType": "System.Reflection.Emit.ModuleBuilder"
      },
      {
        "name": "DefineDynamicModule (CHARACTER, LOGICAL)",
        "returnType": "System.Reflection.Emit.ModuleBuilder"
      },
      {
        "name": "DefineDynamicModule (CHARACTER, CHARACTER)",
        "returnType": "System.Reflection.Emit.ModuleBuilder"
      },
      {
        "name": "DefineDynamicModule (CHARACTER, CHARACTER, LOGICAL)",
        "returnType": "System.Reflection.Emit.ModuleBuilder"
      },
      {
        "name": "DefineResource (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Resources.IResourceWriter"
      },
      {
        "name": "DefineResource (CHARACTER, CHARACTER, CHARACTER, System.Reflection.ResourceAttributes)",
        "returnType": "System.Resources.IResourceWriter"
      },
      {
        "name": "AddResourceFile (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddResourceFile (CHARACTER, CHARACTER, System.Reflection.ResourceAttributes)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributesData ()",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "GetManifestResourceNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetFile (CHARACTER)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "GetFiles (LOGICAL)",
        "returnType": "System.IO.FileStream[]"
      },
      {
        "name": "GetManifestResourceStream (System.Type, CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetManifestResourceStream (CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetManifestResourceInfo (CHARACTER)",
        "returnType": "System.Reflection.ManifestResourceInfo"
      },
      {
        "name": "GetExportedTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetName (LOGICAL)",
        "returnType": "System.Reflection.AssemblyName"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetModule (CHARACTER)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "GetReferencedAssemblies ()",
        "returnType": "System.Reflection.AssemblyName[]"
      },
      {
        "name": "GetModules (LOGICAL)",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetLoadedModules (LOGICAL)",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetSatelliteAssembly (System.Globalization.CultureInfo)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetSatelliteAssembly (System.Globalization.CultureInfo, System.Version)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "DefineVersionInfoResource (CHARACTER, CHARACTER, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineVersionInfoResource ()",
        "returnType": "System.Void"
      },
      {
        "name": "DefineUnmanagedResource (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineUnmanagedResource (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDynamicModule (CHARACTER)",
        "returnType": "System.Reflection.Emit.ModuleBuilder"
      },
      {
        "name": "SetEntryPoint (System.Reflection.MethodInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "SetEntryPoint (System.Reflection.MethodInfo, System.Reflection.Emit.PEFileKinds)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "Save (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Save (CHARACTER, System.Reflection.PortableExecutableKinds, System.Reflection.ImageFileMachine)",
        "returnType": "System.Void"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "DefineDynamicAssembly (System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.AssemblyBuilderAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.ConstructorInfo",
      "System.Reflection.MethodBase",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.ConstructorBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "Invoke (System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetToken ()",
        "returnType": "System.Reflection.Emit.MethodToken"
      },
      {
        "name": "DefineParameter (INTEGER, System.Reflection.ParameterAttributes, CHARACTER)",
        "returnType": "System.Reflection.Emit.ParameterBuilder"
      },
      {
        "name": "SetSymCustomAttribute (CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "GetILGenerator ()",
        "returnType": "System.Reflection.Emit.ILGenerator"
      },
      {
        "name": "GetILGenerator (INTEGER)",
        "returnType": "System.Reflection.Emit.ILGenerator"
      },
      {
        "name": "SetMethodBody (MEMPTR, INTEGER, MEMPTR, System.Collections.Generic.IEnumerable, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "AddDeclarativeSecurity (System.Security.Permissions.SecurityAction, System.Security.PermissionSet)",
        "returnType": "System.Void"
      },
      {
        "name": "GetModule ()",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "SetImplementationFlags (System.Reflection.MethodImplAttributes)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.DynamicILInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetCode (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCode (System.Byte*, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetExceptions (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetExceptions (System.Byte*, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLocalSignature (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLocalSignature (System.Byte*, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTokenFor (System.RuntimeMethodHandle)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTokenFor (System.Reflection.Emit.DynamicMethod)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTokenFor (System.RuntimeMethodHandle, System.RuntimeTypeHandle)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTokenFor (System.RuntimeFieldHandle)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTokenFor (System.RuntimeFieldHandle, System.RuntimeTypeHandle)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTokenFor (System.RuntimeTypeHandle)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTokenFor (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTokenFor (MEMPTR)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.MethodInfo",
      "System.Reflection.MethodBase",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.DynamicMethod",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetILGenerator (INTEGER)",
        "returnType": "System.Reflection.Emit.ILGenerator"
      },
      {
        "name": "CreateDelegate (System.Type)",
        "returnType": "System.Delegate"
      },
      {
        "name": "CreateDelegate (System.Type, System.Object)",
        "returnType": "System.Delegate"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetBaseDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DefineParameter (INTEGER, System.Reflection.ParameterAttributes, CHARACTER)",
        "returnType": "System.Reflection.Emit.ParameterBuilder"
      },
      {
        "name": "GetDynamicILInfo ()",
        "returnType": "System.Reflection.Emit.DynamicILInfo"
      },
      {
        "name": "GetILGenerator ()",
        "returnType": "System.Reflection.Emit.ILGenerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.EventBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEventToken ()",
        "returnType": "System.Reflection.Emit.EventToken"
      },
      {
        "name": "SetAddOnMethod (System.Reflection.Emit.MethodBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRemoveOnMethod (System.Reflection.Emit.MethodBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRaiseMethod (System.Reflection.Emit.MethodBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "AddOtherMethod (System.Reflection.Emit.MethodBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.EventToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.EventToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.EventToken, System.Reflection.Emit.EventToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.EventToken, System.Reflection.Emit.EventToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.FieldInfo",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.FieldBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Globalization.CultureInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetToken ()",
        "returnType": "System.Reflection.Emit.FieldToken"
      },
      {
        "name": "SetOffset (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetMarshal (System.Reflection.Emit.UnmanagedMarshal)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "An alternate API is available: Emit the MarshalAs custom attribute instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SetConstant (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.FieldToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.FieldToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.FieldToken, System.Reflection.Emit.FieldToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.FieldToken, System.Reflection.Emit.FieldToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.ILGenerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Emit (System.Reflection.Emit.OpCode)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "EmitCalli (System.Reflection.Emit.OpCode, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[])",
        "returnType": "System.Void"
      },
      {
        "name": "EmitCalli (System.Reflection.Emit.OpCode, System.Runtime.InteropServices.CallingConvention, System.Type, System.Type[])",
        "returnType": "System.Void"
      },
      {
        "name": "EmitCall (System.Reflection.Emit.OpCode, System.Reflection.MethodInfo, System.Type[])",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Reflection.Emit.SignatureHelper)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Reflection.ConstructorInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Reflection.Emit.Label)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Reflection.Emit.Label[])",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Reflection.FieldInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Emit (System.Reflection.Emit.OpCode, System.Reflection.Emit.LocalBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginExceptionBlock ()",
        "returnType": "System.Reflection.Emit.Label"
      },
      {
        "name": "EndExceptionBlock ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginExceptFilterBlock ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginCatchBlock (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginFaultBlock ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginFinallyBlock ()",
        "returnType": "System.Void"
      },
      {
        "name": "DefineLabel ()",
        "returnType": "System.Reflection.Emit.Label"
      },
      {
        "name": "MarkLabel (System.Reflection.Emit.Label)",
        "returnType": "System.Void"
      },
      {
        "name": "ThrowException (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "DeclareLocal (System.Type)",
        "returnType": "System.Reflection.Emit.LocalBuilder"
      },
      {
        "name": "DeclareLocal (System.Type, LOGICAL)",
        "returnType": "System.Reflection.Emit.LocalBuilder"
      },
      {
        "name": "UsingNamespace (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "MarkSequencePoint (System.Diagnostics.SymbolStore.ISymbolDocumentWriter, INTEGER, INTEGER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginScope ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndScope ()",
        "returnType": "System.Void"
      },
      {
        "name": "EmitWriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "EmitWriteLine (System.Reflection.Emit.LocalBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "EmitWriteLine (System.Reflection.FieldInfo)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.Label",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Reflection.Emit.Label)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.Label, System.Reflection.Emit.Label)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.Label, System.Reflection.Emit.Label)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.LocalVariableInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.LocalBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetLocalSymInfo (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLocalSymInfo (CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.MethodInfo",
      "System.Reflection.MethodBase",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.MethodBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetILGenerator ()",
        "returnType": "System.Reflection.Emit.ILGenerator"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "GetBaseDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetGenericMethodDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetGenericArguments ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "MakeGenericMethod (System.Type[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "DefineGenericParameters (System.String[])",
        "returnType": "System.Reflection.Emit.GenericTypeParameterBuilder[]"
      },
      {
        "name": "GetToken ()",
        "returnType": "System.Reflection.Emit.MethodToken"
      },
      {
        "name": "SetParameters (System.Type[])",
        "returnType": "System.Void"
      },
      {
        "name": "SetReturnType (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSignature (System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Void"
      },
      {
        "name": "DefineParameter (INTEGER, System.Reflection.ParameterAttributes, CHARACTER)",
        "returnType": "System.Reflection.Emit.ParameterBuilder"
      },
      {
        "name": "SetMarshal (System.Reflection.Emit.UnmanagedMarshal)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "An alternate API is available: Emit the MarshalAs custom attribute instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SetSymCustomAttribute (CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "AddDeclarativeSecurity (System.Security.Permissions.SecurityAction, System.Security.PermissionSet)",
        "returnType": "System.Void"
      },
      {
        "name": "SetMethodBody (MEMPTR, INTEGER, MEMPTR, System.Collections.Generic.IEnumerable, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateMethodBody (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetImplementationFlags (System.Reflection.MethodImplAttributes)",
        "returnType": "System.Void"
      },
      {
        "name": "GetILGenerator (INTEGER)",
        "returnType": "System.Reflection.Emit.ILGenerator"
      },
      {
        "name": "GetModule ()",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.ExceptionHandler",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.ExceptionHandler)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.ExceptionHandler, System.Reflection.Emit.ExceptionHandler)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.ExceptionHandler, System.Reflection.Emit.ExceptionHandler)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.CustomAttributeBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.MethodRental",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "SwapMethodBody (System.Type, INTEGER, System.IntPtr, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.MethodToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.MethodToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.MethodToken, System.Reflection.Emit.MethodToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.MethodToken, System.Reflection.Emit.MethodToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.Module",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.ModuleBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DefineType (CHARACTER, System.Reflection.TypeAttributes, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributesData ()",
        "returnType": "System.Collections.Generic.IList"
      },
      {
        "name": "GetTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "ResolveSignature (INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "ResolveMethod (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "ResolveField (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "ResolveType (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Type"
      },
      {
        "name": "ResolveMember (INTEGER, System.Type[], System.Type[])",
        "returnType": "System.Reflection.MemberInfo"
      },
      {
        "name": "ResolveString (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetPEKind (output System.Reflection.PortableExecutableKinds&, output System.Reflection.ImageFileMachine&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsResource ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetSignerCertificate ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate"
      },
      {
        "name": "DefineType (CHARACTER)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineType (CHARACTER, System.Reflection.TypeAttributes)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineType (CHARACTER, System.Reflection.TypeAttributes, System.Type)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineType (CHARACTER, System.Reflection.TypeAttributes, System.Type, INTEGER)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineType (CHARACTER, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, INTEGER)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineType (CHARACTER, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineEnum (CHARACTER, System.Reflection.TypeAttributes, System.Type)",
        "returnType": "System.Reflection.Emit.EnumBuilder"
      },
      {
        "name": "DefineResource (CHARACTER, CHARACTER)",
        "returnType": "System.Resources.IResourceWriter"
      },
      {
        "name": "DefineResource (CHARACTER, CHARACTER, System.Reflection.ResourceAttributes)",
        "returnType": "System.Resources.IResourceWriter"
      },
      {
        "name": "DefineManifestResource (CHARACTER, System.IO.Stream, System.Reflection.ResourceAttributes)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineUnmanagedResource (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineUnmanagedResource (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineGlobalMethod (CHARACTER, System.Reflection.MethodAttributes, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineGlobalMethod (CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineGlobalMethod (CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefinePInvokeMethod (CHARACTER, CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefinePInvokeMethod (CHARACTER, CHARACTER, CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "CreateGlobalFunctions ()",
        "returnType": "System.Void"
      },
      {
        "name": "DefineInitializedData (CHARACTER, MEMPTR, System.Reflection.FieldAttributes)",
        "returnType": "System.Reflection.Emit.FieldBuilder"
      },
      {
        "name": "DefineUninitializedData (CHARACTER, INTEGER, System.Reflection.FieldAttributes)",
        "returnType": "System.Reflection.Emit.FieldBuilder"
      },
      {
        "name": "GetTypeToken (System.Type)",
        "returnType": "System.Reflection.Emit.TypeToken"
      },
      {
        "name": "GetTypeToken (CHARACTER)",
        "returnType": "System.Reflection.Emit.TypeToken"
      },
      {
        "name": "GetMethodToken (System.Reflection.MethodInfo)",
        "returnType": "System.Reflection.Emit.MethodToken"
      },
      {
        "name": "GetConstructorToken (System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Reflection.Emit.MethodToken"
      },
      {
        "name": "GetMethodToken (System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Reflection.Emit.MethodToken"
      },
      {
        "name": "GetArrayMethodToken (System.Type, CHARACTER, System.Reflection.CallingConventions, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.MethodToken"
      },
      {
        "name": "GetArrayMethod (System.Type, CHARACTER, System.Reflection.CallingConventions, System.Type, System.Type[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetConstructorToken (System.Reflection.ConstructorInfo)",
        "returnType": "System.Reflection.Emit.MethodToken"
      },
      {
        "name": "GetFieldToken (System.Reflection.FieldInfo)",
        "returnType": "System.Reflection.Emit.FieldToken"
      },
      {
        "name": "GetStringConstant (CHARACTER)",
        "returnType": "System.Reflection.Emit.StringToken"
      },
      {
        "name": "GetSignatureToken (System.Reflection.Emit.SignatureHelper)",
        "returnType": "System.Reflection.Emit.SignatureToken"
      },
      {
        "name": "GetSignatureToken (MEMPTR, INTEGER)",
        "returnType": "System.Reflection.Emit.SignatureToken"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSymWriter ()",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolWriter"
      },
      {
        "name": "DefineDocument (CHARACTER, System.Guid, System.Guid, System.Guid)",
        "returnType": "System.Diagnostics.SymbolStore.ISymbolDocumentWriter"
      },
      {
        "name": "SetUserEntryPoint (System.Reflection.MethodInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSymCustomAttribute (CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "IsTransient ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.PEFileKinds",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.OpCodes",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "TakesSingleByteArgument (System.Reflection.Emit.OpCode)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.OpCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Reflection.Emit.OpCode)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.OpCode, System.Reflection.Emit.OpCode)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.OpCode, System.Reflection.Emit.OpCode)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.OpCodeType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.StackBehaviour",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.OperandType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.FlowControl",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.ParameterBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetMarshal (System.Reflection.Emit.UnmanagedMarshal)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "An alternate API is available: Emit the MarshalAs custom attribute instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SetConstant (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "GetToken ()",
        "returnType": "System.Reflection.Emit.ParameterToken"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.ParameterToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.ParameterToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.ParameterToken, System.Reflection.Emit.ParameterToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.ParameterToken, System.Reflection.Emit.ParameterToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.PropertyInfo",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.PropertyBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetConstant (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetGetMethod (System.Reflection.Emit.MethodBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSetMethod (System.Reflection.Emit.MethodBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "AddOtherMethod (System.Reflection.Emit.MethodBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "GetValue (System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessors (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetGetMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetSetMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetIndexParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.PropertyToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.PropertyToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.PropertyToken, System.Reflection.Emit.PropertyToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.PropertyToken, System.Reflection.Emit.PropertyToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.SignatureHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddArgument (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddArgument (System.Type, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddArguments (System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Void"
      },
      {
        "name": "AddArgument (System.Type, System.Type[], System.Type[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddSentinel ()",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetSignature ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetMethodSigHelper (System.Reflection.Module, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetMethodSigHelper (System.Reflection.Module, System.Reflection.CallingConventions, System.Type)",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetMethodSigHelper (System.Reflection.Module, System.Runtime.InteropServices.CallingConvention, System.Type)",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetLocalVarSigHelper ()",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetMethodSigHelper (System.Reflection.CallingConventions, System.Type)",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention, System.Type)",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetLocalVarSigHelper (System.Reflection.Module)",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetFieldSigHelper (System.Reflection.Module)",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetPropertySigHelper (System.Reflection.Module, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetPropertySigHelper (System.Reflection.Module, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      },
      {
        "name": "GetPropertySigHelper (System.Reflection.Module, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Reflection.Emit.SignatureHelper"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.SignatureToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.SignatureToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.SignatureToken, System.Reflection.Emit.SignatureToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.SignatureToken, System.Reflection.Emit.SignatureToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.StringToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.StringToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.StringToken, System.Reflection.Emit.StringToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.StringToken, System.Reflection.Emit.StringToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.PackingSize",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.TypeInfo",
      "System.Type",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.TypeBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DefineMethod (CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineField (CHARACTER, System.Type, System.Type[], System.Type[], System.Reflection.FieldAttributes)",
        "returnType": "System.Reflection.Emit.FieldBuilder"
      },
      {
        "name": "CreateType ()",
        "returnType": "System.Type"
      },
      {
        "name": "IsAssignableFrom (System.Reflection.TypeInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsCreated ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetConstructors (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetInterfaces ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetEvent (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetProperties (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetNestedTypes (System.Reflection.BindingFlags)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.MemberTypes, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetInterfaceMap (System.Type)",
        "returnType": "System.Reflection.InterfaceMapping"
      },
      {
        "name": "GetEvents (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetMembers (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "IsAssignableFrom (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetElementType ()",
        "returnType": "System.Type"
      },
      {
        "name": "IsSubclassOf (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DefineGenericParameters (System.String[])",
        "returnType": "System.Reflection.Emit.GenericTypeParameterBuilder[]"
      },
      {
        "name": "MakeGenericType (System.Type[])",
        "returnType": "System.Type"
      },
      {
        "name": "GetGenericArguments ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetGenericTypeDefinition ()",
        "returnType": "System.Type"
      },
      {
        "name": "DefineMethodOverride (System.Reflection.MethodInfo, System.Reflection.MethodInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "DefineMethod (CHARACTER, System.Reflection.MethodAttributes, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineMethod (CHARACTER, System.Reflection.MethodAttributes)",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineMethod (CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions)",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineMethod (CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineTypeInitializer ()",
        "returnType": "System.Reflection.Emit.ConstructorBuilder"
      },
      {
        "name": "DefineDefaultConstructor (System.Reflection.MethodAttributes)",
        "returnType": "System.Reflection.Emit.ConstructorBuilder"
      },
      {
        "name": "DefineConstructor (System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[])",
        "returnType": "System.Reflection.Emit.ConstructorBuilder"
      },
      {
        "name": "DefineConstructor (System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Reflection.Emit.ConstructorBuilder"
      },
      {
        "name": "DefinePInvokeMethod (CHARACTER, CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefinePInvokeMethod (CHARACTER, CHARACTER, CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefinePInvokeMethod (CHARACTER, CHARACTER, CHARACTER, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][], System.Runtime.InteropServices.CallingConvention, System.Runtime.InteropServices.CharSet)",
        "returnType": "System.Reflection.Emit.MethodBuilder"
      },
      {
        "name": "DefineNestedType (CHARACTER)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineNestedType (CHARACTER, System.Reflection.TypeAttributes, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineNestedType (CHARACTER, System.Reflection.TypeAttributes, System.Type)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineNestedType (CHARACTER, System.Reflection.TypeAttributes)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineNestedType (CHARACTER, System.Reflection.TypeAttributes, System.Type, INTEGER)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineNestedType (CHARACTER, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineNestedType (CHARACTER, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, INTEGER)",
        "returnType": "System.Reflection.Emit.TypeBuilder"
      },
      {
        "name": "DefineField (CHARACTER, System.Type, System.Reflection.FieldAttributes)",
        "returnType": "System.Reflection.Emit.FieldBuilder"
      },
      {
        "name": "DefineInitializedData (CHARACTER, MEMPTR, System.Reflection.FieldAttributes)",
        "returnType": "System.Reflection.Emit.FieldBuilder"
      },
      {
        "name": "DefineUninitializedData (CHARACTER, INTEGER, System.Reflection.FieldAttributes)",
        "returnType": "System.Reflection.Emit.FieldBuilder"
      },
      {
        "name": "DefineProperty (CHARACTER, System.Reflection.PropertyAttributes, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.PropertyBuilder"
      },
      {
        "name": "DefineProperty (CHARACTER, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])",
        "returnType": "System.Reflection.Emit.PropertyBuilder"
      },
      {
        "name": "DefineProperty (CHARACTER, System.Reflection.PropertyAttributes, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Reflection.Emit.PropertyBuilder"
      },
      {
        "name": "DefineProperty (CHARACTER, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])",
        "returnType": "System.Reflection.Emit.PropertyBuilder"
      },
      {
        "name": "DefineEvent (CHARACTER, System.Reflection.EventAttributes, System.Type)",
        "returnType": "System.Reflection.Emit.EventBuilder"
      },
      {
        "name": "CreateTypeInfo ()",
        "returnType": "System.Reflection.TypeInfo"
      },
      {
        "name": "SetParent (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddInterfaceImplementation (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddDeclarativeSecurity (System.Security.Permissions.SecurityAction, System.Security.PermissionSet)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "MakePointerType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeByRefType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType (INTEGER)",
        "returnType": "System.Type"
      }
    ],
    "staticMethods": [
      {
        "name": "GetMethod (System.Type, System.Reflection.MethodInfo)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetConstructor (System.Type, System.Reflection.ConstructorInfo)",
        "returnType": "System.Reflection.ConstructorInfo"
      },
      {
        "name": "GetField (System.Type, System.Reflection.FieldInfo)",
        "returnType": "System.Reflection.FieldInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.TypeInfo",
      "System.Type",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.GenericTypeParameterBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsAssignableFrom (System.Reflection.TypeInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetConstructors (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetInterfaces ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetEvent (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetProperties (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetNestedTypes (System.Reflection.BindingFlags)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.MemberTypes, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetInterfaceMap (System.Type)",
        "returnType": "System.Reflection.InterfaceMapping"
      },
      {
        "name": "GetEvents (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetMembers (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetElementType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetGenericArguments ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetGenericTypeDefinition ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeGenericType (System.Type[])",
        "returnType": "System.Type"
      },
      {
        "name": "IsAssignableFrom (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSubclassOf (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "SetBaseTypeConstraint (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "SetInterfaceConstraints (System.Type[])",
        "returnType": "System.Void"
      },
      {
        "name": "SetGenericParameterAttributes (System.Reflection.GenericParameterAttributes)",
        "returnType": "System.Void"
      },
      {
        "name": "MakePointerType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeByRefType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType (INTEGER)",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Reflection.TypeInfo",
      "System.Type",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.EnumBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsAssignableFrom (System.Reflection.TypeInfo)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DefineLiteral (CHARACTER, System.Object)",
        "returnType": "System.Reflection.Emit.FieldBuilder"
      },
      {
        "name": "CreateTypeInfo ()",
        "returnType": "System.Reflection.TypeInfo"
      },
      {
        "name": "CreateType ()",
        "returnType": "System.Type"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetConstructors (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetInterfaces ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetEvent (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetProperties (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetNestedTypes (System.Reflection.BindingFlags)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.MemberTypes, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMembers (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetInterfaceMap (System.Type)",
        "returnType": "System.Reflection.InterfaceMapping"
      },
      {
        "name": "GetEvents (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetElementType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetEnumUnderlyingType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.ConstructorInfo, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder)",
        "returnType": "System.Void"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "MakePointerType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeByRefType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType ()",
        "returnType": "System.Type"
      },
      {
        "name": "MakeArrayType (INTEGER)",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.TypeToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Reflection.Emit.TypeToken)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Reflection.Emit.TypeToken, System.Reflection.Emit.TypeToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Reflection.Emit.TypeToken, System.Reflection.Emit.TypeToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.UnmanagedMarshal",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType)",
        "returnType": "System.Reflection.Emit.UnmanagedMarshal"
      },
      {
        "name": "DefineByValTStr (INTEGER)",
        "returnType": "System.Reflection.Emit.UnmanagedMarshal"
      },
      {
        "name": "DefineSafeArray (System.Runtime.InteropServices.UnmanagedType)",
        "returnType": "System.Reflection.Emit.UnmanagedMarshal"
      },
      {
        "name": "DefineByValArray (INTEGER)",
        "returnType": "System.Reflection.Emit.UnmanagedMarshal"
      },
      {
        "name": "DefineLPArray (System.Runtime.InteropServices.UnmanagedType)",
        "returnType": "System.Reflection.Emit.UnmanagedMarshal"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Deployment.Internal.InternalApplicationIdentityHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetInternalAppId (System.ApplicationIdentity)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Deployment.Internal.InternalActivationContextHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetActivationContextData (System.ActivationContext)",
        "returnType": "System.Object"
      },
      {
        "name": "GetApplicationComponentManifest (System.ActivationContext)",
        "returnType": "System.Object"
      },
      {
        "name": "GetDeploymentComponentManifest (System.ActivationContext)",
        "returnType": "System.Object"
      },
      {
        "name": "PrepareForExecution (System.ActivationContext)",
        "returnType": "System.Void"
      },
      {
        "name": "IsFirstRun (System.ActivationContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetApplicationManifestBytes (System.ActivationContext)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetDeploymentManifestBytes (System.ActivationContext)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Runtime.MemoryFailPoint",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.GCLargeObjectHeapCompactionMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.GCLatencyMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.GCSettings",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.AssemblyTargetedPatchBandAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.TargetedPatchingOptOutAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.ProfileOptimization",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "SetProfileRoot (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "StartProfile (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.DesignerServices.WindowsRuntimeDesignerContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAssembly (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      }
    ],
    "staticMethods": [
      {
        "name": "InitializeSharedContext (System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void"
      },
      {
        "name": "SetIterationContext (System.Runtime.DesignerServices.WindowsRuntimeDesignerContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.ComponentGuaranteesOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.ComponentGuaranteesAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.ResourceConsumptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.ResourceExposureAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.ResourceScope",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.VersioningHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "MakeVersionSafeName (CHARACTER, System.Runtime.Versioning.ResourceScope, System.Runtime.Versioning.ResourceScope, System.Type)",
        "returnType": "CHARACTER"
      },
      {
        "name": "MakeVersionSafeName (CHARACTER, System.Runtime.Versioning.ResourceScope, System.Runtime.Versioning.ResourceScope)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.TargetFrameworkAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.CompatibilitySwitch",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "IsEnabled (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetValue (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.ConstrainedExecution.Consistency",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.ConstrainedExecution.Cer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.ConstrainedExecution.ReliabilityContractAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.FormatterConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Convert (System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "Convert (System.Object, System.TypeCode)",
        "returnType": "System.Object"
      },
      {
        "name": "ToBoolean (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToChar (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToSByte (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 (System.Object)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (System.Object)",
        "returnType": "INT64"
      },
      {
        "name": "ToSingle (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDateTime (System.Object)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToString (System.Object)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.FormatterServices",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetUninitializedObject (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetSerializableMembers (System.Type, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetSerializableMembers (System.Type)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "CheckTypeSecurity (System.Type, System.Runtime.Serialization.Formatters.TypeFilterLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSafeUninitializedObject (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "PopulateObjectMembers (System.Object, System.Reflection.MemberInfo[], System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetObjectData (System.Object, System.Reflection.MemberInfo[])",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate)",
        "returnType": "System.Runtime.Serialization.ISerializationSurrogate"
      },
      {
        "name": "GetTypeFromAssembly (System.Reflection.Assembly, CHARACTER)",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.IDeserializationCallback",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.IFormatter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Deserialize (System.IO.Stream)",
        "returnType": "System.Object"
      },
      {
        "name": "Serialize (System.IO.Stream, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.IFormatterConverter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Convert (System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "Convert (System.Object, System.TypeCode)",
        "returnType": "System.Object"
      },
      {
        "name": "ToBoolean (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToChar (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToSByte (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToByte (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt16 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt16 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt32 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToUInt32 (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToInt64 (System.Object)",
        "returnType": "INT64"
      },
      {
        "name": "ToUInt64 (System.Object)",
        "returnType": "INT64"
      },
      {
        "name": "ToSingle (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDouble (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDecimal (System.Object)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ToDateTime (System.Object)",
        "returnType": "DATETIME"
      },
      {
        "name": "ToString (System.Object)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.IObjectReference",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.ISerializable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.ISerializationSurrogate",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetObjectData (System.Object, System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "SetObjectData (System.Object, System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext, System.Runtime.Serialization.ISurrogateSelector)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.ISurrogateSelector",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ChainSelector (System.Runtime.Serialization.ISurrogateSelector)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSurrogate (System.Type, System.Runtime.Serialization.StreamingContext, output System.Runtime.Serialization.ISurrogateSelector&)",
        "returnType": "System.Runtime.Serialization.ISerializationSurrogate"
      },
      {
        "name": "GetNextSelector ()",
        "returnType": "System.Runtime.Serialization.ISurrogateSelector"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.OptionalFieldAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.OnSerializingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.OnSerializedAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.OnDeserializingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.OnDeserializedAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SerializationBinder",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BindToName (System.Type, output System.String&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "BindToType (CHARACTER, CHARACTER)",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SerializationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SerializationInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetType (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Runtime.Serialization.SerializationInfoEnumerator"
      },
      {
        "name": "AddValue (CHARACTER, System.Object, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddValue (CHARACTER, DATETIME)",
        "returnType": "System.Void"
      },
      {
        "name": "GetValue (CHARACTER, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetBoolean (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetChar (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetSByte (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByte (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetInt16 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetUInt16 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetInt32 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetUInt32 (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetInt64 (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "GetUInt64 (CHARACTER)",
        "returnType": "INT64"
      },
      {
        "name": "GetSingle (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "GetDouble (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "GetDecimal (CHARACTER)",
        "returnType": "DECIMAL"
      },
      {
        "name": "GetDateTime (CHARACTER)",
        "returnType": "DATETIME"
      },
      {
        "name": "GetString (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SerializationEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SerializationInfoEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.StreamingContext",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.StreamingContextStates",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Deserialize (System.IO.Stream)",
        "returnType": "System.Object"
      },
      {
        "name": "Serialize (System.IO.Stream, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.ObjectIDGenerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetId (System.Object, output System.Boolean&)",
        "returnType": "INT64"
      },
      {
        "name": "HasId (System.Object, output System.Boolean&)",
        "returnType": "INT64"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.ObjectManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "RecordDelayedFixup (INT64, CHARACTER, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObject (INT64)",
        "returnType": "System.Object"
      },
      {
        "name": "RegisterObject (System.Object, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterObject (System.Object, INT64, System.Runtime.Serialization.SerializationInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterObject (System.Object, INT64, System.Runtime.Serialization.SerializationInfo, INT64, System.Reflection.MemberInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterObject (System.Object, INT64, System.Runtime.Serialization.SerializationInfo, INT64, System.Reflection.MemberInfo, System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "DoFixups ()",
        "returnType": "System.Void"
      },
      {
        "name": "RecordArrayElementFixup (INT64, INTEGER, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "RaiseDeserializationEvent ()",
        "returnType": "System.Void"
      },
      {
        "name": "RaiseOnDeserializingEvent (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RecordFixup (INT64, System.Reflection.MemberInfo, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "RecordArrayElementFixup (INT64, System.Int32[], INT64)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SafeSerializationEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddSerializedState (System.Runtime.Serialization.ISafeSerializationData)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Serialization.ISafeSerializationData",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CompleteDeserialization (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SerializationObjectManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "RegisterObject (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RaiseOnSerializedEvent ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.SurrogateSelector",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddSurrogate (System.Type, System.Runtime.Serialization.StreamingContext, System.Runtime.Serialization.ISerializationSurrogate)",
        "returnType": "System.Void"
      },
      {
        "name": "ChainSelector (System.Runtime.Serialization.ISurrogateSelector)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNextSelector ()",
        "returnType": "System.Runtime.Serialization.ISurrogateSelector"
      },
      {
        "name": "GetSurrogate (System.Type, System.Runtime.Serialization.StreamingContext, output System.Runtime.Serialization.ISurrogateSelector&)",
        "returnType": "System.Runtime.Serialization.ISerializationSurrogate"
      },
      {
        "name": "RemoveSurrogate (System.Type, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.FormatterTypeStyle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.FormatterAssemblyStyle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.TypeFilterLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.Serialization.Formatters.ISoapMessage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Serialization.Formatters.IFieldInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.InternalRM",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "InfoSoap (System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "SoapCheckEnabled ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.InternalST",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "InfoSoap (System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "SoapAssert (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SerializationSetValue (System.Reflection.FieldInfo, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "LoadAssemblyFromString (CHARACTER)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "SoapCheckEnabled ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Soap (System.Object[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.SoapMessage",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.SoapFault",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.ServerFault",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.Binary.BinaryFormatter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Deserialize (System.IO.Stream)",
        "returnType": "System.Object"
      },
      {
        "name": "Deserialize (System.IO.Stream, System.Runtime.Remoting.Messaging.HeaderHandler)",
        "returnType": "System.Object"
      },
      {
        "name": "DeserializeMethodResponse (System.IO.Stream, System.Runtime.Remoting.Messaging.HeaderHandler, System.Runtime.Remoting.Messaging.IMethodCallMessage)",
        "returnType": "System.Object"
      },
      {
        "name": "UnsafeDeserialize (System.IO.Stream, System.Runtime.Remoting.Messaging.HeaderHandler)",
        "returnType": "System.Object"
      },
      {
        "name": "UnsafeDeserializeMethodResponse (System.IO.Stream, System.Runtime.Remoting.Messaging.HeaderHandler, System.Runtime.Remoting.Messaging.IMethodCallMessage)",
        "returnType": "System.Object"
      },
      {
        "name": "Serialize (System.IO.Stream, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Serialize (System.IO.Stream, System.Object, System.Runtime.Remoting.Messaging.Header[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Throw ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Capture (System.Exception)",
        "returnType": "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.IObjectHandle",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Unwrap ()",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.WellKnownObjectMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.Remoting.IRemotingTypeInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CanCastTo (System.Type, System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.IChannelInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.IEnvoyInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.ObjRef",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      },
      {
        "name": "IsFromThisProcess ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsFromThisAppDomain ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.RemotingConfiguration",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Configure (CHARACTER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Use System.Runtime.Remoting.RemotingConfiguration.Configure(string fileName, bool ensureSecurity) instead.",
          "error": false
        }
      },
      {
        "name": "Configure (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "CustomErrorsEnabled (LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RegisterActivatedServiceType (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterActivatedServiceType (System.Runtime.Remoting.ActivatedServiceTypeEntry)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterWellKnownServiceType (System.Type, CHARACTER, System.Runtime.Remoting.WellKnownObjectMode)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterWellKnownServiceType (System.Runtime.Remoting.WellKnownServiceTypeEntry)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterActivatedClientType (System.Type, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterActivatedClientType (System.Runtime.Remoting.ActivatedClientTypeEntry)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterWellKnownClientType (System.Type, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterWellKnownClientType (System.Runtime.Remoting.WellKnownClientTypeEntry)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRegisteredActivatedServiceTypes ()",
        "returnType": "System.Runtime.Remoting.ActivatedServiceTypeEntry[]"
      },
      {
        "name": "GetRegisteredWellKnownServiceTypes ()",
        "returnType": "System.Runtime.Remoting.WellKnownServiceTypeEntry[]"
      },
      {
        "name": "GetRegisteredActivatedClientTypes ()",
        "returnType": "System.Runtime.Remoting.ActivatedClientTypeEntry[]"
      },
      {
        "name": "GetRegisteredWellKnownClientTypes ()",
        "returnType": "System.Runtime.Remoting.WellKnownClientTypeEntry[]"
      },
      {
        "name": "IsRemotelyActivatedClientType (System.Type)",
        "returnType": "System.Runtime.Remoting.ActivatedClientTypeEntry"
      },
      {
        "name": "IsRemotelyActivatedClientType (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ActivatedClientTypeEntry"
      },
      {
        "name": "IsWellKnownClientType (System.Type)",
        "returnType": "System.Runtime.Remoting.WellKnownClientTypeEntry"
      },
      {
        "name": "IsWellKnownClientType (CHARACTER, CHARACTER)",
        "returnType": "System.Runtime.Remoting.WellKnownClientTypeEntry"
      },
      {
        "name": "IsActivationAllowed (System.Type)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.TypeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.TypeEntry",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.ActivatedClientTypeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.TypeEntry",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.ActivatedServiceTypeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.TypeEntry",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.WellKnownClientTypeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.TypeEntry",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.WellKnownServiceTypeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.CustomErrorsModes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.RemotingException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.ServerException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.RemotingException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.RemotingTimeoutException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.RemotingServices",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "IsTransparentProxy (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetRealProxy (System.Object)",
        "returnType": "System.Runtime.Remoting.Proxies.RealProxy"
      },
      {
        "name": "IsObjectOutOfContext (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsObjectOutOfAppDomain (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetSessionIdForMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetObjectUri (System.MarshalByRefObject)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SetObjectUriForMarshal (System.MarshalByRefObject, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Marshal (System.MarshalByRefObject)",
        "returnType": "System.Runtime.Remoting.ObjRef"
      },
      {
        "name": "Marshal (System.MarshalByRefObject, CHARACTER)",
        "returnType": "System.Runtime.Remoting.ObjRef"
      },
      {
        "name": "Marshal (System.MarshalByRefObject, CHARACTER, System.Type)",
        "returnType": "System.Runtime.Remoting.ObjRef"
      },
      {
        "name": "GetObjectData (System.Object, System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "Unmarshal (System.Runtime.Remoting.ObjRef)",
        "returnType": "System.Object"
      },
      {
        "name": "Unmarshal (System.Runtime.Remoting.ObjRef, LOGICAL)",
        "returnType": "System.Object"
      },
      {
        "name": "Connect (System.Type, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "Connect (System.Type, CHARACTER, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "Disconnect (System.MarshalByRefObject)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnvoyChainForProxy (System.MarshalByRefObject)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      },
      {
        "name": "GetObjRefForProxy (System.MarshalByRefObject)",
        "returnType": "System.Runtime.Remoting.ObjRef"
      },
      {
        "name": "GetMethodBaseFromMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage)",
        "returnType": "System.Reflection.MethodBase"
      },
      {
        "name": "IsMethodOverloaded (System.Runtime.Remoting.Messaging.IMethodMessage)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsOneWay (System.Reflection.MethodBase)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetServerTypeForUri (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "ExecuteMessage (System.MarshalByRefObject, System.Runtime.Remoting.Messaging.IMethodCallMessage)",
        "returnType": "System.Runtime.Remoting.Messaging.IMethodReturnMessage"
      },
      {
        "name": "LogRemotingStage (INTEGER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Use of this method is not recommended. The LogRemotingStage existed for internal diagnostic purposes only.",
          "error": false
        }
      },
      {
        "name": "GetLifetimeService (System.MarshalByRefObject)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.InternalRemotingServices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "RemotingTrace (System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "RemotingAssert (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetServerIdentity (System.Runtime.Remoting.Messaging.MethodCall, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCachedSoapAttribute (System.Object)",
        "returnType": "System.Runtime.Remoting.Metadata.SoapAttribute"
      },
      {
        "name": "DebugOutChnl (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.SoapServices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "PreLoad (System.Reflection.Assembly)",
        "returnType": "System.Void"
      },
      {
        "name": "GetInteropFieldTypeAndNameFromXmlElement (System.Type, CHARACTER, CHARACTER, output System.Type&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetInteropFieldTypeAndNameFromXmlAttribute (System.Type, CHARACTER, CHARACTER, output System.Type&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetXmlElementForInteropType (System.Type, output System.String&, output System.String&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetXmlTypeForInteropType (System.Type, output System.String&, output System.String&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetXmlNamespaceForMethodCall (System.Reflection.MethodBase)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXmlNamespaceForMethodResponse (System.Reflection.MethodBase)",
        "returnType": "CHARACTER"
      },
      {
        "name": "RegisterSoapActionForMethodBase (System.Reflection.MethodBase)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterSoapActionForMethodBase (System.Reflection.MethodBase, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSoapActionFromMethodBase (System.Reflection.MethodBase)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsClrTypeNamespace (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CodeXmlNamespaceForClrTypeNamespace (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "RegisterInteropXmlElement (CHARACTER, CHARACTER, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterInteropXmlType (CHARACTER, CHARACTER, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "PreLoad (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "GetInteropTypeFromXmlElement (CHARACTER, CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetInteropTypeFromXmlType (CHARACTER, CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "IsSoapActionValidForMethodBase (CHARACTER, System.Reflection.MethodBase)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetTypeAndMethodNameFromSoapAction (CHARACTER, output System.String&, output System.String&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DecodeXmlNamespaceForClrTypeNamespace (CHARACTER, output System.String&, output System.String&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.ObjectHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Unwrap ()",
        "returnType": "System.Object"
      },
      {
        "name": "InitializeLifetimeService ()",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapOption",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.XmlFieldOrderOption",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Metadata.SoapAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapTypeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Metadata.SoapAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapMethodAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Metadata.SoapAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapFieldAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsInteropXmlElement ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Metadata.SoapAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapParameterAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.ISoapXsd",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDateTime",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "ToString (DATETIME)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "DATETIME"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDuration",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "ToString (System.TimeSpan)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.TimeSpan"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetXsdType ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Proxies.ProxyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateInstance (System.Type)",
        "returnType": "System.MarshalByRefObject"
      },
      {
        "name": "CreateProxy (System.Runtime.Remoting.ObjRef, System.Type, System.Object, System.Runtime.Remoting.Contexts.Context)",
        "returnType": "System.Runtime.Remoting.Proxies.RealProxy"
      },
      {
        "name": "IsContextOK (System.Runtime.Remoting.Contexts.Context, System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Proxies.RealProxy",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "InitializeServerObject (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Runtime.Remoting.Activation.IConstructionReturnMessage"
      },
      {
        "name": "CreateObjRef (System.Type)",
        "returnType": "System.Runtime.Remoting.ObjRef"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCOMIUnknown (LOGICAL)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SetCOMIUnknown (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "SupportsInterface (System.Guid&)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetTransparentProxy ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetProxiedType ()",
        "returnType": "System.Type"
      },
      {
        "name": "Invoke (System.Runtime.Remoting.Messaging.IMessage)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessage"
      }
    ],
    "staticMethods": [
      {
        "name": "SetStubData (System.Runtime.Remoting.Proxies.RealProxy, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetStubData (System.Runtime.Remoting.Proxies.RealProxy)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Services.EnterpriseServicesHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "WrapIUnknownWithComObject (System.IntPtr)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateConstructionReturnMessage (System.Runtime.Remoting.Activation.IConstructionCallMessage, System.MarshalByRefObject)",
        "returnType": "System.Runtime.Remoting.Activation.IConstructionReturnMessage"
      },
      {
        "name": "SwitchWrappers (System.Runtime.Remoting.Proxies.RealProxy, System.Runtime.Remoting.Proxies.RealProxy)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Services.ITrackingHandler",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "MarshaledObject (System.Object, System.Runtime.Remoting.ObjRef)",
        "returnType": "System.Void"
      },
      {
        "name": "UnmarshaledObject (System.Object, System.Runtime.Remoting.ObjRef)",
        "returnType": "System.Void"
      },
      {
        "name": "DisconnectedObject (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Services.TrackingServices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "RegisterTrackingHandler (System.Runtime.Remoting.Services.ITrackingHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "UnregisterTrackingHandler (System.Runtime.Remoting.Services.ITrackingHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Contexts.CrossContextDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Contexts.Context",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetProperty (System.Runtime.Remoting.Contexts.IContextProperty)",
        "returnType": "System.Void"
      },
      {
        "name": "GetProperty (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Contexts.IContextProperty"
      },
      {
        "name": "Freeze ()",
        "returnType": "System.Void"
      },
      {
        "name": "DoCallBack (System.Runtime.Remoting.Contexts.CrossContextDelegate)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "AllocateDataSlot ()",
        "returnType": "System.LocalDataStoreSlot"
      },
      {
        "name": "AllocateNamedDataSlot (CHARACTER)",
        "returnType": "System.LocalDataStoreSlot"
      },
      {
        "name": "GetNamedDataSlot (CHARACTER)",
        "returnType": "System.LocalDataStoreSlot"
      },
      {
        "name": "FreeNamedDataSlot (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetData (System.LocalDataStoreSlot, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetData (System.LocalDataStoreSlot)",
        "returnType": "System.Object"
      },
      {
        "name": "RegisterDynamicProperty (System.Runtime.Remoting.Contexts.IDynamicProperty, System.ContextBoundObject, System.Runtime.Remoting.Contexts.Context)",
        "returnType": "LOGICAL"
      },
      {
        "name": "UnregisterDynamicProperty (CHARACTER, System.ContextBoundObject, System.Runtime.Remoting.Contexts.Context)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Contexts.ContextProperty",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContextAttribute",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "IsContextOK (System.Runtime.Remoting.Contexts.Context, System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContextProperty",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "IsNewContextOK (System.Runtime.Remoting.Contexts.Context)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Freeze (System.Runtime.Remoting.Contexts.Context)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContextPropertyActivator",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "IsOKToActivate (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CollectFromClientContext (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Void"
      },
      {
        "name": "DeliverClientContextToServerContext (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CollectFromServerContext (System.Runtime.Remoting.Activation.IConstructionReturnMessage)",
        "returnType": "System.Void"
      },
      {
        "name": "DeliverServerContextToClientContext (System.Runtime.Remoting.Activation.IConstructionReturnMessage)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Contexts.ContextAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsNewContextOK (System.Runtime.Remoting.Contexts.Context)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Freeze (System.Runtime.Remoting.Contexts.Context)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsContextOK (System.Runtime.Remoting.Contexts.Context, System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContributeClientContextSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetClientContextSink (System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContributeDynamicSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetDynamicSink ()",
        "returnType": "System.Runtime.Remoting.Contexts.IDynamicMessageSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContributeEnvoySink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetEnvoySink (System.MarshalByRefObject, System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContributeObjectSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetObjectSink (System.MarshalByRefObject, System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IContributeServerContextSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetServerContextSink (System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IDynamicProperty",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.Contexts.IDynamicMessageSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ProcessMessageStart (System.Runtime.Remoting.Messaging.IMessage, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "ProcessMessageFinish (System.Runtime.Remoting.Messaging.IMessage, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Contexts.ContextAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Contexts.SynchronizationAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Void"
      },
      {
        "name": "GetServerContextSink (System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      },
      {
        "name": "GetClientContextSink (System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      },
      {
        "name": "IsContextOK (System.Runtime.Remoting.Contexts.Context, System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Lifetime.ClientSponsor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Renewal (System.Runtime.Remoting.Lifetime.ILease)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "InitializeLifetimeService ()",
        "returnType": "System.Object"
      },
      {
        "name": "Register (System.MarshalByRefObject)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Unregister (System.MarshalByRefObject)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Lifetime.ILease",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Register (System.Runtime.Remoting.Lifetime.ISponsor, System.TimeSpan)",
        "returnType": "System.Void"
      },
      {
        "name": "Register (System.Runtime.Remoting.Lifetime.ISponsor)",
        "returnType": "System.Void"
      },
      {
        "name": "Unregister (System.Runtime.Remoting.Lifetime.ISponsor)",
        "returnType": "System.Void"
      },
      {
        "name": "Renew (System.TimeSpan)",
        "returnType": "System.TimeSpan"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Lifetime.ISponsor",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Renewal (System.Runtime.Remoting.Lifetime.ILease)",
        "returnType": "System.TimeSpan"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Lifetime.LeaseState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Lifetime.LifetimeServices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.ChannelServices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "RegisterChannel (System.Runtime.Remoting.Channels.IChannel, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterChannel (System.Runtime.Remoting.Channels.IChannel)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Use System.Runtime.Remoting.ChannelServices.RegisterChannel(IChannel chnl, bool ensureSecurity) instead.",
          "error": false
        }
      },
      {
        "name": "GetChannel (CHARACTER)",
        "returnType": "System.Runtime.Remoting.Channels.IChannel"
      },
      {
        "name": "GetUrlsForObject (System.MarshalByRefObject)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetChannelSinkProperties (System.Object)",
        "returnType": "System.Collections.IDictionary"
      },
      {
        "name": "DispatchMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack, System.Runtime.Remoting.Messaging.IMessage, output System.Runtime.Remoting.Messaging.IMessage&)",
        "returnType": "System.Runtime.Remoting.Channels.ServerProcessing"
      },
      {
        "name": "SyncDispatchMessage (System.Runtime.Remoting.Messaging.IMessage)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessage"
      },
      {
        "name": "AsyncDispatchMessage (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageCtrl"
      },
      {
        "name": "CreateServerChannelSinkChain (System.Runtime.Remoting.Channels.IServerChannelSinkProvider, System.Runtime.Remoting.Channels.IChannelReceiver)",
        "returnType": "System.Runtime.Remoting.Channels.IServerChannelSink"
      },
      {
        "name": "UnregisterChannel (System.Runtime.Remoting.Channels.IChannel)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IClientChannelSinkStack",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Push (System.Runtime.Remoting.Channels.IClientChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Pop (System.Runtime.Remoting.Channels.IClientChannelSink)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AsyncProcessResponse (System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "DispatchReplyMessage (System.Runtime.Remoting.Messaging.IMessage)",
        "returnType": "System.Void"
      },
      {
        "name": "DispatchException (System.Exception)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.ClientChannelSinkStack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Push (System.Runtime.Remoting.Channels.IClientChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Pop (System.Runtime.Remoting.Channels.IClientChannelSink)",
        "returnType": "System.Object"
      },
      {
        "name": "AsyncProcessResponse (System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "DispatchReplyMessage (System.Runtime.Remoting.Messaging.IMessage)",
        "returnType": "System.Void"
      },
      {
        "name": "DispatchException (System.Exception)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IServerChannelSinkStack",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Push (System.Runtime.Remoting.Channels.IServerChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Pop (System.Runtime.Remoting.Channels.IServerChannelSink)",
        "returnType": "System.Object"
      },
      {
        "name": "Store (System.Runtime.Remoting.Channels.IServerChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "StoreAndDispatch (System.Runtime.Remoting.Channels.IServerChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ServerCallback (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AsyncProcessResponse (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResponseStream (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders)",
        "returnType": "System.IO.Stream"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.ServerChannelSinkStack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Push (System.Runtime.Remoting.Channels.IServerChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Pop (System.Runtime.Remoting.Channels.IServerChannelSink)",
        "returnType": "System.Object"
      },
      {
        "name": "Store (System.Runtime.Remoting.Channels.IServerChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "StoreAndDispatch (System.Runtime.Remoting.Channels.IServerChannelSink, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "AsyncProcessResponse (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResponseStream (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "ServerCallback (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IChannel",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Parse (CHARACTER, output System.String&)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IChannelSender",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CreateMessageSink (CHARACTER, System.Object, output System.String&)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IChannelReceiver",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetUrlsForUri (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "StartListening (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "StopListening (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IChannelReceiverHook",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddHookChannelUri (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IClientChannelSinkProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CreateSink (System.Runtime.Remoting.Channels.IChannelSender, CHARACTER, System.Object)",
        "returnType": "System.Runtime.Remoting.Channels.IClientChannelSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IServerChannelSinkProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetChannelData (System.Runtime.Remoting.Channels.IChannelDataStore)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateSink (System.Runtime.Remoting.Channels.IChannelReceiver)",
        "returnType": "System.Runtime.Remoting.Channels.IServerChannelSink"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IClientFormatterSinkProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.Channels.IServerFormatterSinkProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.Channels.IClientChannelSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ProcessMessage (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream, output System.Runtime.Remoting.Channels.ITransportHeaders&, output System.IO.Stream&)",
        "returnType": "System.Void"
      },
      {
        "name": "AsyncProcessRequest (System.Runtime.Remoting.Channels.IClientChannelSinkStack, System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "AsyncProcessResponse (System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack, System.Object, System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRequestStream (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders)",
        "returnType": "System.IO.Stream"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.ServerProcessing",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.Remoting.Channels.IServerChannelSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack, System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream, output System.Runtime.Remoting.Messaging.IMessage&, output System.Runtime.Remoting.Channels.ITransportHeaders&, output System.IO.Stream&)",
        "returnType": "System.Runtime.Remoting.Channels.ServerProcessing"
      },
      {
        "name": "AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack, System.Object, System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders, System.IO.Stream)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack, System.Object, System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Channels.ITransportHeaders)",
        "returnType": "System.IO.Stream"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.IChannelSinkBase",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.Channels.IClientFormatterSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.Channels.IChannelDataStore",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.ChannelDataStore",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.Remoting.Channels.ITransportHeaders",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.TransportHeaders",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.SinkProviderData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.BaseChannelWithProperties",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Channels.ISecurableChannel",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.AsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetMessageCtrl (System.Runtime.Remoting.Messaging.IMessageCtrl)",
        "returnType": "System.Void"
      },
      {
        "name": "AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageCtrl"
      },
      {
        "name": "GetReplyMessage ()",
        "returnType": "System.Runtime.Remoting.Messaging.IMessage"
      },
      {
        "name": "SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessage"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Messaging.IMessage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.Messaging.IMessageCtrl",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Cancel (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Messaging.IMessageSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessage"
      },
      {
        "name": "AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageCtrl"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Messaging.IMethodMessage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetArg (INTEGER)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Messaging.IMethodCallMessage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetInArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetInArg (INTEGER)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Messaging.IMethodReturnMessage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetOutArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetOutArg (INTEGER)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Messaging.IRemotingFormatter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Deserialize (System.IO.Stream, System.Runtime.Remoting.Messaging.HeaderHandler)",
        "returnType": "System.Object"
      },
      {
        "name": "Serialize (System.IO.Stream, System.Object, System.Runtime.Remoting.Messaging.Header[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.ReturnMessage",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetOutArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetOutArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetArgName (INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MethodCall",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "RootSetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "ResolveMethod ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "Init ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetInArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetInArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "HeaderHandler (System.Runtime.Remoting.Messaging.Header[])",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Messaging.MethodCall",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.ConstructionCall",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MethodResponse",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "RootSetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "GetArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetOutArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetOutArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "HeaderHandler (System.Runtime.Remoting.Messaging.Header[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetArgName (INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Messaging.MethodResponse",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.ConstructionResponse",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.InternalMessageWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Messaging.InternalMessageWrapper",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MethodCallMessageWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetInArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetInArgName (INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Messaging.InternalMessageWrapper",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetArgName (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetOutArg (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetOutArgName (INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.OneWayAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MessageSurrogateFilter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (CHARACTER, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (CHARACTER, System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.RemotingSurrogateSelector",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetRootObject (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRootObject ()",
        "returnType": "System.Object"
      },
      {
        "name": "ChainSelector (System.Runtime.Serialization.ISurrogateSelector)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSurrogate (System.Type, System.Runtime.Serialization.StreamingContext, output System.Runtime.Serialization.ISurrogateSelector&)",
        "returnType": "System.Runtime.Serialization.ISerializationSurrogate"
      },
      {
        "name": "GetNextSelector ()",
        "returnType": "System.Runtime.Serialization.ISurrogateSelector"
      },
      {
        "name": "UseSoapFormat ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.Header",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.HeaderHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Runtime.Remoting.Messaging.Header[])",
        "returnType": "System.Object"
      },
      {
        "name": "BeginInvoke (System.Runtime.Remoting.Messaging.Header[], System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.CallContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "FreeNamedDataSlot (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "LogicalGetData (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetData (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "SetData (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "LogicalSetData (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetHeaders ()",
        "returnType": "System.Runtime.Remoting.Messaging.Header[]"
      },
      {
        "name": "SetHeaders (System.Runtime.Remoting.Messaging.Header[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Messaging.ILogicalThreadAffinative",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.LogicalCallContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "FreeNamedDataSlot (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetData (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "SetData (CHARACTER, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.Remoting.Activation.IActivator",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Activate (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Runtime.Remoting.Activation.IConstructionReturnMessage"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.ActivatorLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.Remoting.Activation.IConstructionCallMessage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.Runtime.Remoting.Activation.IConstructionReturnMessage",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Contexts.ContextAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.UrlAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsContextOK (System.Runtime.Remoting.Contexts.Context, System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.StringFreezingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ContractHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "TriggerFailure (System.Diagnostics.Contracts.ContractFailureKind, CHARACTER, CHARACTER, CHARACTER, System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "RaiseContractFailedEvent (System.Diagnostics.Contracts.ContractFailureKind, CHARACTER, CHARACTER, System.Exception)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AccessedThroughPropertyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CallConvCdecl",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CallConvStdcall",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CallConvThiscall",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CallConvFastcall",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.RuntimeHelpers",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "RunClassConstructor (System.RuntimeTypeHandle)",
        "returnType": "System.Void"
      },
      {
        "name": "RunModuleConstructor (System.ModuleHandle)",
        "returnType": "System.Void"
      },
      {
        "name": "PrepareMethod (System.RuntimeMethodHandle)",
        "returnType": "System.Void"
      },
      {
        "name": "PrepareMethod (System.RuntimeMethodHandle, System.RuntimeTypeHandle[])",
        "returnType": "System.Void"
      },
      {
        "name": "PrepareConstrainedRegions ()",
        "returnType": "System.Void"
      },
      {
        "name": "PrepareConstrainedRegionsNoOP ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "EnsureSufficientExecutionStack ()",
        "returnType": "System.Void"
      },
      {
        "name": "InitializeArray (MEMPTR, System.RuntimeFieldHandle)",
        "returnType": "System.Void"
      },
      {
        "name": "PrepareDelegate (System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "PrepareContractedDelegate (System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "GetHashCode (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ProbeForSufficientStack ()",
        "returnType": "System.Void"
      },
      {
        "name": "ExecuteCodeWithGuaranteedCleanup (System.Runtime.CompilerServices.RuntimeHelpers+TryCode, System.Runtime.CompilerServices.RuntimeHelpers+CleanupCode, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.RuntimeFeature",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "IsSupported (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CompilerGeneratedAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CustomConstantAttribute",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.CompilerServices.CustomConstantAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.DateTimeConstantAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.DiscardableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.DecimalConstantAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.DisablePrivateReflectionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CompilationRelaxations",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CompilationRelaxationsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CompilerGlobalScopeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ExtensionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.FixedBufferAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IndexerNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.InternalsVisibleToAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsVolatile",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsByRefLikeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.MethodImplOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.MethodCodeType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.MethodImplAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.FixedAddressValueTypeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.UnsafeValueTypeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.RequiredAttributeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.LoadHint",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.DefaultDependencyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.DependencyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CompilerMarshalOverride",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.HasCopySemanticsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsBoxed",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsByValue",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsConst",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsExplicitlyDereferenced",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsImplicitlyDereferenced",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsJitIntrinsic",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsLong",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsPinned",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsSignUnspecifiedByte",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsUdtReturn",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ScopelessEnumAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.SpecialNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsReadOnlyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IsCopyConstructed",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.SuppressIldasmAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.NativeCppClassAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.TypeForwardedToAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.TypeForwardedFromAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ReferenceAssemblyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.RuntimeCompatibilityAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.RuntimeWrappedException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConditionalWeakTable`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetValue (?, ?)",
        "returnType": "?"
      },
      {
        "name": "GetOrCreateValue (?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CallerFilePathAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CallerLineNumberAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.CallerMemberNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.StateMachineAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.CompilerServices.StateMachineAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IteratorStateMachineAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.CompilerServices.ITuple",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Runtime.CompilerServices.StateMachineAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncStateMachineAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncVoidMethodBuilder",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetStateMachine (System.Runtime.CompilerServices.IAsyncStateMachine)",
        "returnType": "System.Void"
      },
      {
        "name": "SetResult ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetException (System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "Start (?)",
        "returnType": "System.Void"
      },
      {
        "name": "AwaitOnCompleted (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "AwaitUnsafeOnCompleted (?, ?)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create ()",
        "returnType": "System.Runtime.CompilerServices.AsyncVoidMethodBuilder"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncTaskMethodBuilder",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetStateMachine (System.Runtime.CompilerServices.IAsyncStateMachine)",
        "returnType": "System.Void"
      },
      {
        "name": "SetResult ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetException (System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "Start (?)",
        "returnType": "System.Void"
      },
      {
        "name": "AwaitOnCompleted (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "AwaitUnsafeOnCompleted (?, ?)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create ()",
        "returnType": "System.Runtime.CompilerServices.AsyncTaskMethodBuilder"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Start (?)",
        "returnType": "System.Void"
      },
      {
        "name": "SetStateMachine (System.Runtime.CompilerServices.IAsyncStateMachine)",
        "returnType": "System.Void"
      },
      {
        "name": "AwaitUnsafeOnCompleted (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "SetResult (?)",
        "returnType": "System.Void"
      },
      {
        "name": "SetException (System.Exception)",
        "returnType": "System.Void"
      },
      {
        "name": "AwaitOnCompleted (?, ?)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create ()",
        "returnType": "System.Runtime.CompilerServices.AsyncTaskMethodBuilder"
      }
    ]
  },
  {
    "name": "System.Runtime.CompilerServices.IAsyncStateMachine",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetStateMachine (System.Runtime.CompilerServices.IAsyncStateMachine)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.CompilerServices.INotifyCompletion",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "OnCompleted (System.Action)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.CompilerServices.ICriticalNotifyCompletion",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "UnsafeOnCompleted (System.Action)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.TaskAwaiter",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResult ()",
        "returnType": "System.Void"
      },
      {
        "name": "UnsafeOnCompleted (System.Action)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.TaskAwaiter`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "UnsafeOnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResult ()",
        "returnType": "?"
      },
      {
        "name": "OnCompleted (System.Action)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConfiguredTaskAwaitable",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAwaiter ()",
        "returnType": "System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAwaiter ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.YieldAwaitable",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAwaiter ()",
        "returnType": "System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.FormattableStringFactory",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (CHARACTER, System.Object[])",
        "returnType": "System.FormattableString"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.CompilerServices.CustomConstantAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IDispatchConstantAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.CompilerServices.CustomConstantAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.IUnknownConstantAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.TupleElementNamesAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices._Activator",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._Attribute",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._Thread",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._Type",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetArrayRank ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetConstructors (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetInterfaces ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "FindInterfaces (System.Reflection.TypeFilter, System.Object)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetEvent (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetEvents (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.EventInfo[]"
      },
      {
        "name": "GetNestedTypes (System.Reflection.BindingFlags)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.MemberTypes, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetDefaultMembers ()",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "FindMembers (System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, System.Object)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetElementType ()",
        "returnType": "System.Type"
      },
      {
        "name": "IsSubclassOf (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsInstanceOfType (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsAssignableFrom (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetInterfaceMap (System.Type)",
        "returnType": "System.Reflection.InterfaceMapping"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethods (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetProperty (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperties (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetMember (CHARACTER, System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMembers (System.Reflection.BindingFlags)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])",
        "returnType": "System.Object"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "InvokeMember (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetConstructor (System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.ConstructorInfo"
      },
      {
        "name": "GetConstructor (System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.ConstructorInfo"
      },
      {
        "name": "GetConstructor (System.Type[])",
        "returnType": "System.Reflection.ConstructorInfo"
      },
      {
        "name": "GetConstructors ()",
        "returnType": "System.Reflection.ConstructorInfo[]"
      },
      {
        "name": "GetMethod (CHARACTER, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER, System.Type[])",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethod (CHARACTER)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetMethods ()",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetField (CHARACTER)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "GetFields ()",
        "returnType": "System.Reflection.FieldInfo[]"
      },
      {
        "name": "GetInterface (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetEvent (CHARACTER)",
        "returnType": "System.Reflection.EventInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type, System.Type[], System.Reflection.ParameterModifier[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type, System.Type[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type[])",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER, System.Type)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperty (CHARACTER)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "GetProperties ()",
        "returnType": "System.Reflection.PropertyInfo[]"
      },
      {
        "name": "GetNestedTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetNestedType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetMember (CHARACTER)",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "GetMembers ()",
        "returnType": "System.Reflection.MemberInfo[]"
      },
      {
        "name": "Equals (System.Type)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._Assembly",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "ModuleResolve"
    ],
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetName ()",
        "returnType": "System.Reflection.AssemblyName"
      },
      {
        "name": "GetName (LOGICAL)",
        "returnType": "System.Reflection.AssemblyName"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetExportedTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetTypes ()",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetManifestResourceStream (System.Type, CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetManifestResourceStream (CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetFile (CHARACTER)",
        "returnType": "System.IO.FileStream"
      },
      {
        "name": "GetFiles ()",
        "returnType": "System.IO.FileStream[]"
      },
      {
        "name": "GetFiles (LOGICAL)",
        "returnType": "System.IO.FileStream[]"
      },
      {
        "name": "GetManifestResourceNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetManifestResourceInfo (CHARACTER)",
        "returnType": "System.Reflection.ManifestResourceInfo"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ModuleResolve (System.Reflection.ModuleResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ModuleResolve (System.Reflection.ModuleResolveEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetSatelliteAssembly (System.Globalization.CultureInfo)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetSatelliteAssembly (System.Globalization.CultureInfo, System.Version)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "LoadModule (CHARACTER, MEMPTR)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "LoadModule (CHARACTER, MEMPTR, MEMPTR)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "CreateInstance (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (CHARACTER, LOGICAL)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (CHARACTER, LOGICAL, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetLoadedModules ()",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetLoadedModules (LOGICAL)",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetModules ()",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetModules (LOGICAL)",
        "returnType": "System.Reflection.Module[]"
      },
      {
        "name": "GetModule (CHARACTER)",
        "returnType": "System.Reflection.Module"
      },
      {
        "name": "GetReferencedAssemblies ()",
        "returnType": "System.Reflection.AssemblyName[]"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._MemberInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._MethodBase",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "Invoke (System.Object, System.Object[])",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._MethodInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "Invoke (System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetBaseDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._ConstructorInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "Invoke_2 (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "Invoke_3 (System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "Invoke_4 (System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "Invoke_5 (System.Object[])",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._FieldInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValueDirect (System.TypedReference)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Globalization.CultureInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValueDirect (System.TypedReference, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._PropertyInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetValue (System.Object, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAccessors (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetGetMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetSetMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetIndexParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetAccessors ()",
        "returnType": "System.Reflection.MethodInfo[]"
      },
      {
        "name": "GetGetMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetSetMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._EventInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetAddMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRemoveMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRaiseMethod (LOGICAL)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetAddMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRemoveMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetRaiseMethod ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "AddEventHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveEventHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._ParameterInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._Module",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._AssemblyName",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ArrayWithOffset",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetArray ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetOffset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Runtime.InteropServices.ArrayWithOffset)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Runtime.InteropServices.ArrayWithOffset, System.Runtime.InteropServices.ArrayWithOffset)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Runtime.InteropServices.ArrayWithOffset, System.Runtime.InteropServices.ArrayWithOffset)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeIdentifierAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DispIdAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComInterfaceType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.InterfaceTypeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComDefaultInterfaceAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ClassInterfaceType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ClassInterfaceAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComVisibleAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibImportClassAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.LCIDConversionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComRegisterFunctionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComUnregisterFunctionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ProgIdAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ImportedFromTypeLibAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.IDispatchImplType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.IDispatchImplAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComSourceInterfacesAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComConversionLossAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibTypeFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibFuncFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibVarFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibTypeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibFuncAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibVarAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.VarEnum",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.UnmanagedType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.MarshalAsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComImportAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.GuidAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.PreserveSigAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.InAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.OutAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.OptionalAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DllImportSearchPath",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DllImportAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.StructLayoutAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.FieldOffsetAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComAliasNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.AutomationProxyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CoClassAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComEventInterfaceAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibVersionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComCompatibleVersionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.BestFitMappingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DefaultCharSetAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CallingConvention",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CharSet",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.COMException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CriticalHandle",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetHandleAsInvalid ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ExternalException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.GCHandleType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.GCHandle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Free ()",
        "returnType": "System.Void"
      },
      {
        "name": "AddrOfPinnedObject ()",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "Alloc (System.Object)",
        "returnType": "System.Runtime.InteropServices.GCHandle"
      },
      {
        "name": "Alloc (System.Object, System.Runtime.InteropServices.GCHandleType)",
        "returnType": "System.Runtime.InteropServices.GCHandle"
      },
      {
        "name": "op_Explicit (System.IntPtr)",
        "returnType": "System.Runtime.InteropServices.GCHandle"
      },
      {
        "name": "FromIntPtr (System.IntPtr)",
        "returnType": "System.Runtime.InteropServices.GCHandle"
      },
      {
        "name": "op_Explicit (System.Runtime.InteropServices.GCHandle)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ToIntPtr (System.Runtime.InteropServices.GCHandle)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "op_Equality (System.Runtime.InteropServices.GCHandle, System.Runtime.InteropServices.GCHandle)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Runtime.InteropServices.GCHandle, System.Runtime.InteropServices.GCHandle)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.HandleRef",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "op_Explicit (System.Runtime.InteropServices.HandleRef)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ToIntPtr (System.Runtime.InteropServices.HandleRef)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ICustomMarshaler",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "MarshalNativeToManaged (System.IntPtr)",
        "returnType": "System.Object"
      },
      {
        "name": "MarshalManagedToNative (System.Object)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "CleanUpNativeData (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "CleanUpManagedData (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNativeDataSize ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._Exception",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetType ()",
        "returnType": "System.Type"
      },
      {
        "name": "GetBaseException ()",
        "returnType": "System.Exception"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.InvalidOleVariantTypeException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.LayoutKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CustomQueryInterfaceMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.Marshal",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "PtrToStringAnsi (System.IntPtr)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PtrToStringAnsi (System.IntPtr, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PtrToStringUni (System.IntPtr, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PtrToStringAuto (System.IntPtr, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PtrToStringUni (System.IntPtr)",
        "returnType": "CHARACTER"
      },
      {
        "name": "PtrToStringAuto (System.IntPtr)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SizeOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "SizeOf (System.Type)",
        "returnType": "INTEGER"
      },
      {
        "name": "OffsetOf (System.Type, CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "Copy (System.Int32[], INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.Char[], INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.Int16[], INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.Int64[], INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.Single[], INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.Double[], INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (MEMPTR, INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr[], INTEGER, System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, System.Int32[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, System.Int16[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, System.Int64[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, System.Single[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, System.Double[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Copy (System.IntPtr, System.IntPtr[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ReadByte (System.IntPtr, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadByte (System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt16 (System.IntPtr, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt16 (System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt32 (System.IntPtr, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt32 (System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadIntPtr (System.Object, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ReadIntPtr (System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ReadIntPtr (System.IntPtr)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ReadInt64 (System.IntPtr, INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "ReadInt64 (System.IntPtr)",
        "returnType": "INT64"
      },
      {
        "name": "WriteByte (System.IntPtr, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteByte (System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt16 (System.IntPtr, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt16 (System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt16 (System.IntPtr, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt16 (output System.Object, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt16 (System.IntPtr, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt32 (System.IntPtr, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt32 (System.IntPtr, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIntPtr (System.IntPtr, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIntPtr (output System.Object, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIntPtr (System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt64 (System.IntPtr, INTEGER, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt64 (System.IntPtr, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "GetHRForLastWin32Error ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Prelink (System.Reflection.MethodInfo)",
        "returnType": "System.Void"
      },
      {
        "name": "PrelinkAll (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "NumParamBytes (System.Reflection.MethodInfo)",
        "returnType": "INTEGER"
      },
      {
        "name": "PtrToStructure (System.IntPtr, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "PtrToStructure (System.IntPtr, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetHINSTANCE (System.Reflection.Module)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ThrowExceptionForHR (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ThrowExceptionForHR (INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetExceptionForHR (INTEGER)",
        "returnType": "System.Exception"
      },
      {
        "name": "GetExceptionForHR (INTEGER, System.IntPtr)",
        "returnType": "System.Exception"
      },
      {
        "name": "GetThreadFromFiberCookie (INTEGER)",
        "returnType": "System.Threading.Thread",
        "obsolete": {
          "message": "The GetThreadFromFiberCookie method has been deprecated.  Use the hosting API to perform this operation.",
          "error": false
        }
      },
      {
        "name": "AllocHGlobal (System.IntPtr)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "AllocHGlobal (INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "FreeHGlobal (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReAllocHGlobal (System.IntPtr, System.IntPtr)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "StringToHGlobalAnsi (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "StringToHGlobalUni (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "StringToHGlobalAuto (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib)",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "Use System.Runtime.InteropServices.Marshal.GetTypeLibName(ITypeLib pTLB) instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202&ID=0000011.",
          "error": false
        }
      },
      {
        "name": "GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib)",
        "returnType": "System.Guid",
        "obsolete": {
          "message": "Use System.Runtime.InteropServices.Marshal.GetTypeLibGuid(ITypeLib pTLB) instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202&ID=0000011.",
          "error": false
        }
      },
      {
        "name": "GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib)",
        "returnType": "System.Guid"
      },
      {
        "name": "GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib)",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "Use System.Runtime.InteropServices.Marshal.GetTypeLibLcid(ITypeLib pTLB) instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202&ID=0000011.",
          "error": false
        }
      },
      {
        "name": "GetTypeLibGuidForAssembly (System.Reflection.Assembly)",
        "returnType": "System.Guid"
      },
      {
        "name": "GetTypeLibVersionForAssembly (System.Reflection.Assembly, output System.Int32&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo)",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "Use System.Runtime.InteropServices.Marshal.GetTypeInfoName(ITypeInfo pTLB) instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202&ID=0000011.",
          "error": false
        }
      },
      {
        "name": "GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeFromCLSID (System.Guid)",
        "returnType": "System.Type"
      },
      {
        "name": "GetIUnknownForObject (System.Object)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetIUnknownForObjectInContext (System.Object)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetIDispatchForObject (System.Object)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetIDispatchForObjectInContext (System.Object)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetComInterfaceForObject (System.Object, System.Type)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetComInterfaceForObject (System.Object, System.Type, System.Runtime.InteropServices.CustomQueryInterfaceMode)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetComInterfaceForObjectInContext (System.Object, System.Type)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "AllocCoTaskMem (INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "StringToCoTaskMemUni (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "StringToCoTaskMemAuto (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "StringToCoTaskMemAnsi (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "FreeCoTaskMem (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReAllocCoTaskMem (System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ReleaseComObject (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "FinalReleaseComObject (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetComObjectData (System.Object, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "SetComObjectData (System.Object, System.Object, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateWrapperOfType (System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "ReleaseThreadCache ()",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This API did not perform any operation and will be removed in future versions of the CLR.",
          "error": false
        }
      },
      {
        "name": "FreeBSTR (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "StringToBSTR (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "PtrToStringBSTR (System.IntPtr)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetComSlotForMethodInfo (System.Reflection.MemberInfo)",
        "returnType": "INTEGER"
      },
      {
        "name": "GenerateGuidForType (System.Type)",
        "returnType": "System.Guid"
      },
      {
        "name": "GenerateProgIdForType (System.Type)",
        "returnType": "CHARACTER"
      },
      {
        "name": "BindToMoniker (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetActiveObject (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetDelegateForFunctionPointer (System.IntPtr, System.Type)",
        "returnType": "System.Delegate"
      },
      {
        "name": "GetFunctionPointerForDelegate (System.Delegate)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SecureStringToBSTR (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SecureStringToCoTaskMemAnsi (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SecureStringToCoTaskMemUnicode (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ZeroFreeBSTR (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ZeroFreeCoTaskMemAnsi (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ZeroFreeCoTaskMemUnicode (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "SecureStringToGlobalAllocAnsi (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SecureStringToGlobalAllocUnicode (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ZeroFreeGlobalAllocAnsi (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ZeroFreeGlobalAllocUnicode (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "SizeOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "SizeOf ()",
        "returnType": "INTEGER"
      },
      {
        "name": "OffsetOf (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "UnsafeAddrOfPinnedArrayElement (?, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "ReadByte (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt16 (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt32 (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadInt64 (System.Object, INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "WriteByte (output System.Object, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt16 (output System.Object, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt32 (output System.Object, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteInt64 (output System.Object, INTEGER, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "GetExceptionPointers ()",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetExceptionCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "StructureToPtr (?, System.IntPtr, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "PtrToStructure (System.IntPtr, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "PtrToStructure (System.IntPtr)",
        "returnType": "?"
      },
      {
        "name": "DestroyStructure (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetHRForException (System.Exception)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetUnmanagedThunkForManagedMethodPtr (System.IntPtr, System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr",
        "obsolete": {
          "message": "The GetUnmanagedThunkForManagedMethodPtr method has been deprecated and will be removed in a future release.",
          "error": false
        }
      },
      {
        "name": "GetManagedThunkForUnmanagedMethodPtr (System.IntPtr, System.IntPtr, INTEGER)",
        "returnType": "System.IntPtr",
        "obsolete": {
          "message": "The GetManagedThunkForUnmanagedMethodPtr method has been deprecated and will be removed in a future release.",
          "error": false
        }
      },
      {
        "name": "GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTypeForITypeInfo (System.IntPtr)",
        "returnType": "System.Type"
      },
      {
        "name": "GetITypeInfoForType (System.Type)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetComInterfaceForObject (?)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetObjectForIUnknown (System.IntPtr)",
        "returnType": "System.Object"
      },
      {
        "name": "GetUniqueObjectForIUnknown (System.IntPtr)",
        "returnType": "System.Object"
      },
      {
        "name": "GetTypedObjectForIUnknown (System.IntPtr, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateAggregatedObject (System.IntPtr, System.Object)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "CreateAggregatedObject (System.IntPtr, ?)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "CleanupUnusedObjectsInCurrentContext ()",
        "returnType": "System.Void"
      },
      {
        "name": "AreComObjectsAvailableForCleanup ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateWrapperOfType (?)",
        "returnType": "?"
      },
      {
        "name": "IsTypeVisibleFromCom (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "AddRef (System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetNativeVariantForObject (System.Object, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNativeVariantForObject (?, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectForNativeVariant (System.IntPtr)",
        "returnType": "System.Object"
      },
      {
        "name": "GetObjectForNativeVariant (System.IntPtr)",
        "returnType": "?"
      },
      {
        "name": "GetObjectsForNativeVariants (System.IntPtr, INTEGER)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetObjectsForNativeVariants (System.IntPtr, INTEGER)",
        "returnType": "?"
      },
      {
        "name": "GetStartComSlot (System.Type)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEndComSlot (System.Type)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMethodInfoForComSlot (System.Type, INTEGER, System.Runtime.InteropServices.ComMemberType&)",
        "returnType": "System.Reflection.MemberInfo"
      },
      {
        "name": "ChangeWrapperHandleStrength (System.Object, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDelegateForFunctionPointer (System.IntPtr)",
        "returnType": "?"
      },
      {
        "name": "GetFunctionPointerForDelegate (?)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "UnsafeAddrOfPinnedArrayElement (MEMPTR, INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetLastWin32Error ()",
        "returnType": "INTEGER"
      },
      {
        "name": "StructureToPtr (System.Object, System.IntPtr, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "DestroyStructure (System.IntPtr, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "IsComObject (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "QueryInterface (System.IntPtr, System.Guid&, output System.IntPtr&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Release (System.IntPtr)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.MarshalDirectiveException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.RuntimeEnvironment",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "FromGlobalAccessCache (System.Reflection.Assembly)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetSystemVersion ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetRuntimeDirectory ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetRuntimeInterfaceAsIntPtr (System.Guid, System.Guid)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetRuntimeInterfaceAsObject (System.Guid, System.Guid)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.SEHException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanResume ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.SafeBuffer",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AcquirePointer (System.Byte*&)",
        "returnType": "System.Void"
      },
      {
        "name": "Initialize (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Initialize (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleasePointer ()",
        "returnType": "System.Void"
      },
      {
        "name": "Initialize (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (INT64)",
        "returnType": "?"
      },
      {
        "name": "ReadArray (INT64, ?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteArray (INT64, ?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.SafeHandle",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DangerousGetHandle ()",
        "returnType": "System.IntPtr"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetHandleAsInvalid ()",
        "returnType": "System.Void"
      },
      {
        "name": "DangerousAddRef (System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "DangerousRelease ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.BStrWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CurrencyWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DispatchWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ErrorWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.UnknownWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.VariantWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComMemberType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ExtensibleClassFactory",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "RegisterObjectCreationCallback (System.Runtime.InteropServices.ObjectCreationDelegate)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ICustomAdapter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetUnderlyingObject ()",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ICustomFactory",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CreateInstance (System.Type)",
        "returnType": "System.MarshalByRefObject"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CustomQueryInterfaceResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ICustomQueryInterface",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetInterface (System.Guid&, output System.IntPtr&)",
        "returnType": "System.Runtime.InteropServices.CustomQueryInterfaceResult"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.InvalidComObjectException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.AssemblyRegistrationFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.IRegistrationServices",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "RegisterAssembly (System.Reflection.Assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags)",
        "returnType": "LOGICAL"
      },
      {
        "name": "UnregisterAssembly (System.Reflection.Assembly)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetRegistrableTypesInAssembly (System.Reflection.Assembly)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetProgIdForType (System.Type)",
        "returnType": "CHARACTER"
      },
      {
        "name": "RegisterTypeForComClients (System.Type, System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetManagedCategoryGuid ()",
        "returnType": "System.Guid"
      },
      {
        "name": "TypeRequiresRegistration (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TypeRepresentsComType (System.Type)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibImporterFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibExporterFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ImporterEventKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ExporterEventKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ITypeLibImporterNotifySink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ReportEvent (System.Runtime.InteropServices.ImporterEventKind, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ResolveRef (System.Object)",
        "returnType": "System.Reflection.Assembly"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ITypeLibExporterNotifySink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ReportEvent (System.Runtime.InteropServices.ExporterEventKind, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ResolveRef (System.Reflection.Assembly)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ITypeLibConverter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ConvertTypeLibToAssembly (System.Object, CHARACTER, System.Runtime.InteropServices.TypeLibImporterFlags, System.Runtime.InteropServices.ITypeLibImporterNotifySink, MEMPTR, System.Reflection.StrongNameKeyPair, CHARACTER, System.Version)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "ConvertAssemblyToTypeLib (System.Reflection.Assembly, CHARACTER, System.Runtime.InteropServices.TypeLibExporterFlags, System.Runtime.InteropServices.ITypeLibExporterNotifySink)",
        "returnType": "System.Object"
      },
      {
        "name": "GetPrimaryInteropAssembly (System.Guid, INTEGER, INTEGER, INTEGER, output System.String&, output System.String&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTypeLibToAssembly (System.Object, CHARACTER, INTEGER, System.Runtime.InteropServices.ITypeLibImporterNotifySink, MEMPTR, System.Reflection.StrongNameKeyPair, LOGICAL)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ITypeLibExporterNameProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetNames ()",
        "returnType": "System.String[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ObjectCreationDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IntPtr)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "BeginInvoke (System.IntPtr, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.RegistrationClassContext",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.RegistrationConnectionType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.RegistrationServices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "RegisterAssembly (System.Reflection.Assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags)",
        "returnType": "LOGICAL"
      },
      {
        "name": "UnregisterAssembly (System.Reflection.Assembly)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetRegistrableTypesInAssembly (System.Reflection.Assembly)",
        "returnType": "System.Type[]"
      },
      {
        "name": "GetProgIdForType (System.Type)",
        "returnType": "CHARACTER"
      },
      {
        "name": "RegisterTypeForComClients (System.Type, System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetManagedCategoryGuid ()",
        "returnType": "System.Guid"
      },
      {
        "name": "TypeRequiresRegistration (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TypeRepresentsComType (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RegisterTypeForComClients (System.Type, System.Runtime.InteropServices.RegistrationClassContext, System.Runtime.InteropServices.RegistrationConnectionType)",
        "returnType": "INTEGER"
      },
      {
        "name": "UnregisterTypeForComClients (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.SafeArrayRankMismatchException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.SafeArrayTypeMismatchException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ConvertTypeLibToAssembly (System.Object, CHARACTER, INTEGER, System.Runtime.InteropServices.ITypeLibImporterNotifySink, MEMPTR, System.Reflection.StrongNameKeyPair, LOGICAL)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "ConvertAssemblyToTypeLib (System.Reflection.Assembly, CHARACTER, System.Runtime.InteropServices.TypeLibExporterFlags, System.Runtime.InteropServices.ITypeLibExporterNotifySink)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTypeLibToAssembly (System.Object, CHARACTER, System.Runtime.InteropServices.TypeLibImporterFlags, System.Runtime.InteropServices.ITypeLibImporterNotifySink, MEMPTR, System.Reflection.StrongNameKeyPair, CHARACTER, System.Version)",
        "returnType": "System.Reflection.Emit.AssemblyBuilder"
      },
      {
        "name": "GetPrimaryInteropAssembly (System.Guid, INTEGER, INTEGER, INTEGER, output System.String&, output System.String&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.BIND_OPTS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIBindCtx",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "RegisterObjectBound (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RevokeObjectBound (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseBoundObjects ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetBindOptions (System.Runtime.InteropServices.BIND_OPTS&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetBindOptions (System.Runtime.InteropServices.BIND_OPTS&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRunningObjectTable (output System.Runtime.InteropServices.UCOMIRunningObjectTable&)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterObjectParam (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectParam (CHARACTER, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "EnumObjectParam (output System.Runtime.InteropServices.UCOMIEnumString&)",
        "returnType": "System.Void"
      },
      {
        "name": "RevokeObjectParam (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIConnectionPointContainer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "EnumConnectionPoints (output System.Runtime.InteropServices.UCOMIEnumConnectionPoints&)",
        "returnType": "System.Void"
      },
      {
        "name": "FindConnectionPoint (System.Guid&, output System.Runtime.InteropServices.UCOMIConnectionPoint&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIConnectionPoint",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetConnectionInterface (output System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetConnectionPointContainer (output System.Runtime.InteropServices.UCOMIConnectionPointContainer&)",
        "returnType": "System.Void"
      },
      {
        "name": "Advise (System.Object, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "Unadvise (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "EnumConnections (output System.Runtime.InteropServices.UCOMIEnumConnections&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIEnumMoniker",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.UCOMIMoniker[], output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.UCOMIEnumMoniker&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CONNECTDATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIEnumConnections",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.CONNECTDATA[], output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.UCOMIEnumConnections&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIEnumConnectionPoints",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.UCOMIConnectionPoint[], output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.UCOMIEnumConnectionPoints&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIEnumString",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.String[], output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.UCOMIEnumString&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIEnumVARIANT",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.FILETIME",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIMoniker",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetClassID (output System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsDirty ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Load (System.Runtime.InteropServices.UCOMIStream)",
        "returnType": "System.Void"
      },
      {
        "name": "Save (System.Runtime.InteropServices.UCOMIStream, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSizeMax (output System.Int64&)",
        "returnType": "System.Void"
      },
      {
        "name": "BindToObject (System.Runtime.InteropServices.UCOMIBindCtx, System.Runtime.InteropServices.UCOMIMoniker, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "BindToStorage (System.Runtime.InteropServices.UCOMIBindCtx, System.Runtime.InteropServices.UCOMIMoniker, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "Reduce (System.Runtime.InteropServices.UCOMIBindCtx, INTEGER, System.Runtime.InteropServices.UCOMIMoniker&, output System.Runtime.InteropServices.UCOMIMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "ComposeWith (System.Runtime.InteropServices.UCOMIMoniker, LOGICAL, output System.Runtime.InteropServices.UCOMIMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "Enum (LOGICAL, output System.Runtime.InteropServices.UCOMIEnumMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsEqual (System.Runtime.InteropServices.UCOMIMoniker)",
        "returnType": "System.Void"
      },
      {
        "name": "Hash (output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsRunning (System.Runtime.InteropServices.UCOMIBindCtx, System.Runtime.InteropServices.UCOMIMoniker, System.Runtime.InteropServices.UCOMIMoniker)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIBindCtx, System.Runtime.InteropServices.UCOMIMoniker, output System.Runtime.InteropServices.FILETIME&)",
        "returnType": "System.Void"
      },
      {
        "name": "Inverse (output System.Runtime.InteropServices.UCOMIMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "CommonPrefixWith (System.Runtime.InteropServices.UCOMIMoniker, output System.Runtime.InteropServices.UCOMIMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "RelativePathTo (System.Runtime.InteropServices.UCOMIMoniker, output System.Runtime.InteropServices.UCOMIMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDisplayName (System.Runtime.InteropServices.UCOMIBindCtx, System.Runtime.InteropServices.UCOMIMoniker, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "ParseDisplayName (System.Runtime.InteropServices.UCOMIBindCtx, System.Runtime.InteropServices.UCOMIMoniker, CHARACTER, output System.Int32&, output System.Runtime.InteropServices.UCOMIMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsSystemMoniker (output System.Int32&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIPersistFile",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetClassID (output System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsDirty ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Load (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Save (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "SaveCompleted (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCurFile (output System.String&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIRunningObjectTable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Register (INTEGER, System.Object, System.Runtime.InteropServices.UCOMIMoniker, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "Revoke (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsRunning (System.Runtime.InteropServices.UCOMIMoniker)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObject (System.Runtime.InteropServices.UCOMIMoniker, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "NoteChangeTime (INTEGER, System.Runtime.InteropServices.FILETIME&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIMoniker, output System.Runtime.InteropServices.FILETIME&)",
        "returnType": "System.Void"
      },
      {
        "name": "EnumRunning (output System.Runtime.InteropServices.UCOMIEnumMoniker&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.STATSTG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.UCOMIStream",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Read (output MEMPTR, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSize (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.Runtime.InteropServices.UCOMIStream, INT64, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Commit (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Revert ()",
        "returnType": "System.Void"
      },
      {
        "name": "LockRegion (INT64, INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "UnlockRegion (INT64, INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Stat (output System.Runtime.InteropServices.STATSTG&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.UCOMIStream&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DESCKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.BINDPTR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.UCOMITypeComp",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Bind (CHARACTER, INTEGER, INTEGER, output System.Runtime.InteropServices.UCOMITypeInfo&, output System.Runtime.InteropServices.DESCKIND&, output System.Runtime.InteropServices.BINDPTR&)",
        "returnType": "System.Void"
      },
      {
        "name": "BindType (CHARACTER, INTEGER, output System.Runtime.InteropServices.UCOMITypeInfo&, output System.Runtime.InteropServices.UCOMITypeComp&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TYPEKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TYPEFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.IMPLTYPEFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TYPEATTR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.FUNCDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.IDLFLAG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.IDLDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.PARAMFLAG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.PARAMDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TYPEDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ELEMDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.VARDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DISPPARAMS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.EXCEPINFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.FUNCKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.INVOKEKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.CALLCONV",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.FUNCFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.VARFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.UCOMITypeInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeAttr (output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeComp (output System.Runtime.InteropServices.UCOMITypeComp&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFuncDesc (INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetVarDesc (INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNames (INTEGER, output System.String[], INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRefTypeOfImplType (INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetImplTypeFlags (INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.String[], INTEGER, output System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object, INTEGER, INTEGER, System.Runtime.InteropServices.DISPPARAMS&, output System.Object&, output System.Runtime.InteropServices.EXCEPINFO&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation (INTEGER, output System.String&, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDllEntry (INTEGER, System.Runtime.InteropServices.INVOKEKIND, output System.String&, output System.String&, output System.Int16&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRefTypeInfo (INTEGER, output System.Runtime.InteropServices.UCOMITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "AddressOfMember (INTEGER, System.Runtime.InteropServices.INVOKEKIND, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateInstance (System.Object, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetMops (INTEGER, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetContainingTypeLib (output System.Runtime.InteropServices.UCOMITypeLib&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseTypeAttr (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseFuncDesc (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseVarDesc (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.SYSKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.LIBFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TYPELIBATTR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.UCOMITypeLib",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTypeInfo (INTEGER, output System.Runtime.InteropServices.UCOMITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfoType (INTEGER, output System.Runtime.InteropServices.TYPEKIND&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfoOfGuid (System.Guid&, output System.Runtime.InteropServices.UCOMITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLibAttr (output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeComp (output System.Runtime.InteropServices.UCOMITypeComp&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation (INTEGER, output System.String&, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsName (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FindName (CHARACTER, INTEGER, output System.Runtime.InteropServices.UCOMITypeInfo[], output System.Int32[], System.Int16&)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseTLibAttr (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.Architecture",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.OSPlatform",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Runtime.InteropServices.OSPlatform)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Runtime.InteropServices.OSPlatform"
      },
      {
        "name": "op_Equality (System.Runtime.InteropServices.OSPlatform, System.Runtime.InteropServices.OSPlatform)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Runtime.InteropServices.OSPlatform, System.Runtime.InteropServices.OSPlatform)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.RuntimeInformation",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "IsOSPlatform (System.Runtime.InteropServices.OSPlatform)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComEventsHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Combine (System.Object, System.Guid, INTEGER, System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object, System.Guid, INTEGER, System.Delegate)",
        "returnType": "System.Delegate"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._AssemblyBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._ConstructorBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._CustomAttributeBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._EnumBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._EventBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._FieldBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._ILGenerator",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._LocalBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._MethodBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._MethodRental",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._ModuleBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._ParameterBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._PropertyBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._SignatureHelper",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices._TypeBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.IntPtr, INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, INTEGER, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddEventHandler (?)",
        "returnType": "System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken"
      },
      {
        "name": "RemoveEventHandler (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveEventHandler (?)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetOrCreateEventRegistrationTokenTable (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable)",
        "returnType": "System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.WindowsRuntime.IActivationFactory",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ActivateInstance ()",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "RemoveAllEventHandlers (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "GetActivationFactory (System.Type)",
        "returnType": "System.Runtime.InteropServices.WindowsRuntime.IActivationFactory"
      },
      {
        "name": "StringToHString (CHARACTER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "PtrToStringHString (System.IntPtr)",
        "returnType": "CHARACTER"
      },
      {
        "name": "FreeHString (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "AddEventHandler (?, System.Action, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveEventHandler (System.Action, ?)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "ReflectionOnlyNamespaceResolve",
      "DesignerNamespaceResolve"
    ],
    "staticMethods": [
      {
        "name": "ResolveNamespace (CHARACTER, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "ResolveNamespace (CHARACTER, CHARACTER, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "add_ReflectionOnlyNamespaceResolve (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ReflectionOnlyNamespaceResolve (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DesignerNamespaceResolve (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DesignerNamespaceResolve (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.Expando.IExpando",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddField (CHARACTER)",
        "returnType": "System.Reflection.FieldInfo"
      },
      {
        "name": "AddProperty (CHARACTER)",
        "returnType": "System.Reflection.PropertyInfo"
      },
      {
        "name": "AddMethod (CHARACTER, System.Delegate)",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "RemoveMember (System.Reflection.MemberInfo)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.BIND_OPTS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IBindCtx",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "RegisterObjectBound (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RevokeObjectBound (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseBoundObjects ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetBindOptions (System.Runtime.InteropServices.ComTypes.BIND_OPTS&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetBindOptions (System.Runtime.InteropServices.ComTypes.BIND_OPTS&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRunningObjectTable (output System.Runtime.InteropServices.ComTypes.IRunningObjectTable&)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterObjectParam (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectParam (CHARACTER, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "EnumObjectParam (output System.Runtime.InteropServices.ComTypes.IEnumString&)",
        "returnType": "System.Void"
      },
      {
        "name": "RevokeObjectParam (CHARACTER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IConnectionPointContainer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "EnumConnectionPoints (output System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints&)",
        "returnType": "System.Void"
      },
      {
        "name": "FindConnectionPoint (System.Guid&, output System.Runtime.InteropServices.ComTypes.IConnectionPoint&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IConnectionPoint",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetConnectionInterface (output System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetConnectionPointContainer (output System.Runtime.InteropServices.ComTypes.IConnectionPointContainer&)",
        "returnType": "System.Void"
      },
      {
        "name": "Advise (System.Object, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "Unadvise (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "EnumConnections (output System.Runtime.InteropServices.ComTypes.IEnumConnections&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IEnumMoniker",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.ComTypes.IMoniker[], System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.ComTypes.IEnumMoniker&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.CONNECTDATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IEnumConnections",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.ComTypes.CONNECTDATA[], System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.ComTypes.IEnumConnections&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.ComTypes.IConnectionPoint[], System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IEnumString",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.String[], System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.ComTypes.IEnumString&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IEnumVARIANT",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Object[], System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Runtime.InteropServices.ComTypes.IEnumVARIANT"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.FILETIME",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IMoniker",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetClassID (output System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsDirty ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Load (System.Runtime.InteropServices.ComTypes.IStream)",
        "returnType": "System.Void"
      },
      {
        "name": "Save (System.Runtime.InteropServices.ComTypes.IStream, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSizeMax (output System.Int64&)",
        "returnType": "System.Void"
      },
      {
        "name": "BindToObject (System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "BindToStorage (System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "Reduce (System.Runtime.InteropServices.ComTypes.IBindCtx, INTEGER, System.Runtime.InteropServices.ComTypes.IMoniker&, output System.Runtime.InteropServices.ComTypes.IMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "ComposeWith (System.Runtime.InteropServices.ComTypes.IMoniker, LOGICAL, output System.Runtime.InteropServices.ComTypes.IMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "Enum (LOGICAL, output System.Runtime.InteropServices.ComTypes.IEnumMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsEqual (System.Runtime.InteropServices.ComTypes.IMoniker)",
        "returnType": "INTEGER"
      },
      {
        "name": "Hash (output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsRunning (System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.Runtime.InteropServices.ComTypes.IMoniker)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTimeOfLastChange (System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, output System.Runtime.InteropServices.ComTypes.FILETIME&)",
        "returnType": "System.Void"
      },
      {
        "name": "Inverse (output System.Runtime.InteropServices.ComTypes.IMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "CommonPrefixWith (System.Runtime.InteropServices.ComTypes.IMoniker, output System.Runtime.InteropServices.ComTypes.IMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "RelativePathTo (System.Runtime.InteropServices.ComTypes.IMoniker, output System.Runtime.InteropServices.ComTypes.IMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDisplayName (System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "ParseDisplayName (System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, CHARACTER, output System.Int32&, output System.Runtime.InteropServices.ComTypes.IMoniker&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsSystemMoniker (output System.Int32&)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IPersistFile",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetClassID (output System.Guid&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsDirty ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Load (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Save (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "SaveCompleted (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCurFile (output System.String&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IRunningObjectTable",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Register (INTEGER, System.Object, System.Runtime.InteropServices.ComTypes.IMoniker)",
        "returnType": "INTEGER"
      },
      {
        "name": "Revoke (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsRunning (System.Runtime.InteropServices.ComTypes.IMoniker)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetObject (System.Runtime.InteropServices.ComTypes.IMoniker, output System.Object&)",
        "returnType": "INTEGER"
      },
      {
        "name": "NoteChangeTime (INTEGER, System.Runtime.InteropServices.ComTypes.FILETIME&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTimeOfLastChange (System.Runtime.InteropServices.ComTypes.IMoniker, output System.Runtime.InteropServices.ComTypes.FILETIME&)",
        "returnType": "INTEGER"
      },
      {
        "name": "EnumRunning (output System.Runtime.InteropServices.ComTypes.IEnumMoniker&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.STATSTG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IStream",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Read (output MEMPTR, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSize (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.Runtime.InteropServices.ComTypes.IStream, INT64, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "Commit (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Revert ()",
        "returnType": "System.Void"
      },
      {
        "name": "LockRegion (INT64, INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "UnlockRegion (INT64, INT64, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Stat (output System.Runtime.InteropServices.ComTypes.STATSTG&, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.ComTypes.IStream&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.DESCKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.BINDPTR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.ITypeComp",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Bind (CHARACTER, INTEGER, INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo&, output System.Runtime.InteropServices.ComTypes.DESCKIND&, output System.Runtime.InteropServices.ComTypes.BINDPTR&)",
        "returnType": "System.Void"
      },
      {
        "name": "BindType (CHARACTER, INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo&, output System.Runtime.InteropServices.ComTypes.ITypeComp&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.TYPEKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.TYPEFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.TYPEATTR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.FUNCDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.IDLFLAG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.IDLDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.PARAMFLAG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.PARAMDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.TYPEDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.ELEMDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.VARKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.VARDESC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.DISPPARAMS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.EXCEPINFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.FUNCKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.INVOKEKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.CALLCONV",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.FUNCFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.VARFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.ITypeInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeAttr (output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeComp (output System.Runtime.InteropServices.ComTypes.ITypeComp&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFuncDesc (INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetVarDesc (INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNames (INTEGER, output System.String[], INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRefTypeOfImplType (INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetImplTypeFlags (INTEGER, output System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.String[], INTEGER, output System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object, INTEGER, INTEGER, System.Runtime.InteropServices.ComTypes.DISPPARAMS&, System.IntPtr, System.IntPtr, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation (INTEGER, output System.String&, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDllEntry (INTEGER, System.Runtime.InteropServices.ComTypes.INVOKEKIND, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRefTypeInfo (INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "AddressOfMember (INTEGER, System.Runtime.InteropServices.ComTypes.INVOKEKIND, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateInstance (System.Object, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetMops (INTEGER, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetContainingTypeLib (output System.Runtime.InteropServices.ComTypes.ITypeLib&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseTypeAttr (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseFuncDesc (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseVarDesc (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.SYSKIND",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.LIBFLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.TYPELIBATTR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.ITypeLib",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTypeInfo (INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfoType (INTEGER, output System.Runtime.InteropServices.ComTypes.TYPEKIND&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfoOfGuid (System.Guid&, output System.Runtime.InteropServices.ComTypes.ITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLibAttr (output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeComp (output System.Runtime.InteropServices.ComTypes.ITypeComp&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation (INTEGER, output System.String&, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsName (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FindName (CHARACTER, INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo[], output System.Int32[], System.Int16&)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseTLibAttr (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.ITypeLib2",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetTypeInfo (INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfoType (INTEGER, output System.Runtime.InteropServices.ComTypes.TYPEKIND&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfoOfGuid (System.Guid&, output System.Runtime.InteropServices.ComTypes.ITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLibAttr (output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeComp (output System.Runtime.InteropServices.ComTypes.ITypeComp&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation (INTEGER, output System.String&, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "IsName (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FindName (CHARACTER, INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo[], output System.Int32[], System.Int16&)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseTLibAttr (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCustData (System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation2 (INTEGER, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetLibStatistics (System.IntPtr, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAllCustData (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.ITypeInfo2",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeAttr (output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeComp (output System.Runtime.InteropServices.ComTypes.ITypeComp&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFuncDesc (INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetVarDesc (INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetNames (INTEGER, output System.String[], INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRefTypeOfImplType (INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetImplTypeFlags (INTEGER, output System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.String[], INTEGER, output System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object, INTEGER, INTEGER, System.Runtime.InteropServices.ComTypes.DISPPARAMS&, System.IntPtr, System.IntPtr, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation (INTEGER, output System.String&, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDllEntry (INTEGER, System.Runtime.InteropServices.ComTypes.INVOKEKIND, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRefTypeInfo (INTEGER, output System.Runtime.InteropServices.ComTypes.ITypeInfo&)",
        "returnType": "System.Void"
      },
      {
        "name": "AddressOfMember (INTEGER, System.Runtime.InteropServices.ComTypes.INVOKEKIND, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateInstance (System.Object, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetMops (INTEGER, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetContainingTypeLib (output System.Runtime.InteropServices.ComTypes.ITypeLib&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseTypeAttr (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseFuncDesc (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "ReleaseVarDesc (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeKind (output System.Runtime.InteropServices.ComTypes.TYPEKIND&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeFlags (output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFuncIndexOfMemId (INTEGER, System.Runtime.InteropServices.ComTypes.INVOKEKIND, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetVarIndexOfMemId (INTEGER, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCustData (System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFuncCustData (INTEGER, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetParamCustData (INTEGER, INTEGER, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetVarCustData (INTEGER, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetImplTypeCustData (INTEGER, System.Guid&, output System.Object&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDocumentation2 (INTEGER, output System.String&, output System.Int32&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAllCustData (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAllFuncCustData (INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAllParamCustData (INTEGER, INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAllVarCustData (INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAllImplTypeCustData (INTEGER, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Hosting.ApplicationActivator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateInstance (System.ActivationContext)",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      },
      {
        "name": "CreateInstance (System.ActivationContext, System.String[])",
        "returnType": "System.Runtime.Remoting.ObjectHandle"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Policy.EvidenceBase",
      "System.Object"
    ],
    "name": "System.Runtime.Hosting.ActivationArguments",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Security.Policy.EvidenceBase"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.StringBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "EnsureCapacity (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (CHARACTER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (CHARACTER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "CopyTo (INTEGER, System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Insert (INTEGER, CHARACTER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Remove (INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (CHARACTER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INT64)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (DECIMAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (DECIMAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (DECIMAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (INT64)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (System.Char[])",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, CHARACTER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, CHARACTER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, System.Char[])",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INT64)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, DECIMAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, DECIMAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, DECIMAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, INT64)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (CHARACTER, System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (System.IFormatProvider, CHARACTER, System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (System.IFormatProvider, CHARACTER, System.Object, System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (System.IFormatProvider, CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Equals (System.Text.StringBuilder)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (System.Char*, INTEGER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendLine ()",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Append (LOGICAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "Insert (INTEGER, LOGICAL)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendLine (CHARACTER)",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (CHARACTER, System.Object[])",
        "returnType": "System.Text.StringBuilder"
      },
      {
        "name": "AppendFormat (System.IFormatProvider, CHARACTER, System.Object[])",
        "returnType": "System.Text.StringBuilder"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.Encoding",
      "System.Object"
    ],
    "name": "System.Text.ASCIIEncoding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBytes (CHARACTER, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxByteCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxCharCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDecoder ()",
        "returnType": "System.Text.Decoder"
      },
      {
        "name": "GetEncoder ()",
        "returnType": "System.Text.Encoder"
      },
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetString (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.Decoder",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Convert (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER, INTEGER, LOGICAL, output System.Int32&, output System.Int32&, output System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "Convert (System.Byte*, INTEGER, System.Char*, INTEGER, LOGICAL, output System.Int32&, output System.Int32&, output System.Boolean&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderFallback",
      "System.Object"
    ],
    "name": "System.Text.DecoderExceptionFallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateFallbackBuffer ()",
        "returnType": "System.Text.DecoderFallbackBuffer"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderFallbackBuffer",
      "System.Object"
    ],
    "name": "System.Text.DecoderExceptionFallbackBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Fallback (MEMPTR, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNextChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "MovePrevious ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Text.DecoderFallbackException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.DecoderFallback",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateFallbackBuffer ()",
        "returnType": "System.Text.DecoderFallbackBuffer"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.DecoderFallbackBuffer",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Fallback (MEMPTR, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNextChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "MovePrevious ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderFallback",
      "System.Object"
    ],
    "name": "System.Text.DecoderReplacementFallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateFallbackBuffer ()",
        "returnType": "System.Text.DecoderFallbackBuffer"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderFallbackBuffer",
      "System.Object"
    ],
    "name": "System.Text.DecoderReplacementFallbackBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Fallback (MEMPTR, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNextChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "MovePrevious ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.Encoder",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "Convert (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER, INTEGER, LOGICAL, output System.Int32&, output System.Int32&, output System.Boolean&)",
        "returnType": "System.Void"
      },
      {
        "name": "Convert (System.Char*, INTEGER, System.Byte*, INTEGER, LOGICAL, output System.Int32&, output System.Int32&, output System.Boolean&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.EncoderFallback",
      "System.Object"
    ],
    "name": "System.Text.EncoderExceptionFallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateFallbackBuffer ()",
        "returnType": "System.Text.EncoderFallbackBuffer"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.EncoderFallbackBuffer",
      "System.Object"
    ],
    "name": "System.Text.EncoderExceptionFallbackBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Fallback (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Fallback (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNextChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "MovePrevious ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Text.EncoderFallbackException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnknownSurrogate ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.EncoderFallback",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateFallbackBuffer ()",
        "returnType": "System.Text.EncoderFallbackBuffer"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.EncoderFallbackBuffer",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Fallback (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Fallback (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNextChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "MovePrevious ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.EncoderFallback",
      "System.Object"
    ],
    "name": "System.Text.EncoderReplacementFallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateFallbackBuffer ()",
        "returnType": "System.Text.EncoderFallbackBuffer"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.EncoderFallbackBuffer",
      "System.Object"
    ],
    "name": "System.Text.EncoderReplacementFallbackBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Fallback (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Fallback (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNextChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "MovePrevious ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.Encoding",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetPreamble ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetByteCount (System.Char[])",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[])",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetBytes (CHARACTER, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR)",
        "returnType": "System.Char[]"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Char[]"
      },
      {
        "name": "IsAlwaysNormalized ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsAlwaysNormalized (System.Text.NormalizationForm)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetDecoder ()",
        "returnType": "System.Text.Decoder"
      },
      {
        "name": "GetEncoder ()",
        "returnType": "System.Text.Encoder"
      },
      {
        "name": "GetString (MEMPTR)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetString (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxByteCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxCharCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetString (System.Byte*, INTEGER)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Convert (System.Text.Encoding, System.Text.Encoding, MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetEncoding (INTEGER)",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "GetEncoding (INTEGER, System.Text.EncoderFallback, System.Text.DecoderFallback)",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "GetEncoding (CHARACTER)",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "GetEncoding (CHARACTER, System.Text.EncoderFallback, System.Text.DecoderFallback)",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "GetEncodings ()",
        "returnType": "System.Text.EncodingInfo[]"
      },
      {
        "name": "Convert (System.Text.Encoding, System.Text.Encoding, MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "RegisterProvider (System.Text.EncodingProvider)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.EncodingInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEncoding ()",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.EncodingProvider",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEncoding (CHARACTER, System.Text.EncoderFallback, System.Text.DecoderFallback)",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "GetEncoding (INTEGER, System.Text.EncoderFallback, System.Text.DecoderFallback)",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "GetEncoding (CHARACTER)",
        "returnType": "System.Text.Encoding"
      },
      {
        "name": "GetEncoding (INTEGER)",
        "returnType": "System.Text.Encoding"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Text.NormalizationForm",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Text.Encoding",
      "System.Object"
    ],
    "name": "System.Text.UnicodeEncoding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBytes (CHARACTER, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEncoder ()",
        "returnType": "System.Text.Encoder"
      },
      {
        "name": "GetDecoder ()",
        "returnType": "System.Text.Decoder"
      },
      {
        "name": "GetPreamble ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetMaxByteCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxCharCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetString (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.Encoding",
      "System.Object"
    ],
    "name": "System.Text.UTF7Encoding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDecoder ()",
        "returnType": "System.Text.Decoder"
      },
      {
        "name": "GetEncoder ()",
        "returnType": "System.Text.Encoder"
      },
      {
        "name": "GetMaxByteCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxCharCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (CHARACTER, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetString (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.Encoding",
      "System.Object"
    ],
    "name": "System.Text.UTF8Encoding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (CHARACTER, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetString (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetByteCount (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDecoder ()",
        "returnType": "System.Text.Decoder"
      },
      {
        "name": "GetEncoder ()",
        "returnType": "System.Text.Encoder"
      },
      {
        "name": "GetMaxByteCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxCharCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetPreamble ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.Encoding",
      "System.Object"
    ],
    "name": "System.Text.UTF32Encoding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetByteCount (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDecoder ()",
        "returnType": "System.Text.Decoder"
      },
      {
        "name": "GetEncoder ()",
        "returnType": "System.Text.Encoder"
      },
      {
        "name": "GetMaxByteCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMaxCharCount (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetPreamble ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (CHARACTER, INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetString (MEMPTR, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+SystemTime",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+TimeZoneInformation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+DynamicTimeZoneInformation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+RegistryTimeZoneInformation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+OSVERSIONINFO",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+OSVERSIONINFOEX",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+SYSTEM_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+FILE_TIME",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToTicks ()",
        "returnType": "INT64"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+KERB_S4U_LOGON",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LSA_OBJECT_ATTRIBUTES",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+UNICODE_STRING",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LSA_TRANSLATED_NAME",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LSA_TRANSLATED_SID",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LSA_TRANSLATED_SID2",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LSA_TRUST_INFORMATION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LSA_REFERENCED_DOMAIN_LIST",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LUID",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+LUID_AND_ATTRIBUTES",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+QUOTA_LIMITS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+SECURITY_LOGON_SESSION_DATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+SID_AND_ATTRIBUTES",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+TOKEN_GROUPS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+TOKEN_PRIMARY_GROUP",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+TOKEN_SOURCE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+TOKEN_STATISTICS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+TOKEN_USER",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+MEMORYSTATUSEX",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+MEMORY_BASIC_INFORMATION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+NlsVersionInfoEx",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+WIN32_FIND_DATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+COORD",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+SMALL_RECT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+KeyEventRecord",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+InputRecord",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+Color",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CHAR_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+USEROBJECTFLAGS",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+SECURITY_IMPERSONATION_LEVEL",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTES_INFORMATION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CLAIM_VALUES_ATTRIBUTE_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+RTL_OSVERSIONINFOEX",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+ProcessorArchitecture",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.RegistryKey+RegistryInternalCheck",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.AppContext+SwitchValueState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Array+FunctorComparer`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (?, ?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Array+SorterObjectArray",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Array+SorterGenericArray",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Array+SZArrayEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Array+ArrayEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.SZArrayHelper+SZGenericArrayEnumerator`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ArraySegment`1+ArraySegmentEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Exception+__RestrictedErrorObject",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Exception+ExceptionMessageKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DateTime+FullSystemTime",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.AppDomainInitializerInfo+ItemInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.AppDomain+APPX_FLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.AppDomain+NamespaceResolverForIntrospection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ResolveNamespace (System.Object, System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.AppDomain+EvidenceCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.AppDomain+CAPTCASearcher",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.AppDomain+InitState",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.AppDomainSetup+LoaderInformation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ActivationContext+ContextForm",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ActivationContext+ApplicationState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ActivationContext+ApplicationStateDisposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Buffer+Block16",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Buffer+Block64",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.BaseConfigHandler+NotifyEventCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.ConfigEvents)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.ConfigEvents, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.BaseConfigHandler+BeginChildrenCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.BaseConfigHandler+EndChildrenCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (INTEGER, INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.BaseConfigHandler+ErrorCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.BaseConfigHandler+CreateNodeCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.BaseConfigHandler+CreateAttributeCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (INTEGER, System.ConfigNodeSubType, System.ConfigNodeType, INTEGER, CHARACTER, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Console+ControlKeyState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Console+ControlCHooker",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Console+ControlCDelegateData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.DefaultBinder+BinderState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.DefaultBinder+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.DelegateSerializationHolder+DelegateEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Enum+ParseFailureKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Enum+EnumResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Enum+ValuesAndNames",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Environment+ResourceHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Environment+SpecialFolderOption",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Environment+SpecialFolder",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.GC+StartNoGCRegionStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.GC+EndNoGCRegionStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Guid+GuidStyles",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Guid+GuidParseThrowStyle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Guid+ParseFailureKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Guid+GuidResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Lazy`1+Boxed",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Lazy`1+LazyInternalExceptionHolder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Lazy`1+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Mda+StreamWriterBufferedDataLost",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Number+NumberBuffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "PackForNative ()",
        "returnType": "System.Byte*"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeType+MemberListType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeType+ListBuilder`1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "CopyTo (System.Object[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.RuntimeType+RuntimeTypeCache",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.RuntimeType+ConstructorInfoComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Reflection.ConstructorInfo, System.Reflection.ConstructorInfo)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.RuntimeType+ActivatorCacheEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.RuntimeType+ActivatorCache",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeType+DispatchWrapperType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeTypeHandle+IntroducedMethodEnumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.RuntimeTypeHandle+IntroducedMethodEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Signature+MdSigCallingConvention",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Resolver+CORINFO_EH_CLAUSE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+TimeZoneInfoResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+CachedData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetCorrespondingKind (System.TimeZoneInfo)",
        "returnType": "System.DateTimeKind"
      },
      {
        "name": "GetOneYearLocalFromUtc (INTEGER)",
        "returnType": "System.TimeZoneInfo+OffsetAndRule"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+OffsetAndRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+AdjustmentRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.TimeZoneInfo+AdjustmentRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateAdjustmentRule (DATETIME, DATETIME, System.TimeSpan, System.TimeZoneInfo+TransitionTime, System.TimeZoneInfo+TransitionTime)",
        "returnType": "System.TimeZoneInfo+AdjustmentRule"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+TransitionTime",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.TimeZoneInfo+TransitionTime)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.TimeZoneInfo+TransitionTime, System.TimeZoneInfo+TransitionTime)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.TimeZoneInfo+TransitionTime, System.TimeZoneInfo+TransitionTime)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateFixedDateRule (DATETIME, INTEGER, INTEGER)",
        "returnType": "System.TimeZoneInfo+TransitionTime"
      },
      {
        "name": "CreateFloatingDateRule (DATETIME, INTEGER, INTEGER, System.DayOfWeek)",
        "returnType": "System.TimeZoneInfo+TransitionTime"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+StringSerializer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetDeserializedTimeZoneInfo (CHARACTER)",
        "returnType": "System.TimeZoneInfo"
      },
      {
        "name": "GetSerializedString (System.TimeZoneInfo)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+TimeZoneInfoComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Version+ParseFailureKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Version+VersionResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.DateTimeParse+MatchNumberDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.__DTString&, INTEGER, output System.Int32&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (System.__DTString&, INTEGER, output System.Int32&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.__DTString&, output System.Int32&, System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DateTimeParse+DTT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DateTimeParse+TM",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.DateTimeParse+DS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.BufferedStream+<FlushAsyncInternal>d__38",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.BufferedStream+<FlushWriteAsync>d__42",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.BufferedStream+<ReadFromUnderlyingStreamAsync>d__51",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.BufferedStream+<WriteToUnderlyingStreamAsync>d__60",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Directory+SearchData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.FileStreamAsyncResult+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.IO.FileStream+FileStreamReadWriteTask`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.FileStream+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Stream+ReadWriteParameters",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.Task`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.IO.Stream+ReadWriteTask",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.Stream+NullStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Stream+SynchronousAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.Stream+SyncStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Stream+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Stream+<CopyToAsyncInternal>d__27",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.StreamReader",
      "System.IO.TextReader",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.StreamReader+NullStreamReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Peek ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadToEnd ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamReader+<ReadLineAsyncInternal>d__60",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamReader+<ReadToEndAsyncInternal>d__62",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamReader+<ReadAsyncInternal>d__64",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamReader+<ReadBufferAsync>d__97",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.StreamWriter+MdaHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamWriter+<WriteAsyncInternal>d__53",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamWriter+<WriteAsyncInternal>d__55",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamWriter+<WriteAsyncInternal>d__57",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.StreamWriter+<FlushAsyncInternal>d__68",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.TextReader",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.TextReader+NullTextReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Read (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.TextReader",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.TextReader+SyncTextReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Peek ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (output System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadBlock (output System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadToEnd ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadLineAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadToEndAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadBlockAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.TextReader+<ReadToEndAsync>d__14",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.TextReader+<ReadBlockAsyncInternal>d__18",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.TextReader+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.TextWriter",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.TextWriter+NullTextWriter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine ()",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.TextWriter",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.TextWriter+SyncTextWriter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine ()",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteLineAsync (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.TextWriter+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Security.SecurityElement+ToStringHelperFunc",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.PermissionSet+IsSubsetOfType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.SecurityContext+Reader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DangerousGetRawSecurityContext ()",
        "returnType": "System.Security.SecurityContext"
      },
      {
        "name": "IsSame (System.Security.SecurityContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSame (System.Security.SecurityContext+Reader)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsFlowSuppressed (System.Security.SecurityContextDisableFlow)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.SecurityContext+SecurityContextRunData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CommonAcl+AF",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CommonAcl+PM",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.CommonAcl+ComparisonResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, CHARACTER, System.Runtime.InteropServices.SafeHandle, System.Object)",
        "returnType": "System.Exception"
      },
      {
        "name": "BeginInvoke (INTEGER, CHARACTER, System.Runtime.InteropServices.SafeHandle, System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Exception"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.AccessControl.Privilege+TlsContents",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "IncrementReferenceCount ()",
        "returnType": "System.Void"
      },
      {
        "name": "DecrementReferenceCount ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+AlgorithmClass",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+AlgorithmType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+AlgorithmSubId",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+AlgorithmID",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+CryptAcquireContextFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+ErrorCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+HashProperty",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+KeyGenerationFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+KeyProperty",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+KeySpec",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+ProviderNames",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+ProviderType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CapiNative+UnsafeNativeMethods",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptoStream+HopToThreadPoolAwaitable",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAwaiter ()",
        "returnType": "System.Security.Cryptography.CryptoStream+HopToThreadPoolAwaitable"
      },
      {
        "name": "OnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResult ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptoStream+<ReadAsyncInternal>d__36",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CryptoStream+<WriteAsyncInternal>d__39",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACSHA256+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACSHA384+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.HMACSHA512+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.IterationCountLimitEnforcer+Impl",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.AsnDecoder+BitStringCopyAction",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Security.Cryptography.X509Certificates.ReadOnlySpan, INTEGER, System.Security.Cryptography.X509Certificates.Span)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Security.Cryptography.X509Certificates.ReadOnlySpan, INTEGER, System.Security.Cryptography.X509Certificates.Span, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.AsnDecoder+ParseFrame",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.AsnDecoder+LengthDecodeStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.AsnDecoder+LengthValidity",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.KdfWorkLimiter+State",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Claims.Claim+SerializationMask",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimsIdentity+SerializationMask",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimsIdentity+<get_Claims>d__51",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimsPrincipal+SerializationMask",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.ClaimsPrincipal+<get_Claims>d__37",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.RoleClaimProvider+<get_Claims>d__5",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsIdentity+<get_Claims>d__95",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsPrincipal+<get_UserClaims>d__11",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Principal.WindowsPrincipal+<get_DeviceClaims>d__13",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence+DuplicateEvidenceAction",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence+EvidenceLockHolder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence+EvidenceUpgradeLockHolder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence+RawEvidenceEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence+EvidenceEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Util.Tokenizer+TokenSource",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Util.Tokenizer+ByteTokenEncoding",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Util.Tokenizer+StringMaker",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MakeString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "name": "System.Security.Util.Tokenizer+ITokenReader",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Util.Tokenizer+StreamTokenReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Read ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceFallbackManager+<GetEnumerator>d__5",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceManager+CultureNameResourceSetPair",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceManager+ResourceManagerMediator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Serialization.SerializationBinder",
      "System.Object"
    ],
    "name": "System.Resources.ResourceReader+TypeLimitingDeserializationBinder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BindToType (CHARACTER, CHARACTER)",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceReader+ResourceEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceWriter+PrecannedResource",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Resources.ResourceWriter+StreamWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CharUnicodeInfo+UnicodeDataHeader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CharUnicodeInfo+DigitValues",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.DateTimeFormatInfoScanner+FoundDatePattern",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.HebrewCalendar+__DateBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.UmAlQuraCalendar+DateMapping",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CalendricalCalculationsHelper+CorrectionAlgorithm",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.CalendricalCalculationsHelper+EphemerisCorrectionAlgorithmMap",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TextInfo+Tristate",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanFormat+Pattern",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanFormat+FormatLiterals",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+TimeSpanThrowStyle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+ParseFailureKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+TimeSpanStandardStyles",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+TTT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+TimeSpanToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsInvalidNumber (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+TimeSpanTokenizer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+TimeSpanRawInfo",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+TimeSpanResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.TimeSpanParse+StringParser",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.HebrewNumber+HebrewToken",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Globalization.HebrewNumber+HebrewValue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Globalization.HebrewNumber+HS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Debugger+CrossThreadDependencyNotification",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.DebuggableAttribute+DebuggingModes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Diagnostics.StackFrameHelper+GetSourceLineInfoDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (CHARACTER, System.IntPtr, INTEGER, System.IntPtr, INTEGER, INTEGER, INTEGER, output System.String&, output System.Int32&, output System.Int32&)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (CHARACTER, System.IntPtr, INTEGER, System.IntPtr, INTEGER, INTEGER, INTEGER, output System.String&, output System.Int32&, output System.Int32&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (output System.String&, output System.Int32&, output System.Int32&, System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.StackTrace+TraceFormat",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ActivityTracker+ActivityInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanBeOrphan ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Path (System.Diagnostics.Tracing.ActivityTracker+ActivityInfo)",
        "returnType": "CHARACTER"
      },
      {
        "name": "LiveActivities (System.Diagnostics.Tracing.ActivityTracker+ActivityInfo)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventProvider+EventData",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventProvider+SessionInfo",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventProvider+WriteEventErrorCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventProvider+<>c__DisplayClass40_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSource+EventData",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSource+Sha1ForNonSecretPurposes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Start ()",
        "returnType": "System.Void"
      },
      {
        "name": "Append (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Append (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Finish (MEMPTR)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.Tracing.EventProvider",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSource+OverideEventProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSource+EventMetadata",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ActivityFilter+<GetFilterAsTuple>d__7",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ActivityFilter+<>c__DisplayClass11_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ActivityFilter+<>c__DisplayClass13_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EtwSession+<>c__DisplayClass1_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EtwSession+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ManifestBuilder+ChannelInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ManifestBuilder+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ManifestBuilder+<>c__DisplayClass28_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ManifestEnvelope+ManifestFormats",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.FrameworkEventSource+Keywords",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.FrameworkEventSource+Tasks",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.FrameworkEventSource+Opcodes",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EnumHelper`1+Transformer`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EnumHelper`1+Caster`1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventPayload+<GetEnumerator>d__17",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.EventSourceActivity+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.StructPropertyWriter`2+Getter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (?, System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ClassPropertyWriter`2+Getter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.TraceLoggingMetadataCollector+Impl",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddScalar (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddNonscalar ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginBuffered ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndBuffered ()",
        "returnType": "System.Void"
      },
      {
        "name": "Encode (MEMPTR)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.Queue",
      "System.Object"
    ],
    "name": "System.Collections.Queue+SynchronizedQueue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Enqueue (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Dequeue ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Peek ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Queue+QueueEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Queue+QueueDebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.ArrayList",
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+IListWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "LastIndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "ToArray (System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (INTEGER, INTEGER, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "CopyTo (INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator (INTEGER, INTEGER)",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "RemoveRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRange (INTEGER, INTEGER)",
        "returnType": "System.Collections.ArrayList"
      },
      {
        "name": "Sort (INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ArrayList",
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+SyncArrayList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "BinarySearch (INTEGER, INTEGER, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetEnumerator (INTEGER, INTEGER)",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "LastIndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "GetRange (INTEGER, INTEGER)",
        "returnType": "System.Collections.ArrayList"
      },
      {
        "name": "Sort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "ToArray (System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+SyncIList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+FixedSizeList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ArrayList",
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+FixedSizeArrayList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (INTEGER, INTEGER, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetEnumerator (INTEGER, INTEGER)",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "LastIndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "ToArray (System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetRange (INTEGER, INTEGER)",
        "returnType": "System.Collections.ArrayList"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+ReadOnlyList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ArrayList",
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+ReadOnlyArrayList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (INTEGER, INTEGER, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetEnumerator (INTEGER, INTEGER)",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "LastIndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "ToArray (System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetRange (INTEGER, INTEGER)",
        "returnType": "System.Collections.ArrayList"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+ArrayListEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ArrayList",
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+Range",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "InsertRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "LastIndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LastIndexOf (System.Object, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetRange (INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "ToArray (System.Type)",
        "returnType": "MEMPTR"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      },
      {
        "name": "BinarySearch (INTEGER, INTEGER, System.Object, System.Collections.IComparer)",
        "returnType": "INTEGER"
      },
      {
        "name": "CopyTo (INTEGER, MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator (INTEGER, INTEGER)",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetRange (INTEGER, INTEGER)",
        "returnType": "System.Collections.ArrayList"
      },
      {
        "name": "RemoveRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Reverse (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort (INTEGER, INTEGER, System.Collections.IComparer)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+ArrayListEnumeratorSimple",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+ArrayListDebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.BitArray+BitArrayEnumeratorSimple",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.Stack",
      "System.Object"
    ],
    "name": "System.Collections.Stack+SyncStack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Push (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Pop ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Peek ()",
        "returnType": "System.Object"
      },
      {
        "name": "ToArray ()",
        "returnType": "System.Object[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Stack+StackEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Stack+StackDebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ListDictionaryInternal+NodeEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ListDictionaryInternal+NodeKeyValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ListDictionaryInternal+DictionaryNode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.EmptyReadOnlyDictionaryInternal+NodeEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Hashtable+bucket",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Hashtable+KeyCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Hashtable+ValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.Hashtable",
      "System.Object"
    ],
    "name": "System.Collections.Hashtable+SyncHashtable",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsKey (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Hashtable+HashtableEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Hashtable+HashtableDebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.SortedList",
      "System.Object"
    ],
    "name": "System.Collections.SortedList+SyncSortedList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsKey (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetByIndex (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "GetKey (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetKeyList ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetValueList ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "IndexOfKey (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "IndexOfValue (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetByIndex (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "TrimToSize ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.SortedList+SortedListEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.SortedList+KeyList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.SortedList+ValueList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Insert (INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.SortedList+SortedListDebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentStack`1+Node",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentStack`1+<GetEnumerator>d__37",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentDictionary`2+Tables",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentDictionary`2+Node",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentDictionary`2+DictionaryEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentDictionary`2+<GetEnumerator>d__34",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentQueue`1+Segment",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentQueue`1+<GetEnumerator>d__27",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.OrderablePartitioner`1+EnumerableDropIndices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.OrderablePartitioner`1+EnumeratorDropIndices",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionEnumerator_Abstract`2",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForIEnumerable`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetOrderablePartitions (INTEGER)",
        "returnType": "?"
      },
      {
        "name": "GetOrderableDynamicPartitions ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForIndexRange_Abstract`2",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetOrderablePartitions (INTEGER)",
        "returnType": "?"
      },
      {
        "name": "GetOrderableDynamicPartitions ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionEnumeratorForIndexRange_Abstract`2",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForIList`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForArray`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+StaticIndexRangePartitioner`2",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetOrderablePartitions (INTEGER)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+StaticIndexRangePartition`1",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+StaticIndexRangePartitionerForIList`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+StaticIndexRangePartitionForIList`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+StaticIndexRangePartitionerForArray`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+StaticIndexRangePartitionForArray`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+SharedInt",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+SharedBool",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+SharedLong",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+<CreateRanges>d__6",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+<CreateRanges>d__9",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ReadOnlyDictionary`2+DictionaryEnumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.Dictionary`2+Entry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.Dictionary`2+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.Dictionary`2+KeyCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.Dictionary`2+ValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.List`1+SynchronizedList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IndexOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.List`1+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocalValueMap+EmptyAsyncLocalValueMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Set (System.Threading.IAsyncLocal, System.Object, LOGICAL)",
        "returnType": "System.Threading.IAsyncLocalValueMap"
      },
      {
        "name": "TryGetValue (System.Threading.IAsyncLocal, output System.Object&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocalValueMap+OneElementAsyncLocalValueMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Set (System.Threading.IAsyncLocal, System.Object, LOGICAL)",
        "returnType": "System.Threading.IAsyncLocalValueMap"
      },
      {
        "name": "TryGetValue (System.Threading.IAsyncLocal, output System.Object&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocalValueMap+TwoElementAsyncLocalValueMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Set (System.Threading.IAsyncLocal, System.Object, LOGICAL)",
        "returnType": "System.Threading.IAsyncLocalValueMap"
      },
      {
        "name": "TryGetValue (System.Threading.IAsyncLocal, output System.Object&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocalValueMap+ThreeElementAsyncLocalValueMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Set (System.Threading.IAsyncLocal, System.Object, LOGICAL)",
        "returnType": "System.Threading.IAsyncLocalValueMap"
      },
      {
        "name": "TryGetValue (System.Threading.IAsyncLocal, output System.Object&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocalValueMap+MultiElementAsyncLocalValueMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Set (System.Threading.IAsyncLocal, System.Object, LOGICAL)",
        "returnType": "System.Threading.IAsyncLocalValueMap"
      },
      {
        "name": "TryGetValue (System.Threading.IAsyncLocal, output System.Object&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.Generic.Dictionary`2[[System.Threading.IAsyncLocal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Object"
    ],
    "name": "System.Threading.AsyncLocalValueMap+ManyElementAsyncLocalValueMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Set (System.Threading.IAsyncLocal, System.Object, LOGICAL)",
        "returnType": "System.Threading.IAsyncLocalValueMap"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.SynchronizationContext+WaitDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IntPtr[], LOGICAL, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginInvoke (System.IntPtr[], LOGICAL, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.CompressedStack+CompressedStackRunData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.ExecutionContext+Flags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.ExecutionContext+Reader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DangerousGetRawExecutionContext ()",
        "returnType": "System.Threading.ExecutionContext"
      },
      {
        "name": "IsDefaultFTContext (LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSame (System.Threading.ExecutionContext+Reader)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetLocalValue (System.Threading.IAsyncLocal)",
        "returnType": "System.Object"
      },
      {
        "name": "HasSameLocalValues (System.Threading.ExecutionContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "HasLocalValues ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.ExecutionContext+CaptureOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Mutex+MutexTryCodeHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Mutex+MutexCleanupInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Overlapped+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.PinnableBufferCache+<>c__DisplayClass0_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadPoolWorkQueue+SparseArray`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadPoolWorkQueue+WorkStealingQueue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "LocalPush (System.Threading.IThreadPoolWorkItem)",
        "returnType": "System.Void"
      },
      {
        "name": "LocalFindAndPop (System.Threading.IThreadPoolWorkItem)",
        "returnType": "LOGICAL"
      },
      {
        "name": "LocalPop (output System.Threading.IThreadPoolWorkItem&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TrySteal (output System.Threading.IThreadPoolWorkItem&, System.Boolean&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadPoolWorkQueue+QueueSegment",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUsedUp ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryEnqueue (System.Threading.IThreadPoolWorkItem)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryDequeue (output System.Threading.IThreadPoolWorkItem&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadPool+<EnumerateQueuedWorkItems>d__21",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Threading.TimerQueue+AppDomainTimerSafeHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.WaitHandle+OpenExistingResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.SpinLock+SystemThreading_SpinLockDebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.ThreadLocal`1+LinkedSlotVolatile",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadLocal`1+LinkedSlot",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadLocal`1+IdManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.ThreadLocal`1+FinalizationHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.Task`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.SemaphoreSlim+TaskNode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.SemaphoreSlim+<WaitUntilCountOrTimeoutAsync>d__31",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task`1+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1+FromAsyncTrimPromise`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1+<>c__DisplayClass32_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1+<>c__DisplayClass35_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1+<>c__DisplayClass38_0`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1+<>c__DisplayClass41_0`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1+<>c__DisplayClass44_0`3",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory`1+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.GenericDelegateCache`2+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+LoopTimer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "LimitExceeded ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+<>c__DisplayClass4_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+<>c__DisplayClass17_0`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+<>c__DisplayClass18_0`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+<>c__DisplayClass30_0`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+<>c__DisplayClass31_0`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Parallel+<>c__DisplayClass42_0`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+ContingentProperties",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.ManualResetEventSlim",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+SetOnInvokeMres",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Threading.Tasks.Task)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Threading.ManualResetEventSlim",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+SetOnCountdownMres",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Threading.Tasks.Task)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+DelayPromise",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+WhenAllPromise",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Threading.Tasks.Task)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+WhenAllPromise`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Threading.Tasks.Task)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+<>c__DisplayClass176_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.Task+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.UnwrapPromise`1+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation+<>c__DisplayClass6_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.AwaitTaskContinuation+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.Task`1[[System.Threading.Tasks.Task[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory+CompleteOnCountdownPromise",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Threading.Tasks.Task)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory+CompleteOnCountdownPromise`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Threading.Tasks.Task)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.Task`1[[System.Threading.Tasks.Task, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Threading.Tasks.Task",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskFactory+CompleteOnInvokePromise",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Threading.Tasks.Task)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskScheduler+SystemThreadingTasks_TaskSchedulerDebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ThreadPoolTaskScheduler+<FilterTasksFromWorkItems>d__7",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.AsyncCausalityTracer+Loggers",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.TaskCompletionSource`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+CompletionState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Threading.Tasks.TaskScheduler",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+ConcurrentExclusiveTaskScheduler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+DebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+ProcessingMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.SingleProducerSingleConsumerQueue`1+Segment",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.SingleProducerSingleConsumerQueue`1+SegmentState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.SingleProducerSingleConsumerQueue`1+SingleProducerSingleConsumerQueue_DebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.SingleProducerSingleConsumerQueue`1+<GetEnumerator>d__16",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TplEtwProvider+ForkJoinOperationType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TplEtwProvider+TaskWaitBehavior",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TplEtwProvider+Tasks",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TplEtwProvider+Keywords",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.BeginEndAwaitableAdapter+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskToApm+TaskWrapperAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.TaskToApm+<>c__DisplayClass3_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.StubHelpers.AsAnyMarshaler+BackPropAction",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.CerHashtable`2+Table",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.RuntimeAssembly+ASSEMBLY_FLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Associates+Attributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.MetadataEnumResult+<smallResult>e__FixedBuffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.TypeInfo+<GetDeclaredMethods>d__9",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.TypeInfo+<get_DeclaredNestedTypes>d__23",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.AssemblyBuilder+AssemblyBuilderLock",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.TypeNameBuilder+Format",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.DynamicResolver+DestroyScout",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.DynamicResolver+SecurityControlFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MethodInfo",
      "System.Reflection.MethodBase",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.DynamicMethod+RTDynamicMethod",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetBaseDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Reflection.Emit.MethodBuilder+SymCustomAttr",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.TypeBuilder+CustAttr",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Bake (System.Reflection.Emit.ModuleBuilder, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationStageComponent+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationStageComponent+Disposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+Disposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreApplicationReference+RefFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationPinDeployment+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationPinDeployment+Disposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+Disposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+Disposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+Disposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+Disposition",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.StoreOperationScavenge+OpFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+EnumAssembliesFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+EnumAssemblyFilesFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+EnumApplicationPrivateFiles",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+EnumAssemblyInstallReferenceFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Deployment.Internal.Isolation.Store+IPathLock",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+AssemblyPathLock",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+ApplicationPathLock",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+EnumCategoriesFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+EnumSubcategoriesFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+EnumCategoryInstancesFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.Store+GetPackagePropertyFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToIntPtr ()",
        "returnType": "System.IntPtr"
      }
    ],
    "staticMethods": [
      {
        "name": "Destroy (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSourceDefinitionAppid",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToIntPtr ()",
        "returnType": "System.IntPtr"
      }
    ],
    "staticMethods": [
      {
        "name": "Destroy (System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.GCSettings+SetLatencyModeStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.BinaryCompatibility+BinaryCompatibilityMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.MultitargetingHelpers+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.FormatterServices+<>c__DisplayClass9_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.Binary.BinaryFormatter+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.Binary.ObjectReader+TypeNAssembly",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Serialization.Formatters.Binary.ObjectReader+TopLevelAssemblyTypeResolver",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ResolveType (System.Reflection.Assembly, CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.RemotingConfigHandler+RemotingConfigInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.ServerIdentity+LastCalledType",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.SoapServices+XmlEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.SoapServices+XmlToFieldTypeMap",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddXmlElement (System.Type, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddXmlAttribute (System.Type, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFieldTypeAndNameFromXmlElement (CHARACTER, CHARACTER, output System.Type&, output System.String&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetFieldTypeAndNameFromXmlAttribute (CHARACTER, CHARACTER, output System.Type&, output System.String&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.RemotingTypeCachedData+LastCalledMethodClass",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.RemotingMethodCachedData+MethodCacheFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapTypeAttribute+ExplicitlySet",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Metadata.SoapFieldAttribute+ExplicitlySet",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Contexts.SynchronizedClientContextSink+AsyncReplySink",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessage"
      },
      {
        "name": "AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage, System.Runtime.Remoting.Messaging.IMessageSink)",
        "returnType": "System.Runtime.Remoting.Messaging.IMessageCtrl"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Lifetime.Lease+AsyncRenewal",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Runtime.Remoting.Lifetime.ILease)",
        "returnType": "System.TimeSpan"
      },
      {
        "name": "BeginInvoke (System.Runtime.Remoting.Lifetime.ILease, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.TimeSpan"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Lifetime.Lease+SponsorState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Lifetime.Lease+SponsorStateInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Lifetime.LeaseManager+SponsorInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.ClientChannelSinkStack+SinkStack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Channels.ServerChannelSinkStack+SinkStack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.Hashtable",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MethodCallMessageWrapper+MCMWrapperDictionary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.Hashtable",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper+MRMWrapperDictionary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.MessageSmuggler+SerializedArg",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.IllogicalCallContext+Reader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetData (CHARACTER)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Messaging.LogicalCallContext+Reader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Runtime.Remoting.Messaging.LogicalCallContext"
      },
      {
        "name": "GetData (CHARACTER)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ChannelEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ClientWellKnownEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ContextAttributeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+InteropXmlElementEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+CustomErrorsEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+InteropXmlTypeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+LifetimeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+PreLoadEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+RemoteAppEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+TypeEntry",
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ServerWellKnownEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+SinkProviderEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+TypeEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.RuntimeHelpers+TryCode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.RuntimeHelpers+CleanupCode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConditionalWeakTable`2+CreateValueCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (?)",
        "returnType": "?"
      },
      {
        "name": "BeginInvoke (?, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConditionalWeakTable`2+Entry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConditionalWeakTable`2+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncMethodBuilderCore+ContinuationWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c__DisplayClass4_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.TaskAwaiter+<>c__DisplayClass11_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "UnsafeOnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResult ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "UnsafeOnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResult ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "UnsafeOnCompleted (System.Action)",
        "returnType": "System.Void"
      },
      {
        "name": "GetResult ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.FormattableString",
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.FormattableStringFactory+ConcreteFormattableString",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetArguments ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetArgument (INTEGER)",
        "returnType": "System.Object"
      },
      {
        "name": "ToString (System.IFormatProvider)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.NativeBuffer+EmptySafeHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.TypeLibConverter+TypeResolveHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ReportEvent (System.Runtime.InteropServices.ImporterEventKind, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ResolveRef (System.Object)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "ResolveEvent (System.Object, System.ResolveEventArgs)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "ResolveAsmEvent (System.Object, System.ResolveEventArgs)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "ResolveROAsmEvent (System.Object, System.ResolveEventArgs)",
        "returnType": "System.Reflection.Assembly"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ELEMDESC+DESCUNION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.VARDESC+DESCUNION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComEventsMethod+DelegateWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object[])",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.NativeMethods+IDispatch",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypeInfoCount (output System.UInt32&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetTypeInfo (INTEGER, INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetIDsOfNames (System.Guid&, System.String[], INTEGER, INTEGER, output System.Int32[])",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (INTEGER, System.Guid&, INTEGER, System.Runtime.InteropServices.ComTypes.INVOKEKIND, System.Runtime.InteropServices.ComTypes.DISPPARAMS&, System.IntPtr, System.IntPtr, System.IntPtr)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.Variant+TypeUnion",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.Variant+Record",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.Variant+UnionTypes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ConstantSplittableMap`2+KeyValuePairComparator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (?, ?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ConstantSplittableMap`2+IKeyValuePairEnumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.EnumerableToBindableIterableAdapter+NonGenericToGenericEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.BindableIterableToEnumerableAdapter+NonGenericToGenericIterator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetMany (System.Object[])",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+EventRegistrationTokenList",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Push (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Pop (output System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Collections.Generic.List)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+ManagedEventRegistrationImpl",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProviderProxy`2+IVectorViewToIBindableVectorViewAdapter`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProviderProxy`2+IteratorOfTToIteratorAdapter`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.ELEMDESC+DESCUNION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.VARDESC+DESCUNION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Text.BaseCodePageEncoding+CodePageDataFileHeader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Text.BaseCodePageEncoding+CodePageIndex",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Text.BaseCodePageEncoding+CodePageHeader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.CodePageEncoding+Decoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.Encoder",
      "System.Object"
    ],
    "name": "System.Text.Encoding+DefaultEncoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      },
      {
        "name": "GetByteCount (System.Char[], INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetByteCount (System.Char*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char[], INTEGER, INTEGER, MEMPTR, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetBytes (System.Char*, INTEGER, System.Byte*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.Encoding+DefaultDecoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (MEMPTR, INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetCharCount (System.Byte*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (MEMPTR, INTEGER, INTEGER, System.Char[], INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetChars (System.Byte*, INTEGER, System.Char*, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.Encoding+EncodingCharBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.Encoding+EncodingByteBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Text.EncoderNLS",
      "System.Text.Encoder",
      "System.Object"
    ],
    "name": "System.Text.ISCIIEncoding+ISCIIEncoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.ISCIIEncoding+ISCIIDecoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.MLangCodePageEncoding+MLangEncoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.MLangCodePageEncoding+MLangDecoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRealObject (System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.DBCSCodePageEncoding+DBCSDecoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.UnicodeEncoding+Decoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.UTF7Encoding+Decoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.EncoderNLS",
      "System.Text.Encoder",
      "System.Object"
    ],
    "name": "System.Text.UTF7Encoding+Encoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderFallback",
      "System.Object"
    ],
    "name": "System.Text.UTF7Encoding+DecoderUTF7Fallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateFallbackBuffer ()",
        "returnType": "System.Text.DecoderFallbackBuffer"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderFallbackBuffer",
      "System.Object"
    ],
    "name": "System.Text.UTF7Encoding+DecoderUTF7FallbackBuffer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Fallback (MEMPTR, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNextChar ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "MovePrevious ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.UTF8Encoding",
      "System.Text.Encoding",
      "System.Object"
    ],
    "name": "System.Text.UTF8Encoding+UTF8EncodingSealed",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Text.EncoderNLS",
      "System.Text.Encoder",
      "System.Object"
    ],
    "name": "System.Text.UTF8Encoding+UTF8Encoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.UTF8Encoding+UTF8Decoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.UTF32Encoding+UTF32Decoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.GB18030Encoding+GB18030Decoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Text.ISO2022Encoding+ISO2022Modes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Text.EncoderNLS",
      "System.Text.Encoder",
      "System.Object"
    ],
    "name": "System.Text.ISO2022Encoding+ISO2022Encoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.DecoderNLS",
      "System.Text.Decoder",
      "System.Object"
    ],
    "name": "System.Text.ISO2022Encoding+ISO2022Decoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=5",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=9",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=11",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=14",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=38",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=40",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=44",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=48",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=52",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=72",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=76",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=82",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=84",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=88",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=108",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=120",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=126",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=128",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=130",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=288",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=392",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=440",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=640",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=878",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1208",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1440",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1472",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2224",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3200",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3456",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=4096",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=4540",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=5264",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=18128",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+WIN32_FIND_DATA+<_cFileName>e__FixedBuffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.Win32Native+WIN32_FIND_DATA+<_cAlternateFileName>e__FixedBuffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EtwEnableCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Guid&, INTEGER, INTEGER, INT64, INT64, Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_FILTER_DESCRIPTOR*, System.Void*)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Guid&, INTEGER, INTEGER, INT64, INT64, Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_FILTER_DESCRIPTOR*, System.Void*, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.Guid&, System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_FILTER_DESCRIPTOR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+ActivityControl",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_INFO_CLASS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_QUERY_INFO_CLASS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_GUID_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_PROVIDER_INSTANCE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_ENABLE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Environment+ResourceHelper+GetResourceStringUserData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeType+RuntimeTypeCache+CacheType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.RuntimeType+RuntimeTypeCache+Filter",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Match (System.Utf8String)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RequiresStringComparison ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "CaseSensitive ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashToMatch ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.RuntimeType+RuntimeTypeCache+MemberInfoCache`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.TimeZoneInfo+StringSerializer+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Stream+SynchronousAsyncResult+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence+EvidenceLockHolder+LockType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Policy.Evidence+EvidenceEnumerator+Category",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Tracing.ActivityTracker+ActivityInfo+NumberListCodes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ArrayList+IListWrapper+IListWrapperEnumWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ListDictionaryInternal+NodeKeyValueCollection+NodeKeyValueEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForIEnumerable`1+InternalPartitionEnumerable",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForIEnumerable`1+InternalPartitionEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForIList`1+InternalPartitionEnumerable",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForIList`1+InternalPartitionEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForArray`1+InternalPartitionEnumerable",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      null,
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.Partitioner+DynamicPartitionerForArray`1+InternalPartitionEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+ConcurrentExclusiveTaskScheduler+DebugView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Reflection.Emit.DynamicMethod+RTDynamicMethod+EmptyCAHolder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters+CreateFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource+SourceFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Remoting.SoapServices+XmlToFieldTypeMap+FieldEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter+<>c__DisplayClass5_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKey",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKeyEqualityComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKey, System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKey)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKey)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventRegistrationTokenListWithCount",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Push (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "Pop (output System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Collections.Generic.List)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+TokenListCount",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ApplicationException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+ReaderWriterLockTimedOutException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+MyReaderWriterLock",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.Compiler.CodeDomProvider",
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "Microsoft.VisualBasic.VBCodeProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "CreateGenerator ()",
        "returnType": "System.CodeDom.Compiler.ICodeGenerator",
        "obsolete": {
          "message": "Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.",
          "error": false
        }
      },
      {
        "name": "CreateCompiler ()",
        "returnType": "System.CodeDom.Compiler.ICodeCompiler",
        "obsolete": {
          "message": "Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.",
          "error": false
        }
      },
      {
        "name": "GetConverter (System.Type)",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GenerateCodeFromMember (System.CodeDom.CodeTypeMember, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.Compiler.CodeDomProvider",
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "Microsoft.CSharp.CSharpCodeProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "CreateGenerator ()",
        "returnType": "System.CodeDom.Compiler.ICodeGenerator",
        "obsolete": {
          "message": "Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.",
          "error": false
        }
      },
      {
        "name": "CreateCompiler ()",
        "returnType": "System.CodeDom.Compiler.ICodeCompiler",
        "obsolete": {
          "message": "Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.",
          "error": false
        }
      },
      {
        "name": "GetConverter (System.Type)",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GenerateCodeFromMember (System.CodeDom.CodeTypeMember, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "Microsoft.Win32.PowerModeChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.PowerModeChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, Microsoft.Win32.PowerModeChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, Microsoft.Win32.PowerModeChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.PowerModes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionEndedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionEndedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, Microsoft.Win32.SessionEndedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, Microsoft.Win32.SessionEndedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionEndingEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionEndingEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, Microsoft.Win32.SessionEndingEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, Microsoft.Win32.SessionEndingEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionEndReasons",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionSwitchEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionSwitchEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, Microsoft.Win32.SessionSwitchEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, Microsoft.Win32.SessionSwitchEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SessionSwitchReason",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.SystemEvents",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "DisplaySettingsChanging",
      "DisplaySettingsChanged",
      "EventsThreadShutdown",
      "InstalledFontsChanged",
      "LowMemory",
      "PaletteChanged",
      "PowerModeChanged",
      "SessionEnded",
      "SessionEnding",
      "SessionSwitch",
      "TimeChanged",
      "TimerElapsed",
      "UserPreferenceChanged",
      "UserPreferenceChanging"
    ],
    "staticMethods": [
      {
        "name": "add_DisplaySettingsChanging (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DisplaySettingsChanging (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DisplaySettingsChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DisplaySettingsChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_EventsThreadShutdown (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_EventsThreadShutdown (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_InstalledFontsChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_InstalledFontsChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_LowMemory (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_LowMemory (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PaletteChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PaletteChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PowerModeChanged (Microsoft.Win32.PowerModeChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PowerModeChanged (Microsoft.Win32.PowerModeChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SessionEnded (Microsoft.Win32.SessionEndedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SessionEnded (Microsoft.Win32.SessionEndedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SessionEnding (Microsoft.Win32.SessionEndingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SessionEnding (Microsoft.Win32.SessionEndingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SessionSwitch (Microsoft.Win32.SessionSwitchEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SessionSwitch (Microsoft.Win32.SessionSwitchEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TimeChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TimeChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TimerElapsed (Microsoft.Win32.TimerElapsedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TimerElapsed (Microsoft.Win32.TimerElapsedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UserPreferenceChanged (Microsoft.Win32.UserPreferenceChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UserPreferenceChanged (Microsoft.Win32.UserPreferenceChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UserPreferenceChanging (Microsoft.Win32.UserPreferenceChangingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UserPreferenceChanging (Microsoft.Win32.UserPreferenceChangingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "KillTimer (System.IntPtr)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateTimer (INTEGER)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "InvokeOnEventsThread (System.Delegate)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "Microsoft.Win32.TimerElapsedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.TimerElapsedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, Microsoft.Win32.TimerElapsedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, Microsoft.Win32.TimerElapsedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UserPreferenceCategory",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UserPreferenceChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UserPreferenceChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, Microsoft.Win32.UserPreferenceChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, Microsoft.Win32.UserPreferenceChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UserPreferenceChangingEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UserPreferenceChangingEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, Microsoft.Win32.UserPreferenceChangingEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, Microsoft.Win32.UserPreferenceChangingEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.IntranetZoneCredentialPolicy",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ShouldSendCredential (System.Uri, System.Net.WebRequest, System.Net.NetworkCredential, System.Net.IAuthenticationModule)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeProcessHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeHandles.SafeX509ChainHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.StringNormalizationExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "IsNormalized (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsNormalized (CHARACTER, System.Text.NormalizationForm)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Normalize (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Normalize (CHARACTER, System.Text.NormalizationForm)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.UriParser",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Register (System.UriParser, CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsKnownScheme (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Uri",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetLeftPart (System.UriPartial)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "MakeRelative (System.Uri)",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "The method has been deprecated. Please use MakeRelativeUri(Uri uri). http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetComponents (System.UriComponents, System.UriFormat)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsWellFormedOriginalString ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsBaseOf (System.Uri)",
        "returnType": "LOGICAL"
      },
      {
        "name": "MakeRelativeUri (System.Uri)",
        "returnType": "System.Uri"
      }
    ],
    "staticMethods": [
      {
        "name": "HexUnescape (CHARACTER, System.Int32&)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsHexEncoding (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CheckSchemeName (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsHexDigit (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromHex (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "op_Equality (System.Uri, System.Uri)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Uri, System.Uri)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryCreate (CHARACTER, System.UriKind, output System.Uri&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryCreate (System.Uri, CHARACTER, output System.Uri&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryCreate (System.Uri, System.Uri, output System.Uri&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Compare (System.Uri, System.Uri, System.UriComponents, System.UriFormat, System.StringComparison)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsWellFormedUriString (CHARACTER, System.UriKind)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EscapeUriString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "EscapeDataString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CheckHostName (CHARACTER)",
        "returnType": "System.UriHostNameType"
      },
      {
        "name": "HexEscape (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "UnescapeDataString (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.UriBuilder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.FormatException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.UriFormatException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UriHostNameType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UriPartial",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.UriTypeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "IsValid (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UriKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UriComponents",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UriFormat",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UriIdnScope",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.GenericUriParserOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.GenericUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.HttpStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.FtpStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.FileStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.NewsStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.GopherStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.LdapStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.NetPipeStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.NetTcpStyleUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Web.AspNetHostingPermissionLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Web.AspNetHostingPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Web.AspNetHostingPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Timers.ElapsedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Timers.ElapsedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Timers.ElapsedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Timers.ElapsedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Timers.Timer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Elapsed",
      "Disposed"
    ],
    "methods": [
      {
        "name": "BeginInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "add_Elapsed (System.Timers.ElapsedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Elapsed (System.Timers.ElapsedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Start ()",
        "returnType": "System.Void"
      },
      {
        "name": "Stop ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.DescriptionAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Timers.TimersDescriptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.SchemeSettingElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElementCollection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.SchemeSettingElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IndexOf (System.Configuration.SchemeSettingElement)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.UriSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.IriParsingElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.IdnElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.SettingsBase",
      "System.Object"
    ],
    "name": "System.Configuration.ApplicationSettingsBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PropertyChanged",
      "SettingChanging",
      "SettingsLoaded",
      "SettingsSaving"
    ],
    "methods": [
      {
        "name": "add_PropertyChanged (System.ComponentModel.PropertyChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PropertyChanged (System.ComponentModel.PropertyChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SettingChanging (System.Configuration.SettingChangingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SettingChanging (System.Configuration.SettingChangingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SettingsLoaded (System.Configuration.SettingsLoadedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SettingsLoaded (System.Configuration.SettingsLoadedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SettingsSaving (System.Configuration.SettingsSavingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SettingsSaving (System.Configuration.SettingsSavingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "GetPreviousVersion (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "Reload ()",
        "returnType": "System.Void"
      },
      {
        "name": "Save ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Upgrade ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsLoadedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Configuration.SettingsLoadedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Configuration.SettingsLoadedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsSavingEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.CancelEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.CancelEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Configuration.SettingChangingEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Configuration.SettingChangingEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Configuration.SettingChangingEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.CancelEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Configuration.SettingChangingEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsLoadedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Configuration.ConfigurationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetXmlNodeFilename (System.Xml.XmlNode)",
        "returnType": "CHARACTER",
        "obsolete": {
          "message": "This class is obsolete, use System.Configuration!System.Configuration.ConfigurationErrorsException.GetFilename instead",
          "error": false
        }
      },
      {
        "name": "GetXmlNodeLineNumber (System.Xml.XmlNode)",
        "returnType": "INTEGER",
        "obsolete": {
          "message": "This class is obsolete, use System.Configuration!System.Configuration.ConfigurationErrorsException.GetLinenumber instead",
          "error": false
        }
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.ConfigurationSettings",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetConfig (CHARACTER)",
        "returnType": "System.Object",
        "obsolete": {
          "message": "This method is obsolete, it has been replaced by System.Configuration!System.Configuration.ConfigurationManager.GetSection",
          "error": false
        }
      }
    ]
  },
  {
    "baseTypes": [
      "System.Xml.XmlDocument",
      "System.Xml.XmlNode",
      "System.Object"
    ],
    "name": "System.Configuration.ConfigXmlDocument",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "NodeInserting",
      "NodeInserted",
      "NodeRemoving",
      "NodeRemoved",
      "NodeChanging",
      "NodeChanged"
    ],
    "methods": [
      {
        "name": "Load (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "LoadSingleElement (CHARACTER, System.Xml.XmlTextReader)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateAttribute (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Xml.XmlAttribute"
      },
      {
        "name": "CreateElement (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Xml.XmlElement"
      },
      {
        "name": "CreateTextNode (CHARACTER)",
        "returnType": "System.Xml.XmlText"
      },
      {
        "name": "CreateCDataSection (CHARACTER)",
        "returnType": "System.Xml.XmlCDataSection"
      },
      {
        "name": "CreateComment (CHARACTER)",
        "returnType": "System.Xml.XmlComment"
      },
      {
        "name": "CreateSignificantWhitespace (CHARACTER)",
        "returnType": "System.Xml.XmlSignificantWhitespace"
      },
      {
        "name": "CreateWhitespace (CHARACTER)",
        "returnType": "System.Xml.XmlWhitespace"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.DictionarySectionHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Object, System.Object, System.Xml.XmlNode)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Configuration.IApplicationSettingsProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetPreviousVersion (System.Configuration.SettingsContext, System.Configuration.SettingsProperty)",
        "returnType": "System.Configuration.SettingsPropertyValue"
      },
      {
        "name": "Reset (System.Configuration.SettingsContext)",
        "returnType": "System.Void"
      },
      {
        "name": "Upgrade (System.Configuration.SettingsContext, System.Configuration.SettingsPropertyCollection)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Configuration.IConfigurationSectionHandler",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Create (System.Object, System.Object, System.Xml.XmlNode)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Configuration.IConfigurationSystem",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetConfig (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "Init ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.IgnoreSectionHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Object, System.Object, System.Xml.XmlNode)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Configuration.IPersistComponentSettings",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "LoadComponentSettings ()",
        "returnType": "System.Void"
      },
      {
        "name": "SaveComponentSettings ()",
        "returnType": "System.Void"
      },
      {
        "name": "ResetComponentSettings ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Configuration.ISettingsProviderService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetSettingsProvider (System.Configuration.SettingsProperty)",
        "returnType": "System.Configuration.SettingsProvider"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.SettingsProvider",
      "System.Configuration.Provider.ProviderBase",
      "System.Object"
    ],
    "name": "System.Configuration.LocalFileSettingsProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize (CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "GetPropertyValues (System.Configuration.SettingsContext, System.Configuration.SettingsPropertyCollection)",
        "returnType": "System.Configuration.SettingsPropertyValueCollection"
      },
      {
        "name": "SetPropertyValues (System.Configuration.SettingsContext, System.Configuration.SettingsPropertyValueCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Reset (System.Configuration.SettingsContext)",
        "returnType": "System.Void"
      },
      {
        "name": "Upgrade (System.Configuration.SettingsContext, System.Configuration.SettingsPropertyCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "GetPreviousVersion (System.Configuration.SettingsContext, System.Configuration.SettingsProperty)",
        "returnType": "System.Configuration.SettingsPropertyValue"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.NameValueFileSectionHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Object, System.Object, System.Xml.XmlNode)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.NameValueSectionHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Object, System.Object, System.Xml.XmlNode)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.Hashtable",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsAttributeDictionary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.SettingAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.ApplicationScopedSettingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.DefaultSettingValueAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.NoSettingsVersionUpgradeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SettingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsDescriptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsGroupDescriptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsGroupNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsManageabilityAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsProviderAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsSerializeAsAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.SpecialSettingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.SettingAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Configuration.UserScopedSettingAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsManageability",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Configuration.SpecialSetting",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.SettingsBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Initialize (System.Configuration.SettingsContext, System.Configuration.SettingsPropertyCollection, System.Configuration.SettingsProviderCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Save ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.Configuration.SettingsBase)",
        "returnType": "System.Configuration.SettingsBase"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.Hashtable",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.SettingsProperty",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.SettingsPropertyCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Configuration.SettingsProperty)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "SetReadOnly ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsPropertyIsReadOnlyException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsPropertyNotFoundException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.SettingsPropertyValue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.SettingsPropertyValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Configuration.SettingsPropertyValue)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      },
      {
        "name": "SetReadOnly ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsPropertyWrongTypeException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.Provider.ProviderBase",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsProvider",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetPropertyValues (System.Configuration.SettingsContext, System.Configuration.SettingsPropertyCollection)",
        "returnType": "System.Configuration.SettingsPropertyValueCollection"
      },
      {
        "name": "SetPropertyValues (System.Configuration.SettingsContext, System.Configuration.SettingsPropertyValueCollection)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.Provider.ProviderCollection",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsProviderCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Configuration.Provider.ProviderBase)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Configuration.SettingsSerializeAs",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.SingleTagSectionHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Object, System.Object, System.Xml.XmlNode)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSectionGroup",
      "System.Object"
    ],
    "name": "System.Configuration.ApplicationSettingsGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSectionGroup",
      "System.Object"
    ],
    "name": "System.Configuration.UserSettingsGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.ClientSettingsSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElementCollection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.SettingElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Get (CHARACTER)",
        "returnType": "System.Configuration.SettingElement"
      },
      {
        "name": "Add (System.Configuration.SettingElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Configuration.SettingElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.SettingElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Configuration.SettingValueElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.AppSettingsReader",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetValue (CHARACTER, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.Net.ICredentialPolicy",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ShouldSendCredential (System.Uri, System.Net.WebRequest, System.Net.NetworkCredential, System.Net.IAuthenticationModule)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.AuthenticationManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Authenticate (CHARACTER, System.Net.WebRequest, System.Net.ICredentials)",
        "returnType": "System.Net.Authorization"
      },
      {
        "name": "PreAuthenticate (System.Net.WebRequest, System.Net.ICredentials)",
        "returnType": "System.Net.Authorization"
      },
      {
        "name": "Register (System.Net.IAuthenticationModule)",
        "returnType": "System.Void"
      },
      {
        "name": "Unregister (System.Net.IAuthenticationModule)",
        "returnType": "System.Void"
      },
      {
        "name": "Unregister (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.AuthenticationSchemes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.AuthenticationSchemeSelector",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Net.HttpListenerRequest)",
        "returnType": "System.Net.AuthenticationSchemes"
      },
      {
        "name": "BeginInvoke (System.Net.HttpListenerRequest, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Net.AuthenticationSchemes"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Authorization",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Cookie",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.CookieCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Net.Cookie)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.CookieCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.Net.Cookie[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.CookieContainer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Net.CookieCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Uri, System.Net.Cookie)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Uri, System.Net.CookieCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCookies (System.Uri)",
        "returnType": "System.Net.CookieCollection"
      },
      {
        "name": "GetCookieHeader (System.Uri)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SetCookies (System.Uri, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.Cookie)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.FormatException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.CookieException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.CredentialCache",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Remove (System.Uri, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCredential (System.Uri, CHARACTER)",
        "returnType": "System.Net.NetworkCredential"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Add (System.Uri, CHARACTER, System.Net.NetworkCredential)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (CHARACTER, INTEGER, CHARACTER, System.Net.NetworkCredential)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCredential (CHARACTER, INTEGER, CHARACTER)",
        "returnType": "System.Net.NetworkCredential"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Dns",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetHostEntry (CHARACTER)",
        "returnType": "System.Net.IPHostEntry"
      },
      {
        "name": "GetHostByName (CHARACTER)",
        "returnType": "System.Net.IPHostEntry",
        "obsolete": {
          "message": "GetHostByName is obsoleted for this type, please use GetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetHostName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetHostByAddress (CHARACTER)",
        "returnType": "System.Net.IPHostEntry",
        "obsolete": {
          "message": "GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetHostByAddress (System.Net.IPAddress)",
        "returnType": "System.Net.IPHostEntry",
        "obsolete": {
          "message": "GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "Resolve (CHARACTER)",
        "returnType": "System.Net.IPHostEntry",
        "obsolete": {
          "message": "Resolve is obsoleted for this type, please use GetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "BeginGetHostByName (CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult",
        "obsolete": {
          "message": "BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "EndGetHostByName (System.IAsyncResult)",
        "returnType": "System.Net.IPHostEntry",
        "obsolete": {
          "message": "EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetHostEntry (System.Net.IPAddress)",
        "returnType": "System.Net.IPHostEntry"
      },
      {
        "name": "GetHostAddresses (CHARACTER)",
        "returnType": "System.Net.IPAddress[]"
      },
      {
        "name": "BeginGetHostEntry (CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginGetHostEntry (System.Net.IPAddress, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetHostEntry (System.IAsyncResult)",
        "returnType": "System.Net.IPHostEntry"
      },
      {
        "name": "BeginGetHostAddresses (CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetHostAddresses (System.IAsyncResult)",
        "returnType": "System.Net.IPAddress[]"
      },
      {
        "name": "BeginResolve (CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult",
        "obsolete": {
          "message": "BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "EndResolve (System.IAsyncResult)",
        "returnType": "System.Net.IPHostEntry",
        "obsolete": {
          "message": "EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "GetHostAddressesAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "GetHostEntryAsync (System.Net.IPAddress)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "GetHostEntryAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.EndPoint",
      "System.Object"
    ],
    "name": "System.Net.DnsEndPoint",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Net.DnsPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Net.DnsPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.EndPoint",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Serialize ()",
        "returnType": "System.Net.SocketAddress"
      },
      {
        "name": "Create (System.Net.SocketAddress)",
        "returnType": "System.Net.EndPoint"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebRequest",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.FileWebRequest",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BeginGetResponse (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetResponse (System.IAsyncResult)",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "GetResponse ()",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "BeginGetRequestStream (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetRequestStream (System.IAsyncResult)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetRequestStream ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebResponse",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.FileWebResponse",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetResponseStream ()",
        "returnType": "System.IO.Stream"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.FtpStatusCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequestMethods",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.WebRequest",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.FtpWebRequest",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetResponse ()",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "BeginGetResponse (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetResponse (System.IAsyncResult)",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "GetRequestStream ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "BeginGetRequestStream (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetRequestStream (System.IAsyncResult)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebResponse",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.FtpWebResponse",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetResponseStream ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.GlobalProxySelection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetEmptyWebProxy ()",
        "returnType": "System.Net.IWebProxy"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Principal.GenericIdentity",
      "System.Security.Claims.ClaimsIdentity",
      "System.Object"
    ],
    "name": "System.Net.HttpListenerBasicIdentity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Start ()",
        "returnType": "System.Void"
      },
      {
        "name": "Stop ()",
        "returnType": "System.Void"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetContext ()",
        "returnType": "System.Net.HttpListenerContext"
      },
      {
        "name": "BeginGetContext (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetContext (System.IAsyncResult)",
        "returnType": "System.Net.HttpListenerContext"
      },
      {
        "name": "GetContextAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListenerContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AcceptWebSocketAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AcceptWebSocketAsync (CHARACTER, System.TimeSpan)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AcceptWebSocketAsync (CHARACTER, INTEGER, System.TimeSpan)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AcceptWebSocketAsync (CHARACTER, INTEGER, System.TimeSpan, System.ArraySegment)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Win32Exception",
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.HttpListenerException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListenerPrefixCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.String[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListenerRequest",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetClientCertificate ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate2"
      },
      {
        "name": "BeginGetClientCertificate (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetClientCertificate (System.IAsyncResult)",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate2"
      },
      {
        "name": "GetClientCertificateAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListenerResponse",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyFrom (System.Net.HttpListenerResponse)",
        "returnType": "System.Void"
      },
      {
        "name": "AddHeader (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AppendHeader (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Redirect (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AppendCookie (System.Net.Cookie)",
        "returnType": "System.Void"
      },
      {
        "name": "SetCookie (System.Net.Cookie)",
        "returnType": "System.Void"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close (MEMPTR, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListenerTimeoutManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpRequestHeader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpResponseHeader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpStatusCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpVersion",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.DecompressionMethods",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.WebRequest",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.HttpWebRequest",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "EndGetRequestStream (System.IAsyncResult)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetRequestStream ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginGetRequestStream (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetRequestStream (System.IAsyncResult, output System.Net.TransportContext&)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetRequestStream (output System.Net.TransportContext&)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "BeginGetResponse (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetResponse (System.IAsyncResult)",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "GetResponse ()",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "AddRange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (CHARACTER, INT64, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (CHARACTER, INT64)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebResponse",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.HttpWebResponse",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetResponseStream ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetResponseHeader (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "name": "System.Net.IAuthenticationModule",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Authenticate (CHARACTER, System.Net.WebRequest, System.Net.ICredentials)",
        "returnType": "System.Net.Authorization"
      },
      {
        "name": "PreAuthenticate (System.Net.WebRequest, System.Net.ICredentials)",
        "returnType": "System.Net.Authorization"
      }
    ]
  },
  {
    "name": "System.Net.ICertificatePolicy",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CheckValidationResult (System.Net.ServicePoint, System.Security.Cryptography.X509Certificates.X509Certificate, System.Net.WebRequest, INTEGER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Net.ICredentials",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetCredential (System.Uri, CHARACTER)",
        "returnType": "System.Net.NetworkCredential"
      }
    ]
  },
  {
    "name": "System.Net.ICredentialsByHost",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetCredential (CHARACTER, INTEGER, CHARACTER)",
        "returnType": "System.Net.NetworkCredential"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.HttpContinueDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER, System.Net.WebHeaderCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (INTEGER, System.Net.WebHeaderCollection, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.IPAddress",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAddressBytes ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "MapToIPv4 ()",
        "returnType": "System.Net.IPAddress"
      },
      {
        "name": "MapToIPv6 ()",
        "returnType": "System.Net.IPAddress"
      }
    ],
    "staticMethods": [
      {
        "name": "TryParse (CHARACTER, output System.Net.IPAddress&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Net.IPAddress"
      },
      {
        "name": "HostToNetworkOrder (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "HostToNetworkOrder (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "HostToNetworkOrder (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "NetworkToHostOrder (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "NetworkToHostOrder (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "NetworkToHostOrder (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsLoopback (System.Net.IPAddress)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.EndPoint",
      "System.Object"
    ],
    "name": "System.Net.IPEndPoint",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Net.SocketAddress)",
        "returnType": "System.Net.EndPoint"
      },
      {
        "name": "Serialize ()",
        "returnType": "System.Net.SocketAddress"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.IPHostEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Net.IWebProxy",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetProxy (System.Uri)",
        "returnType": "System.Uri"
      },
      {
        "name": "IsBypassed (System.Uri)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Net.IWebRequestCreate",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Create (System.Uri)",
        "returnType": "System.Net.WebRequest"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkCredential",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetCredential (System.Uri, CHARACTER)",
        "returnType": "System.Net.NetworkCredential"
      },
      {
        "name": "GetCredential (CHARACTER, INTEGER, CHARACTER)",
        "returnType": "System.Net.NetworkCredential"
      }
    ]
  },
  {
    "baseTypes": [
      "System.InvalidOperationException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.ProtocolViolationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.TransportContext",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetTlsTokenBindings ()",
        "returnType": "System.Collections.Generic.IEnumerable"
      },
      {
        "name": "GetChannelBinding (System.Security.Authentication.ExtendedProtection.ChannelBindingKind)",
        "returnType": "System.Security.Authentication.ExtendedProtection.ChannelBinding"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.SecurityProtocolType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.BindIPEndPoint",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Net.ServicePoint, System.Net.IPEndPoint, INTEGER)",
        "returnType": "System.Net.IPEndPoint"
      },
      {
        "name": "BeginInvoke (System.Net.ServicePoint, System.Net.IPEndPoint, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Net.IPEndPoint"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ServicePoint",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetTcpKeepAlive (LOGICAL, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CloseConnectionGroup (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ServicePointManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "FindServicePoint (System.Uri)",
        "returnType": "System.Net.ServicePoint"
      },
      {
        "name": "FindServicePoint (CHARACTER, System.Net.IWebProxy)",
        "returnType": "System.Net.ServicePoint"
      },
      {
        "name": "FindServicePoint (System.Uri, System.Net.IWebProxy)",
        "returnType": "System.Net.ServicePoint"
      },
      {
        "name": "SetTcpKeepAlive (LOGICAL, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.SocketAddress",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Net.SocketPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Net.SocketPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddPermission (System.Net.NetworkAccess, System.Net.TransportType, CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.EndpointPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.TransportType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.WebClient",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "WriteStreamClosed",
      "OpenReadCompleted",
      "OpenWriteCompleted",
      "DownloadStringCompleted",
      "DownloadDataCompleted",
      "DownloadFileCompleted",
      "UploadStringCompleted",
      "UploadDataCompleted",
      "UploadFileCompleted",
      "UploadValuesCompleted",
      "DownloadProgressChanged",
      "UploadProgressChanged",
      "Disposed"
    ],
    "methods": [
      {
        "name": "add_WriteStreamClosed (System.Net.WriteStreamClosedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_WriteStreamClosed (System.Net.WriteStreamClosedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadData (CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "DownloadData (System.Uri)",
        "returnType": "MEMPTR"
      },
      {
        "name": "DownloadFile (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadFile (System.Uri, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenRead (CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenRead (System.Uri)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenWrite (CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenWrite (System.Uri)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenWrite (CHARACTER, CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenWrite (System.Uri, CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "UploadData (CHARACTER, MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadData (System.Uri, MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadData (CHARACTER, CHARACTER, MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadData (System.Uri, CHARACTER, MEMPTR)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadFile (CHARACTER, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadFile (System.Uri, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadFile (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadFile (System.Uri, CHARACTER, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadValues (CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadValues (System.Uri, System.Collections.Specialized.NameValueCollection)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadValues (CHARACTER, CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadValues (System.Uri, CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "MEMPTR"
      },
      {
        "name": "UploadString (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "UploadString (System.Uri, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "UploadString (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "UploadString (System.Uri, CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "DownloadString (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "DownloadString (System.Uri)",
        "returnType": "CHARACTER"
      },
      {
        "name": "add_OpenReadCompleted (System.Net.OpenReadCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_OpenReadCompleted (System.Net.OpenReadCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenReadAsync (System.Uri)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenReadAsync (System.Uri, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_OpenWriteCompleted (System.Net.OpenWriteCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_OpenWriteCompleted (System.Net.OpenWriteCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenWriteAsync (System.Uri)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenWriteAsync (System.Uri, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "OpenWriteAsync (System.Uri, CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DownloadStringCompleted (System.Net.DownloadStringCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DownloadStringCompleted (System.Net.DownloadStringCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadStringAsync (System.Uri)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadStringAsync (System.Uri, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DownloadDataCompleted (System.Net.DownloadDataCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DownloadDataCompleted (System.Net.DownloadDataCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadDataAsync (System.Uri)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadDataAsync (System.Uri, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DownloadFileCompleted (System.ComponentModel.AsyncCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DownloadFileCompleted (System.ComponentModel.AsyncCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadFileAsync (System.Uri, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadFileAsync (System.Uri, CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UploadStringCompleted (System.Net.UploadStringCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UploadStringCompleted (System.Net.UploadStringCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadStringAsync (System.Uri, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadStringAsync (System.Uri, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadStringAsync (System.Uri, CHARACTER, CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UploadDataCompleted (System.Net.UploadDataCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UploadDataCompleted (System.Net.UploadDataCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadDataAsync (System.Uri, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadDataAsync (System.Uri, CHARACTER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadDataAsync (System.Uri, CHARACTER, MEMPTR, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UploadFileCompleted (System.Net.UploadFileCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UploadFileCompleted (System.Net.UploadFileCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadFileAsync (System.Uri, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadFileAsync (System.Uri, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadFileAsync (System.Uri, CHARACTER, CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UploadValuesCompleted (System.Net.UploadValuesCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UploadValuesCompleted (System.Net.UploadValuesCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadValuesAsync (System.Uri, System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadValuesAsync (System.Uri, CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "UploadValuesAsync (System.Uri, CHARACTER, System.Collections.Specialized.NameValueCollection, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "CancelAsync ()",
        "returnType": "System.Void"
      },
      {
        "name": "DownloadStringTaskAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "DownloadStringTaskAsync (System.Uri)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "OpenReadTaskAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "OpenReadTaskAsync (System.Uri)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "OpenWriteTaskAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "OpenWriteTaskAsync (System.Uri)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "OpenWriteTaskAsync (CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "OpenWriteTaskAsync (System.Uri, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadStringTaskAsync (CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadStringTaskAsync (System.Uri, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadStringTaskAsync (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadStringTaskAsync (System.Uri, CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "DownloadDataTaskAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "DownloadDataTaskAsync (System.Uri)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "DownloadFileTaskAsync (CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "DownloadFileTaskAsync (System.Uri, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadDataTaskAsync (CHARACTER, MEMPTR)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadDataTaskAsync (System.Uri, MEMPTR)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadDataTaskAsync (CHARACTER, CHARACTER, MEMPTR)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadDataTaskAsync (System.Uri, CHARACTER, MEMPTR)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadFileTaskAsync (CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadFileTaskAsync (System.Uri, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadFileTaskAsync (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadFileTaskAsync (System.Uri, CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadValuesTaskAsync (CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadValuesTaskAsync (CHARACTER, CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadValuesTaskAsync (System.Uri, System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "UploadValuesTaskAsync (System.Uri, CHARACTER, System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "add_DownloadProgressChanged (System.Net.DownloadProgressChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DownloadProgressChanged (System.Net.DownloadProgressChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_UploadProgressChanged (System.Net.UploadProgressChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_UploadProgressChanged (System.Net.UploadProgressChangedEventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.OpenReadCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.OpenReadCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.OpenReadCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.OpenReadCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.OpenWriteCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.OpenWriteCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.OpenWriteCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.OpenWriteCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.DownloadStringCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.DownloadStringCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.DownloadStringCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.DownloadStringCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.DownloadDataCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.DownloadDataCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.DownloadDataCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.DownloadDataCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.UploadStringCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.UploadStringCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.UploadStringCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.UploadStringCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.UploadDataCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.UploadDataCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.UploadDataCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.UploadDataCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.UploadFileCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.UploadFileCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.UploadFileCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.UploadFileCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.UploadValuesCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.UploadValuesCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.UploadValuesCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.UploadValuesCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.DownloadProgressChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.DownloadProgressChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.DownloadProgressChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.ProgressChangedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.DownloadProgressChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.UploadProgressChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.UploadProgressChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.UploadProgressChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.ProgressChangedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.UploadProgressChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.InvalidOperationException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.WebException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebExceptionStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.Specialized.NameValueCollection",
      "System.Collections.Specialized.NameObjectCollectionBase",
      "System.Object"
    ],
    "name": "System.Net.WebHeaderCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Net.HttpRequestHeader, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Set (System.Net.HttpRequestHeader, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Net.HttpRequestHeader)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Net.HttpResponseHeader)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToByteArray ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Get (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Get (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetValues (INTEGER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetKey (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.HttpResponseHeader, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Set (System.Net.HttpResponseHeader, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Set (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetValues (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "IsRestricted (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsRestricted (CHARACTER, LOGICAL)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Net.WebPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Net.WebPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddPermission (System.Net.NetworkAccess, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "AddPermission (System.Net.NetworkAccess, System.Text.RegularExpressions.Regex)",
        "returnType": "System.Void"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebProxy",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProxy (System.Uri)",
        "returnType": "System.Uri"
      },
      {
        "name": "IsBypassed (System.Uri)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "GetDefaultProxy ()",
        "returnType": "System.Net.WebProxy",
        "obsolete": {
          "message": "This method has been deprecated. Please use the proxy selected for you by default. http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.WebRequest",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRequestStream ()",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "GetResponse ()",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "BeginGetResponse (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetResponse (System.IAsyncResult)",
        "returnType": "System.Net.WebResponse"
      },
      {
        "name": "BeginGetRequestStream (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetRequestStream (System.IAsyncResult)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetRequestStreamAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "GetResponseAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ],
    "staticMethods": [
      {
        "name": "RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.",
          "error": true
        }
      },
      {
        "name": "Create (CHARACTER)",
        "returnType": "System.Net.WebRequest"
      },
      {
        "name": "Create (System.Uri)",
        "returnType": "System.Net.WebRequest"
      },
      {
        "name": "CreateDefault (System.Uri)",
        "returnType": "System.Net.WebRequest"
      },
      {
        "name": "CreateHttp (CHARACTER)",
        "returnType": "System.Net.HttpWebRequest"
      },
      {
        "name": "CreateHttp (System.Uri)",
        "returnType": "System.Net.HttpWebRequest"
      },
      {
        "name": "RegisterPrefix (CHARACTER, System.Net.IWebRequestCreate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetSystemWebProxy ()",
        "returnType": "System.Net.IWebProxy"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.WebResponse",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetResponseStream ()",
        "returnType": "System.IO.Stream"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebUtility",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "HtmlEncode (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "HtmlDecode (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "HtmlDecode (CHARACTER, System.IO.TextWriter)",
        "returnType": "System.Void"
      },
      {
        "name": "UrlEncode (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "UrlDecode (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "UrlDecodeToBytes (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "HtmlEncode (CHARACTER, System.IO.TextWriter)",
        "returnType": "System.Void"
      },
      {
        "name": "UrlEncodeToBytes (MEMPTR, INTEGER, INTEGER)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.WriteStreamClosedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.WriteStreamClosedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.WriteStreamClosedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.WriteStreamClosedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Net.IWebProxyScript",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Load (System.Uri, CHARACTER, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Run (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebSockets.WebSocket",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.ClientWebSocket",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ConnectAsync (System.Uri, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "CloseAsync (System.Net.WebSockets.WebSocketCloseStatus, CHARACTER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus, CHARACTER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (System.ArraySegment, System.Net.WebSockets.WebSocketMessageType, LOGICAL, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReceiveAsync (System.ArraySegment, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.ClientWebSocketOptions",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SetRequestHeader (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetBuffer (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetBuffer (INTEGER, INTEGER, System.ArraySegment)",
        "returnType": "System.Void"
      },
      {
        "name": "AddSubProtocol (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebSockets.WebSocketContext",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.HttpListenerWebSocketContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocket",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "CloseAsync (System.Net.WebSockets.WebSocketCloseStatus, CHARACTER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus, CHARACTER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "ReceiveAsync (System.ArraySegment, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendAsync (System.ArraySegment, System.Net.WebSockets.WebSocketMessageType, LOGICAL, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ],
    "staticMethods": [
      {
        "name": "IsApplicationTargeting45 ()",
        "returnType": "LOGICAL",
        "obsolete": {
          "message": "This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.",
          "error": false
        }
      },
      {
        "name": "CreateClientBuffer (INTEGER, INTEGER)",
        "returnType": "System.ArraySegment"
      },
      {
        "name": "CreateServerBuffer (INTEGER)",
        "returnType": "System.ArraySegment"
      },
      {
        "name": "CreateClientWebSocket (System.IO.Stream, CHARACTER, INTEGER, INTEGER, System.TimeSpan, LOGICAL, System.ArraySegment)",
        "returnType": "System.Net.WebSockets.WebSocket"
      },
      {
        "name": "RegisterPrefixes ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketCloseStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketContext",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketError",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Win32Exception",
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketMessageType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketReceiveResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.ContentDisposition",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.ContentType",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.DispositionTypeNames",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.MediaTypeNames",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mime.TransferEncoding",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.Mail.AttachmentBase",
      "System.Object"
    ],
    "name": "System.Net.Mail.AlternateView",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CreateAlternateViewFromString (CHARACTER)",
        "returnType": "System.Net.Mail.AlternateView"
      },
      {
        "name": "CreateAlternateViewFromString (CHARACTER, System.Text.Encoding, CHARACTER)",
        "returnType": "System.Net.Mail.AlternateView"
      },
      {
        "name": "CreateAlternateViewFromString (CHARACTER, System.Net.Mime.ContentType)",
        "returnType": "System.Net.Mail.AlternateView"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ObjectModel.Collection`1[[System.Net.Mail.AlternateView, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Object"
    ],
    "name": "System.Net.Mail.AlternateViewCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mail.AttachmentBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.Mail.AttachmentBase",
      "System.Object"
    ],
    "name": "System.Net.Mail.Attachment",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CreateAttachmentFromString (CHARACTER, CHARACTER)",
        "returnType": "System.Net.Mail.Attachment"
      },
      {
        "name": "CreateAttachmentFromString (CHARACTER, CHARACTER, System.Text.Encoding, CHARACTER)",
        "returnType": "System.Net.Mail.Attachment"
      },
      {
        "name": "CreateAttachmentFromString (CHARACTER, System.Net.Mime.ContentType)",
        "returnType": "System.Net.Mail.Attachment"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ObjectModel.Collection`1[[System.Net.Mail.Attachment, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Object"
    ],
    "name": "System.Net.Mail.AttachmentCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.Mail.AttachmentBase",
      "System.Object"
    ],
    "name": "System.Net.Mail.LinkedResource",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CreateLinkedResourceFromString (CHARACTER)",
        "returnType": "System.Net.Mail.LinkedResource"
      },
      {
        "name": "CreateLinkedResourceFromString (CHARACTER, System.Text.Encoding, CHARACTER)",
        "returnType": "System.Net.Mail.LinkedResource"
      },
      {
        "name": "CreateLinkedResourceFromString (CHARACTER, System.Net.Mime.ContentType)",
        "returnType": "System.Net.Mail.LinkedResource"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ObjectModel.Collection`1[[System.Net.Mail.LinkedResource, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Object"
    ],
    "name": "System.Net.Mail.LinkedResourceCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mail.MailAddress",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ObjectModel.Collection`1[[System.Net.Mail.MailAddress, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Object"
    ],
    "name": "System.Net.Mail.MailAddressCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.DeliveryNotificationOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mail.MailMessage",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.MailPriority",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.Mail.SendCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.AsyncCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.AsyncCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpDeliveryMethod",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpDeliveryFormat",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpClient",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "SendCompleted"
    ],
    "methods": [
      {
        "name": "Send (CHARACTER, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (CHARACTER, CHARACTER, CHARACTER, CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendMailAsync (CHARACTER, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "add_SendCompleted (System.Net.Mail.SendCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SendCompleted (System.Net.Mail.SendCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Send (System.Net.Mail.MailMessage)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (System.Net.Mail.MailMessage, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsyncCancel ()",
        "returnType": "System.Void"
      },
      {
        "name": "SendMailAsync (System.Net.Mail.MailMessage)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.Mail.SmtpException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpFailedRecipientException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.Mail.SmtpFailedRecipientException",
      "System.Net.Mail.SmtpException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpFailedRecipientsException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddPermission (System.Net.Mail.SmtpAccess)",
        "returnType": "System.Void"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpStatusCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.DuplicateAddressDetectionState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IcmpV4Statistics",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IcmpV6Statistics",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkInterfaceType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPAddressInformation",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPAddressInformationCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Net.NetworkInformation.IPAddressInformation[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.NetworkInformation.IPAddressInformation)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Net.NetworkInformation.IPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      },
      {
        "name": "Remove (System.Net.NetworkInformation.IPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPGlobalProperties",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetUnicastAddresses ()",
        "returnType": "System.Net.NetworkInformation.UnicastIPAddressInformationCollection"
      },
      {
        "name": "BeginGetUnicastAddresses (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndGetUnicastAddresses (System.IAsyncResult)",
        "returnType": "System.Net.NetworkInformation.UnicastIPAddressInformationCollection"
      },
      {
        "name": "GetActiveUdpListeners ()",
        "returnType": "System.Net.IPEndPoint[]"
      },
      {
        "name": "GetActiveTcpListeners ()",
        "returnType": "System.Net.IPEndPoint[]"
      },
      {
        "name": "GetActiveTcpConnections ()",
        "returnType": "System.Net.NetworkInformation.TcpConnectionInformation[]"
      },
      {
        "name": "GetTcpIPv4Statistics ()",
        "returnType": "System.Net.NetworkInformation.TcpStatistics"
      },
      {
        "name": "GetTcpIPv6Statistics ()",
        "returnType": "System.Net.NetworkInformation.TcpStatistics"
      },
      {
        "name": "GetUdpIPv4Statistics ()",
        "returnType": "System.Net.NetworkInformation.UdpStatistics"
      },
      {
        "name": "GetUdpIPv6Statistics ()",
        "returnType": "System.Net.NetworkInformation.UdpStatistics"
      },
      {
        "name": "GetIcmpV4Statistics ()",
        "returnType": "System.Net.NetworkInformation.IcmpV4Statistics"
      },
      {
        "name": "GetIcmpV6Statistics ()",
        "returnType": "System.Net.NetworkInformation.IcmpV6Statistics"
      },
      {
        "name": "GetIPv4GlobalStatistics ()",
        "returnType": "System.Net.NetworkInformation.IPGlobalStatistics"
      },
      {
        "name": "GetIPv6GlobalStatistics ()",
        "returnType": "System.Net.NetworkInformation.IPGlobalStatistics"
      },
      {
        "name": "GetUnicastAddressesAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ],
    "staticMethods": [
      {
        "name": "GetIPGlobalProperties ()",
        "returnType": "System.Net.NetworkInformation.IPGlobalProperties"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPGlobalStatistics",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.ScopeLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPInterfaceProperties",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetIPv4Properties ()",
        "returnType": "System.Net.NetworkInformation.IPv4InterfaceProperties"
      },
      {
        "name": "GetIPv6Properties ()",
        "returnType": "System.Net.NetworkInformation.IPv6InterfaceProperties"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPInterfaceStatistics",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPv4InterfaceStatistics",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.NetworkInformation.IPAddressInformation",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.UnicastIPAddressInformation",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.UnicastIPAddressInformationCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Net.NetworkInformation.UnicastIPAddressInformation[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.NetworkInformation.UnicastIPAddressInformation)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Net.NetworkInformation.UnicastIPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      },
      {
        "name": "Remove (System.Net.NetworkInformation.UnicastIPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.NetworkInformation.IPAddressInformation",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.MulticastIPAddressInformation",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.MulticastIPAddressInformationCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Net.NetworkInformation.MulticastIPAddressInformation[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.NetworkInformation.MulticastIPAddressInformation)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Net.NetworkInformation.MulticastIPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      },
      {
        "name": "Remove (System.Net.NetworkInformation.MulticastIPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPAddressCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Net.IPAddress[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.IPAddress)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Net.IPAddress)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      },
      {
        "name": "Remove (System.Net.IPAddress)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.GatewayIPAddressInformation",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.GatewayIPAddressInformationCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Net.NetworkInformation.GatewayIPAddressInformation[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Net.NetworkInformation.GatewayIPAddressInformation)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Net.NetworkInformation.GatewayIPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      },
      {
        "name": "Remove (System.Net.NetworkInformation.GatewayIPAddressInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPv4InterfaceProperties",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.IPv6InterfaceProperties",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetScopeId (System.Net.NetworkInformation.ScopeLevel)",
        "returnType": "INT64"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkAvailabilityEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkChange",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "NetworkAvailabilityChanged",
      "NetworkAddressChanged"
    ],
    "staticMethods": [
      {
        "name": "RegisterNetworkChange (System.Net.NetworkInformation.NetworkChange)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.",
          "error": true
        }
      },
      {
        "name": "add_NetworkAvailabilityChanged (System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_NetworkAvailabilityChanged (System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_NetworkAddressChanged (System.Net.NetworkInformation.NetworkAddressChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_NetworkAddressChanged (System.Net.NetworkInformation.NetworkAddressChangedEventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkAddressChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.EventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.EventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.NetworkInformation.NetworkAvailabilityEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.NetworkInformation.NetworkAvailabilityEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Win32Exception",
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkInformationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkInformationAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkInformationPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkInformationPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddPermission (System.Net.NetworkInformation.NetworkInformationAccess)",
        "returnType": "System.Void"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkInterface",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetIPProperties ()",
        "returnType": "System.Net.NetworkInformation.IPInterfaceProperties"
      },
      {
        "name": "GetIPv4Statistics ()",
        "returnType": "System.Net.NetworkInformation.IPv4InterfaceStatistics"
      },
      {
        "name": "GetIPStatistics ()",
        "returnType": "System.Net.NetworkInformation.IPInterfaceStatistics"
      },
      {
        "name": "GetPhysicalAddress ()",
        "returnType": "System.Net.NetworkInformation.PhysicalAddress"
      },
      {
        "name": "Supports (System.Net.NetworkInformation.NetworkInterfaceComponent)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "GetAllNetworkInterfaces ()",
        "returnType": "System.Net.NetworkInformation.NetworkInterface[]"
      },
      {
        "name": "GetIsNetworkAvailable ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkInterfaceComponent",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetBiosNodeType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.OperationalStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.PhysicalAddress",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetAddressBytes ()",
        "returnType": "MEMPTR"
      }
    ],
    "staticMethods": [
      {
        "name": "Parse (CHARACTER)",
        "returnType": "System.Net.NetworkInformation.PhysicalAddress"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.PingCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Net.NetworkInformation.PingCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Net.NetworkInformation.PingCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.PingCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PingCompleted",
      "Disposed"
    ],
    "methods": [
      {
        "name": "add_PingCompleted (System.Net.NetworkInformation.PingCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PingCompleted (System.Net.NetworkInformation.PingCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsyncCancel ()",
        "returnType": "System.Void"
      },
      {
        "name": "Send (CHARACTER)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "Send (CHARACTER, INTEGER)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "Send (System.Net.IPAddress)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "Send (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "Send (CHARACTER, INTEGER, MEMPTR)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "Send (System.Net.IPAddress, INTEGER, MEMPTR)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "Send (CHARACTER, INTEGER, MEMPTR, System.Net.NetworkInformation.PingOptions)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "Send (System.Net.IPAddress, INTEGER, MEMPTR, System.Net.NetworkInformation.PingOptions)",
        "returnType": "System.Net.NetworkInformation.PingReply"
      },
      {
        "name": "SendAsync (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (CHARACTER, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (System.Net.IPAddress, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (System.Net.IPAddress, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (CHARACTER, INTEGER, MEMPTR, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (System.Net.IPAddress, INTEGER, MEMPTR, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (CHARACTER, INTEGER, MEMPTR, System.Net.NetworkInformation.PingOptions, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (System.Net.IPAddress, INTEGER, MEMPTR, System.Net.NetworkInformation.PingOptions, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SendPingAsync (System.Net.IPAddress)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendPingAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendPingAsync (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendPingAsync (CHARACTER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendPingAsync (System.Net.IPAddress, INTEGER, MEMPTR)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendPingAsync (CHARACTER, INTEGER, MEMPTR)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendPingAsync (System.Net.IPAddress, INTEGER, MEMPTR, System.Net.NetworkInformation.PingOptions)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendPingAsync (CHARACTER, INTEGER, MEMPTR, System.Net.NetworkInformation.PingOptions)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.InvalidOperationException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.PingException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.PingOptions",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.PingReply",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.PrefixOrigin",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.SuffixOrigin",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.TcpConnectionInformation",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.TcpState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.TcpStatistics",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.UdpStatistics",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache.RequestCacheLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Cache.RequestCachePolicy",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache.HttpRequestCacheLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache.HttpCacheAgeControl",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.Cache.RequestCachePolicy",
      "System.Object"
    ],
    "name": "System.Net.Cache.HttpRequestCachePolicy",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Configuration.UnicodeDecodingConformance",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Configuration.UnicodeEncodingConformance",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.AuthenticationModuleElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElementCollection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.AuthenticationModuleElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Net.Configuration.AuthenticationModuleElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Net.Configuration.AuthenticationModuleElement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Net.Configuration.AuthenticationModuleElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.AuthenticationModulesSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.BypassElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElementCollection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.BypassElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Net.Configuration.BypassElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Net.Configuration.BypassElement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Net.Configuration.BypassElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ConnectionManagementElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElementCollection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ConnectionManagementElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Net.Configuration.ConnectionManagementElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Net.Configuration.ConnectionManagementElement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Net.Configuration.ConnectionManagementElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ConnectionManagementSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.DefaultProxySection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.HttpWebRequestElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.HttpListenerElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.HttpListenerTimeoutsElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.HttpCachePolicyElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.FtpCachePolicyElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.Ipv6Element",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSectionGroup",
      "System.Object"
    ],
    "name": "System.Net.Configuration.MailSettingsSectionGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ModuleElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSectionGroup",
      "System.Object"
    ],
    "name": "System.Net.Configuration.NetSectionGroup",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetSectionGroup (System.Configuration.Configuration)",
        "returnType": "System.Net.Configuration.NetSectionGroup"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.PerformanceCountersElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ProxyElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.RequestCachingSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.SettingsSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ServicePointManagerElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.SmtpSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.SmtpNetworkElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.SocketElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebProxyScriptElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebRequestModuleElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElementCollection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebRequestModuleElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Net.Configuration.WebRequestModuleElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Net.Configuration.WebRequestModuleElement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Net.Configuration.WebRequestModuleElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationSection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebRequestModulesSection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebUtilityElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WindowsAuthenticationElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.Security.AuthenticatedStream",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.AuthenticationLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.ProtectionLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.Security.AuthenticatedStream",
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.Security.NegotiateStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AuthenticateAsClient ()",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClient (System.Net.NetworkCredential, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClient (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClient (System.Net.NetworkCredential, CHARACTER, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClient (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, CHARACTER, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginAuthenticateAsClient (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsClient (System.Net.NetworkCredential, CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsClient (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsClient (System.Net.NetworkCredential, CHARACTER, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsClient (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, CHARACTER, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndAuthenticateAsClient (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsServer ()",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsServer (System.Net.NetworkCredential, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsServer (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginAuthenticateAsServer (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsServer (System.Net.NetworkCredential, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsServer (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndAuthenticateAsServer (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "AuthenticateAsClientAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsClientAsync (System.Net.NetworkCredential, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsClientAsync (System.Net.NetworkCredential, CHARACTER, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsClientAsync (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsClientAsync (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ChannelBinding, CHARACTER, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsServerAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsServerAsync (System.Net.NetworkCredential, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsServerAsync (System.Net.NetworkCredential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy, System.Net.Security.ProtectionLevel, System.Security.Principal.TokenImpersonationLevel)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.SslPolicyErrors",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.EncryptionPolicy",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.Security.RemoteCertificateValidationCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Security.Cryptography.X509Certificates.X509Certificate, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (System.Object, System.Security.Cryptography.X509Certificates.X509Certificate, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.Security.LocalCertificateSelectionCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Cryptography.X509Certificates.X509Certificate, System.String[])",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate"
      },
      {
        "name": "BeginInvoke (System.Object, CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Cryptography.X509Certificates.X509Certificate, System.String[], System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.Security.AuthenticatedStream",
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.Security.SslStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AuthenticateAsClient (CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Authentication.SslProtocols, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClient (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginAuthenticateAsClient (CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsClient (CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsClient (CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Authentication.SslProtocols, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndAuthenticateAsClient (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate, LOGICAL, System.Security.Authentication.SslProtocols, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate, LOGICAL, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate, LOGICAL, System.Security.Authentication.SslProtocols, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndAuthenticateAsServer (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClientAsync (CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, LOGICAL)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate, LOGICAL, LOGICAL)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClient (CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AuthenticateAsClientAsync (CHARACTER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsClientAsync (CHARACTER, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Authentication.SslProtocols, LOGICAL)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate, LOGICAL, System.Security.Authentication.SslProtocols, LOGICAL)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ShutdownAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Write (MEMPTR)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Win32Exception",
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.AddressFamily",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.IOControlCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.IPProtectionLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.LingerOption",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.MulticastOption",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.IPv6MulticastOption",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.Sockets.NetworkStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Read (output MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Close (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.ProtocolFamily",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.ProtocolType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SelectMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketInformationOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketInformation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Connect (System.Net.EndPoint)",
        "returnType": "System.Void"
      },
      {
        "name": "Close (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Send (MEMPTR, INTEGER, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "Send (MEMPTR, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "Send (MEMPTR)",
        "returnType": "INTEGER"
      },
      {
        "name": "Send (System.Collections.Generic.IList)",
        "returnType": "INTEGER"
      },
      {
        "name": "Send (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "SendFile (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Send (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "SendTo (MEMPTR, INTEGER, System.Net.Sockets.SocketFlags, System.Net.EndPoint)",
        "returnType": "INTEGER"
      },
      {
        "name": "SendTo (MEMPTR, System.Net.Sockets.SocketFlags, System.Net.EndPoint)",
        "returnType": "INTEGER"
      },
      {
        "name": "SendTo (MEMPTR, System.Net.EndPoint)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (MEMPTR, INTEGER, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (MEMPTR, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (MEMPTR)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (System.Collections.Generic.IList)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReceiveFrom (MEMPTR, INTEGER, System.Net.Sockets.SocketFlags, System.Net.EndPoint&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReceiveFrom (MEMPTR, System.Net.Sockets.SocketFlags, System.Net.EndPoint&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReceiveFrom (MEMPTR, System.Net.EndPoint&)",
        "returnType": "INTEGER"
      },
      {
        "name": "IOControl (System.Net.Sockets.IOControlCode, MEMPTR, MEMPTR)",
        "returnType": "INTEGER"
      },
      {
        "name": "SetIPProtectionLevel (System.Net.Sockets.IPProtectionLevel)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSocketOption (System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSocketOption (System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginSendFile (CHARACTER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginDisconnect (LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginSend (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginSendFile (CHARACTER, MEMPTR, MEMPTR, System.Net.Sockets.TransmitFileOptions, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginSend (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndSend (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginReceive (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginReceive (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndReceive (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginAccept (INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Bind (System.Net.EndPoint)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (System.Net.IPAddress[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Listen (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Accept ()",
        "returnType": "System.Net.Sockets.Socket"
      },
      {
        "name": "Send (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&)",
        "returnType": "INTEGER"
      },
      {
        "name": "SendFile (CHARACTER, MEMPTR, MEMPTR, System.Net.Sockets.TransmitFileOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "SendTo (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, System.Net.EndPoint)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReceiveMessageFrom (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags&, System.Net.EndPoint&, output System.Net.Sockets.IPPacketInformation&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReceiveFrom (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, System.Net.EndPoint&)",
        "returnType": "INTEGER"
      },
      {
        "name": "IOControl (INTEGER, MEMPTR, MEMPTR)",
        "returnType": "INTEGER"
      },
      {
        "name": "SetSocketOption (System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSocketOption (System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSocketOption (System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName)",
        "returnType": "System.Object"
      },
      {
        "name": "GetSocketOption (System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "GetSocketOption (System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, INTEGER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "BeginConnect (System.Net.EndPoint, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "DuplicateAndClose (INTEGER)",
        "returnType": "System.Net.Sockets.SocketInformation"
      },
      {
        "name": "BeginConnect (CHARACTER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginConnect (System.Net.IPAddress, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginConnect (System.Net.IPAddress[], INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "Disconnect (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "EndDisconnect (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginSend (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndSendFile (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginSendTo (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, System.Net.EndPoint, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndSendTo (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginReceive (System.Collections.Generic.IList, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginReceiveMessageFrom (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, System.Net.EndPoint&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndReceiveMessageFrom (System.IAsyncResult, System.Net.Sockets.SocketFlags&, System.Net.EndPoint&, output System.Net.Sockets.IPPacketInformation&)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginReceiveFrom (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, System.Net.EndPoint&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndReceiveFrom (System.IAsyncResult, System.Net.EndPoint&)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginAccept (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginAccept (System.Net.Sockets.Socket, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndAccept (System.IAsyncResult)",
        "returnType": "System.Net.Sockets.Socket"
      },
      {
        "name": "EndAccept (output System.Byte[]&, System.IAsyncResult)",
        "returnType": "System.Net.Sockets.Socket"
      },
      {
        "name": "EndAccept (output System.Byte[]&, output System.Int32&, System.IAsyncResult)",
        "returnType": "System.Net.Sockets.Socket"
      },
      {
        "name": "Shutdown (System.Net.Sockets.SocketShutdown)",
        "returnType": "System.Void"
      },
      {
        "name": "AcceptAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConnectAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "DisconnectAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ReceiveAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ReceiveFromAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ReceiveMessageFromAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SendAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SendPacketsAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SendToAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Send (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Receive (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&)",
        "returnType": "INTEGER"
      },
      {
        "name": "Poll (INTEGER, System.Net.Sockets.SelectMode)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EndConnect (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginSend (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndSend (System.IAsyncResult, output System.Net.Sockets.SocketError&)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginReceive (MEMPTR, INTEGER, INTEGER, System.Net.Sockets.SocketFlags, output System.Net.Sockets.SocketError&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndReceive (System.IAsyncResult, output System.Net.Sockets.SocketError&)",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "CancelConnectAsync (System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "Select (MEMPTR, MEMPTR, MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ConnectAsync (System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType, System.Net.Sockets.SocketAsyncEventArgs)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketAsyncOperation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.SendPacketsElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketClientAccessPolicyProtocol",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketAsyncEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Completed"
    ],
    "methods": [
      {
        "name": "add_Completed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Completed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "SetBuffer (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetBuffer (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketError",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketOptionLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketOptionName",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketShutdown",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketReceiveFromResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketReceiveMessageFromResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketTaskExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "AcceptAsync (System.Net.Sockets.Socket)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AcceptAsync (System.Net.Sockets.Socket, System.Net.Sockets.Socket)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ConnectAsync (System.Net.Sockets.Socket, System.Net.EndPoint)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ConnectAsync (System.Net.Sockets.Socket, System.Net.IPAddress, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ConnectAsync (System.Net.Sockets.Socket, System.Net.IPAddress[], INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ConnectAsync (System.Net.Sockets.Socket, CHARACTER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReceiveAsync (System.Net.Sockets.Socket, System.Collections.Generic.IList, System.Net.Sockets.SocketFlags)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendAsync (System.Net.Sockets.Socket, System.Collections.Generic.IList, System.Net.Sockets.SocketFlags)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReceiveAsync (System.Net.Sockets.Socket, System.ArraySegment, System.Net.Sockets.SocketFlags)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReceiveFromAsync (System.Net.Sockets.Socket, System.ArraySegment, System.Net.Sockets.SocketFlags, System.Net.EndPoint)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReceiveMessageFromAsync (System.Net.Sockets.Socket, System.ArraySegment, System.Net.Sockets.SocketFlags, System.Net.EndPoint)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendAsync (System.Net.Sockets.Socket, System.ArraySegment, System.Net.Sockets.SocketFlags)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendToAsync (System.Net.Sockets.Socket, System.ArraySegment, System.Net.Sockets.SocketFlags, System.Net.EndPoint)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.TcpClient",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (System.Net.IPEndPoint)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (System.Net.IPAddress[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginConnect (CHARACTER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginConnect (System.Net.IPAddress, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginConnect (System.Net.IPAddress[], INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndConnect (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "ConnectAsync (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ConnectAsync (CHARACTER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ConnectAsync (System.Net.IPAddress[], INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "GetStream ()",
        "returnType": "System.Net.Sockets.NetworkStream"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.TcpListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AllowNatTraversal (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Start ()",
        "returnType": "System.Void"
      },
      {
        "name": "Pending ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Start (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Stop ()",
        "returnType": "System.Void"
      },
      {
        "name": "AcceptSocket ()",
        "returnType": "System.Net.Sockets.Socket"
      },
      {
        "name": "AcceptTcpClient ()",
        "returnType": "System.Net.Sockets.TcpClient"
      },
      {
        "name": "BeginAcceptSocket (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndAcceptSocket (System.IAsyncResult)",
        "returnType": "System.Net.Sockets.Socket"
      },
      {
        "name": "BeginAcceptTcpClient (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndAcceptTcpClient (System.IAsyncResult)",
        "returnType": "System.Net.Sockets.TcpClient"
      },
      {
        "name": "AcceptSocketAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "AcceptTcpClientAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (INTEGER)",
        "returnType": "System.Net.Sockets.TcpListener"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.TransmitFileOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.UdpClient",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AllowNatTraversal (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (CHARACTER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Connect (System.Net.IPEndPoint)",
        "returnType": "System.Void"
      },
      {
        "name": "Send (MEMPTR, INTEGER, System.Net.IPEndPoint)",
        "returnType": "INTEGER"
      },
      {
        "name": "Send (MEMPTR, INTEGER, CHARACTER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Send (MEMPTR, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginSend (MEMPTR, INTEGER, System.Net.IPEndPoint, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginSend (MEMPTR, INTEGER, CHARACTER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginSend (MEMPTR, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndSend (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginReceive (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "JoinMulticastGroup (System.Net.IPAddress, System.Net.IPAddress)",
        "returnType": "System.Void"
      },
      {
        "name": "JoinMulticastGroup (INTEGER, System.Net.IPAddress)",
        "returnType": "System.Void"
      },
      {
        "name": "JoinMulticastGroup (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "DropMulticastGroup (System.Net.IPAddress, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Receive (System.Net.IPEndPoint&)",
        "returnType": "MEMPTR"
      },
      {
        "name": "EndReceive (System.IAsyncResult, System.Net.IPEndPoint&)",
        "returnType": "MEMPTR"
      },
      {
        "name": "JoinMulticastGroup (System.Net.IPAddress)",
        "returnType": "System.Void"
      },
      {
        "name": "DropMulticastGroup (System.Net.IPAddress)",
        "returnType": "System.Void"
      },
      {
        "name": "SendAsync (MEMPTR, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendAsync (MEMPTR, INTEGER, System.Net.IPEndPoint)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "SendAsync (MEMPTR, INTEGER, CHARACTER, INTEGER)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReceiveAsync ()",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.UdpReceiveResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Net.Sockets.UdpReceiveResult)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Net.Sockets.UdpReceiveResult, System.Net.Sockets.UdpReceiveResult)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Net.Sockets.UdpReceiveResult, System.Net.Sockets.UdpReceiveResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.IPPacketInformation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Net.Sockets.IPPacketInformation, System.Net.Sockets.IPPacketInformation)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Net.Sockets.IPPacketInformation, System.Net.Sockets.IPPacketInformation)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.Windows.Input.ICommand",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "CanExecuteChanged"
    ],
    "methods": [
      {
        "name": "add_CanExecuteChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_CanExecuteChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "CanExecute (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Execute (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Windows.Markup.ValueSerializerAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Media.SoundPlayer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "LoadCompleted",
      "SoundLocationChanged",
      "StreamChanged",
      "Disposed"
    ],
    "methods": [
      {
        "name": "LoadAsync ()",
        "returnType": "System.Void"
      },
      {
        "name": "Load ()",
        "returnType": "System.Void"
      },
      {
        "name": "Play ()",
        "returnType": "System.Void"
      },
      {
        "name": "PlaySync ()",
        "returnType": "System.Void"
      },
      {
        "name": "PlayLooping ()",
        "returnType": "System.Void"
      },
      {
        "name": "Stop ()",
        "returnType": "System.Void"
      },
      {
        "name": "add_LoadCompleted (System.ComponentModel.AsyncCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_LoadCompleted (System.ComponentModel.AsyncCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SoundLocationChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SoundLocationChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_StreamChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_StreamChanged (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SystemSounds",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SystemSound",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Play ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Specialized.BitVector32",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateMask ()",
        "returnType": "INTEGER"
      },
      {
        "name": "CreateMask (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "CreateSection (INTEGER)",
        "returnType": "System.Collections.Specialized.BitVector32+Section"
      },
      {
        "name": "CreateSection (INTEGER, System.Collections.Specialized.BitVector32+Section)",
        "returnType": "System.Collections.Specialized.BitVector32+Section"
      },
      {
        "name": "ToString (System.Collections.Specialized.BitVector32)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.CollectionsUtil",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CreateCaseInsensitiveHashtable ()",
        "returnType": "System.Collections.Hashtable"
      },
      {
        "name": "CreateCaseInsensitiveHashtable (INTEGER)",
        "returnType": "System.Collections.Hashtable"
      },
      {
        "name": "CreateCaseInsensitiveHashtable (System.Collections.IDictionary)",
        "returnType": "System.Collections.Hashtable"
      },
      {
        "name": "CreateCaseInsensitiveSortedList ()",
        "returnType": "System.Collections.SortedList"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.HybridDictionary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Collections.Specialized.INotifyCollectionChanged",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "CollectionChanged"
    ],
    "methods": [
      {
        "name": "add_CollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_CollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Collections.Specialized.IOrderedDictionary",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "Insert (INTEGER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.ListDictionary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NameObjectCollectionBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.Specialized.NameObjectCollectionBase",
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NameValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Collections.Specialized.NameValueCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "HasKeys ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Get (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetValues (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "Set (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Get (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetValues (INTEGER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetKey (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NotifyCollectionChangedAction",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NotifyCollectionChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NotifyCollectionChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.OrderedDictionary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "AsReadOnly ()",
        "returnType": "System.Collections.Specialized.OrderedDictionary"
      },
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Insert (INTEGER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IDictionaryEnumerator"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.String[])",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.String[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Specialized.StringEnumerator"
      },
      {
        "name": "IndexOf (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringDictionary",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ContainsKey (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ObservableCollection`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "CollectionChanged"
    ],
    "methods": [
      {
        "name": "Move (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "add_CollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_CollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ReadOnlyObservableCollection`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.LinkedList`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddAfter (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "AddFirst (?)",
        "returnType": "?"
      },
      {
        "name": "AddFirst (?)",
        "returnType": "System.Void"
      },
      {
        "name": "AddLast (?)",
        "returnType": "?"
      },
      {
        "name": "AddLast (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Find (?)",
        "returnType": "?"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove (?)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveFirst ()",
        "returnType": "System.Void"
      },
      {
        "name": "AddAfter (?, ?)",
        "returnType": "?"
      },
      {
        "name": "AddBefore (?, ?)",
        "returnType": "?"
      },
      {
        "name": "AddBefore (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "FindLast (?)",
        "returnType": "?"
      },
      {
        "name": "RemoveLast ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      },
      {
        "name": "OnDeserialization (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.LinkedListNode`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.Queue`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Enqueue (?)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Dequeue ()",
        "returnType": "?"
      },
      {
        "name": "Peek ()",
        "returnType": "?"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "TrimExcess ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedList`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ContainsKey (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IndexOfKey (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "IndexOfValue (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "TrimExcess ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.Stack`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Peek ()",
        "returnType": "?"
      },
      {
        "name": "Pop ()",
        "returnType": "?"
      },
      {
        "name": "Push (?)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "TrimExcess ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ContainsKey (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ContainsValue (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "Add (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (?, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "UnionWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "IntersectWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "ExceptWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "SymmetricExceptWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "IsSubsetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsProperSubsetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSupersetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsProperSupersetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetEquals (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Overlaps (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveWhere (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reverse ()",
        "returnType": "?"
      },
      {
        "name": "GetViewBetween (?, ?)",
        "returnType": "System.Collections.Generic.SortedSet"
      },
      {
        "name": "TryGetValue (?, output ?)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateSetComparer ()",
        "returnType": "?"
      },
      {
        "name": "CreateSetComparer (?)",
        "returnType": "?"
      }
    ]
  },
  {
    "name": "System.Collections.Generic.ISet`1",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "UnionWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "IntersectWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "ExceptWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "SymmetricExceptWith (?)",
        "returnType": "System.Void"
      },
      {
        "name": "IsSubsetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsSupersetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsProperSupersetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsProperSubsetOf (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Overlaps (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SetEquals (?)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.BlockingCollection`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "GetConsumingEnumerable ()",
        "returnType": "?"
      },
      {
        "name": "GetConsumingEnumerable (System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "Add (?, System.Threading.CancellationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "TryAdd (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryAdd (?, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryAdd (?, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryAdd (?, INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Take ()",
        "returnType": "?"
      },
      {
        "name": "Take (System.Threading.CancellationToken)",
        "returnType": "?"
      },
      {
        "name": "TryTake (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryTake (output ?, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryTake (output ?, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryTake (output ?, INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompleteAdding ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "AddToAny (System.Collections.Concurrent.BlockingCollection, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddToAny (System.Collections.Concurrent.BlockingCollection, ?, System.Threading.CancellationToken)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryAddToAny (System.Collections.Concurrent.BlockingCollection, ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryAddToAny (System.Collections.Concurrent.BlockingCollection, ?, System.TimeSpan)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryAddToAny (System.Collections.Concurrent.BlockingCollection, ?, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryAddToAny (System.Collections.Concurrent.BlockingCollection, ?, INTEGER, System.Threading.CancellationToken)",
        "returnType": "INTEGER"
      },
      {
        "name": "TakeFromAny (System.Collections.Concurrent.BlockingCollection, output ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "TakeFromAny (System.Collections.Concurrent.BlockingCollection, output ?, System.Threading.CancellationToken)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryTakeFromAny (System.Collections.Concurrent.BlockingCollection, output ?)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryTakeFromAny (System.Collections.Concurrent.BlockingCollection, output ?, System.TimeSpan)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryTakeFromAny (System.Collections.Concurrent.BlockingCollection, output ?, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "TryTakeFromAny (System.Collections.Concurrent.BlockingCollection, output ?, INTEGER, System.Threading.CancellationToken)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentBag`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "TryTake (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryPeek (output ?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ToArray ()",
        "returnType": "?"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Threading.WaitHandle",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Threading.Semaphore",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Release ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Release (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetAccessControl ()",
        "returnType": "System.Security.AccessControl.SemaphoreSecurity"
      },
      {
        "name": "SetAccessControl (System.Security.AccessControl.SemaphoreSecurity)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "OpenExisting (CHARACTER)",
        "returnType": "System.Threading.Semaphore"
      },
      {
        "name": "TryOpenExisting (CHARACTER, output System.Threading.Semaphore&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryOpenExisting (CHARACTER, System.Security.AccessControl.SemaphoreRights, output System.Threading.Semaphore&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "OpenExisting (CHARACTER, System.Security.AccessControl.SemaphoreRights)",
        "returnType": "System.Threading.Semaphore"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Threading.BarrierPostPhaseException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Threading.Barrier",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddParticipant ()",
        "returnType": "INT64"
      },
      {
        "name": "AddParticipants (INTEGER)",
        "returnType": "INT64"
      },
      {
        "name": "RemoveParticipant ()",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveParticipants (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SignalAndWait ()",
        "returnType": "System.Void"
      },
      {
        "name": "SignalAndWait (System.Threading.CancellationToken)",
        "returnType": "System.Void"
      },
      {
        "name": "SignalAndWait (System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignalAndWait (System.TimeSpan, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignalAndWait (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "SignalAndWait (INTEGER, System.Threading.CancellationToken)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Threading.ThreadExceptionEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Threading.ThreadExceptionEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Threading.ThreadExceptionEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Threading.ThreadExceptionEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.Versioning.FrameworkName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Runtime.Versioning.FrameworkName)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Runtime.Versioning.FrameworkName, System.Runtime.Versioning.FrameworkName)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Runtime.Versioning.FrameworkName, System.Runtime.Versioning.FrameworkName)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.HandleCollector",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add ()",
        "returnType": "System.Void"
      },
      {
        "name": "Remove ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.DefaultParameterValueAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.StandardOleMarshalObject",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.ADVF",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.DATADIR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.DVASPECT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.FORMATETC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IAdviseSink",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "OnDataChange (System.Runtime.InteropServices.ComTypes.FORMATETC&, System.Runtime.InteropServices.ComTypes.STGMEDIUM&)",
        "returnType": "System.Void"
      },
      {
        "name": "OnViewChange (INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "OnRename (System.Runtime.InteropServices.ComTypes.IMoniker)",
        "returnType": "System.Void"
      },
      {
        "name": "OnSave ()",
        "returnType": "System.Void"
      },
      {
        "name": "OnClose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IDataObject",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetData (System.Runtime.InteropServices.ComTypes.FORMATETC&, output System.Runtime.InteropServices.ComTypes.STGMEDIUM&)",
        "returnType": "System.Void"
      },
      {
        "name": "QueryGetData (System.Runtime.InteropServices.ComTypes.FORMATETC&)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetDataHere (System.Runtime.InteropServices.ComTypes.FORMATETC&, System.Runtime.InteropServices.ComTypes.STGMEDIUM&)",
        "returnType": "System.Void"
      },
      {
        "name": "GetCanonicalFormatEtc (System.Runtime.InteropServices.ComTypes.FORMATETC&, output System.Runtime.InteropServices.ComTypes.FORMATETC&)",
        "returnType": "INTEGER"
      },
      {
        "name": "SetData (System.Runtime.InteropServices.ComTypes.FORMATETC&, System.Runtime.InteropServices.ComTypes.STGMEDIUM&, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR)",
        "returnType": "System.Runtime.InteropServices.ComTypes.IEnumFORMATETC"
      },
      {
        "name": "DAdvise (System.Runtime.InteropServices.ComTypes.FORMATETC&, System.Runtime.InteropServices.ComTypes.ADVF, System.Runtime.InteropServices.ComTypes.IAdviseSink, output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "DUnadvise (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "EnumDAdvise (output System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IEnumFORMATETC",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.ComTypes.FORMATETC[], output System.Int32[])",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.ComTypes.IEnumFORMATETC&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Runtime.InteropServices.ComTypes.IEnumSTATDATA",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Next (INTEGER, output System.Runtime.InteropServices.ComTypes.STATDATA[], output System.Int32[])",
        "returnType": "INTEGER"
      },
      {
        "name": "Skip (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Reset ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Clone (output System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.STATDATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.STGMEDIUM",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.ComTypes.TYMED",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.Reflection.ICustomTypeProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetCustomType ()",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.InvalidDataException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.NotifyFilters",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.IO.ErrorEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetException ()",
        "returnType": "System.Exception"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.ErrorEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.IO.ErrorEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.IO.ErrorEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.IO.FileSystemEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.FileSystemEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.IO.FileSystemEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.IO.FileSystemEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.FileSystemWatcher",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Changed",
      "Created",
      "Deleted",
      "Error",
      "Renamed",
      "Disposed"
    ],
    "methods": [
      {
        "name": "BeginInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "add_Changed (System.IO.FileSystemEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Changed (System.IO.FileSystemEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_Created (System.IO.FileSystemEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Created (System.IO.FileSystemEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_Deleted (System.IO.FileSystemEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Deleted (System.IO.FileSystemEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_Error (System.IO.ErrorEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Error (System.IO.ErrorEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_Renamed (System.IO.RenamedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Renamed (System.IO.RenamedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "WaitForChanged (System.IO.WatcherChangeTypes)",
        "returnType": "System.IO.WaitForChangedResult"
      },
      {
        "name": "WaitForChanged (System.IO.WatcherChangeTypes, INTEGER)",
        "returnType": "System.IO.WaitForChangedResult"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.IO.InternalBufferOverflowException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.DescriptionAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.IO.IODescriptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.FileSystemEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.IO.RenamedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.RenamedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.IO.RenamedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.IO.RenamedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.WaitForChangedResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.WatcherChangeTypes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Ports.Handshake",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Ports.Parity",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialError",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialErrorReceivedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialErrorReceivedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.IO.Ports.SerialErrorReceivedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.IO.Ports.SerialErrorReceivedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialPinChange",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialPinChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialPinChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.IO.Ports.SerialPinChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.IO.Ports.SerialPinChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialPort",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "ErrorReceived",
      "PinChanged",
      "DataReceived",
      "Disposed"
    ],
    "methods": [
      {
        "name": "add_ErrorReceived (System.IO.Ports.SerialErrorReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ErrorReceived (System.IO.Ports.SerialErrorReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PinChanged (System.IO.Ports.SerialPinChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PinChanged (System.IO.Ports.SerialPinChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DataReceived (System.IO.Ports.SerialDataReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DataReceived (System.IO.Ports.SerialDataReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "DiscardInBuffer ()",
        "returnType": "System.Void"
      },
      {
        "name": "DiscardOutBuffer ()",
        "returnType": "System.Void"
      },
      {
        "name": "Open ()",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadChar ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (System.Char[], INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadExisting ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadLine ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ReadTo (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "GetPortNames ()",
        "returnType": "System.String[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialData",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialDataReceivedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialDataReceivedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.IO.Ports.SerialDataReceivedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.IO.Ports.SerialDataReceivedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Ports.StopBits",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.CompressionMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.CompressionLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.Compression.DeflateStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.IO.Compression.GZipStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.SecureStringMarshal",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "SecureStringToCoTaskMemAnsi (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SecureStringToGlobalAllocAnsi (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SecureStringToCoTaskMemUnicode (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "SecureStringToGlobalAllocUnicode (System.Security.SecureString)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Claims.DynamicRoleClaimProvider",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "AddDynamicRoleClaims (System.Security.Claims.ClaimsIdentity, System.Collections.Generic.IEnumerable)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "Use ClaimsAuthenticationManager to add claims to a ClaimsIdentity",
          "error": true
        }
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.Authentication.AuthenticationException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Authentication.AuthenticationException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Security.Authentication.InvalidCredentialException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.SslProtocols",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExchangeAlgorithmType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.CipherAlgorithmType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.HashAlgorithmType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.ChannelBinding",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.ChannelBindingKind",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.PolicyEnforcement",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.ProtectionScenario",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.ReadOnlyCollectionBase",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.ServiceNameCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Merge (CHARACTER)",
        "returnType": "System.Security.Authentication.ExtendedProtection.ServiceNameCollection"
      },
      {
        "name": "Merge (CHARACTER)",
        "returnType": "System.Security.Authentication.ExtendedProtection.ServiceNameCollection"
      },
      {
        "name": "Contains (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.TokenBindingType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.TokenBinding",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetRawTokenBindingId ()",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BuildPolicy ()",
        "returnType": "System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElementCollection",
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationElement",
      "System.Object"
    ],
    "name": "System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsnEncodedData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyFrom (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "System.Void"
      },
      {
        "name": "Format (LOGICAL)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsnEncodedDataCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Cryptography.AsnEncodedDataEnumerator"
      },
      {
        "name": "CopyTo (System.Security.Cryptography.AsnEncodedData[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.AsnEncodedDataEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.OidGroup",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.Oid",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "FromFriendlyName (CHARACTER, System.Security.Cryptography.OidGroup)",
        "returnType": "System.Security.Cryptography.Oid"
      },
      {
        "name": "FromOidValue (CHARACTER, System.Security.Cryptography.OidGroup)",
        "returnType": "System.Security.Cryptography.Oid"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.OidCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Cryptography.Oid)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Cryptography.OidEnumerator"
      },
      {
        "name": "CopyTo (System.Security.Cryptography.Oid[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.OidEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsnEncodedData",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X500DistinguishedName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Decode (System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Format (LOGICAL)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509NameType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509IncludeOption",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.PublicKey",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.X509Certificates.X509Certificate",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Certificate2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "Import (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (MEMPTR, CHARACTER, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (MEMPTR, System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (CHARACTER, CHARACTER, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (CHARACTER, System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Verify ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString (LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType, LOGICAL)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetCertContentType (MEMPTR)",
        "returnType": "System.Security.Cryptography.X509Certificates.X509ContentType"
      },
      {
        "name": "GetCertContentType (CHARACTER)",
        "returnType": "System.Security.Cryptography.X509Certificates.X509ContentType"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509FindType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.X509Certificates.X509CertificateCollection",
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Certificate2Collection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Cryptography.X509Certificates.X509Certificate2)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.Security.Cryptography.X509Certificates.X509Certificate2[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Security.Cryptography.X509Certificates.X509Certificate2)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Insert (INTEGER, System.Security.Cryptography.X509Certificates.X509Certificate2)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator"
      },
      {
        "name": "Remove (System.Security.Cryptography.X509Certificates.X509Certificate2)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (System.Security.Cryptography.X509Certificates.X509Certificate2[])",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection)",
        "returnType": "System.Void"
      },
      {
        "name": "Find (System.Security.Cryptography.X509Certificates.X509FindType, System.Object, LOGICAL)",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Certificate2Collection"
      },
      {
        "name": "Import (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (MEMPTR, CHARACTER, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      },
      {
        "name": "Import (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Export (System.Security.Cryptography.X509Certificates.X509ContentType)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Export (System.Security.Cryptography.X509Certificates.X509ContentType, CHARACTER)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Import (CHARACTER, CHARACTER, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ChainStatusFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ChainStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Chain",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Build (System.Security.Cryptography.X509Certificates.X509Certificate2)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Create ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509Chain"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ChainElement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ChainElementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator"
      },
      {
        "name": "CopyTo (System.Security.Cryptography.X509Certificates.X509ChainElement[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509RevocationMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509RevocationFlag",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509VerificationFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ChainPolicy",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.AsnEncodedData",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Extension",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyFrom (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509KeyUsageFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.X509Certificates.X509Extension",
      "System.Security.Cryptography.AsnEncodedData",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509KeyUsageExtension",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyFrom (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.X509Certificates.X509Extension",
      "System.Security.Cryptography.AsnEncodedData",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyFrom (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.X509Certificates.X509Extension",
      "System.Security.Cryptography.AsnEncodedData",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyFrom (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Cryptography.X509Certificates.X509Extension",
      "System.Security.Cryptography.AsnEncodedData",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyFrom (System.Security.Cryptography.AsnEncodedData)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ExtensionCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Cryptography.X509Certificates.X509Extension)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator"
      },
      {
        "name": "CopyTo (System.Security.Cryptography.X509Certificates.X509Extension[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.StoreLocation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.OpenFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.StoreName",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Store",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Security.Cryptography.X509Certificates.X509Certificate2)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Security.Cryptography.X509Certificates.X509Certificate2)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection)",
        "returnType": "System.Void"
      },
      {
        "name": "Open (System.Security.Cryptography.X509Certificates.OpenFlags)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509CertificateCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.Security.Cryptography.X509Certificates.X509Certificate[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Security.Cryptography.X509Certificates.X509CertificateCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Security.Cryptography.X509Certificates.X509Certificate[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator"
      },
      {
        "name": "Remove (System.Security.Cryptography.X509Certificates.X509Certificate)",
        "returnType": "System.Void"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.StorePermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.StorePermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.StorePermissionFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Permissions.TypeDescriptorPermissionFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.TypeDescriptorPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Security.Permissions.TypeDescriptorPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Security.Permissions.ResourcePermissionBase",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Copy ()",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "Intersect (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "IsSubsetOf (System.Security.IPermission)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsUnrestricted ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Union (System.Security.IPermission)",
        "returnType": "System.Security.IPermission"
      },
      {
        "name": "FromXml (System.Security.SecurityElement)",
        "returnType": "System.Void"
      },
      {
        "name": "ToXml ()",
        "returnType": "System.Security.SecurityElement"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Permissions.ResourcePermissionBaseEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.SemaphoreRights",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AccessRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.SemaphoreAccessRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.AuditRule",
      "System.Security.AccessControl.AuthorizationRule",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.SemaphoreAuditRule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.AccessControl.NativeObjectSecurity",
      "System.Security.AccessControl.CommonObjectSecurity",
      "System.Security.AccessControl.ObjectSecurity",
      "System.Object"
    ],
    "name": "System.Security.AccessControl.SemaphoreSecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AccessRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)",
        "returnType": "System.Security.AccessControl.AccessRule"
      },
      {
        "name": "AuditRuleFactory (System.Security.Principal.IdentityReference, INTEGER, LOGICAL, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)",
        "returnType": "System.Security.AccessControl.AuditRule"
      },
      {
        "name": "AddAccessRule (System.Security.AccessControl.SemaphoreAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAccessRule (System.Security.AccessControl.SemaphoreAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetAccessRule (System.Security.AccessControl.SemaphoreAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRule (System.Security.AccessControl.SemaphoreAccessRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAccessRuleAll (System.Security.AccessControl.SemaphoreAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAccessRuleSpecific (System.Security.AccessControl.SemaphoreAccessRule)",
        "returnType": "System.Void"
      },
      {
        "name": "AddAuditRule (System.Security.AccessControl.SemaphoreAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "SetAuditRule (System.Security.AccessControl.SemaphoreAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRule (System.Security.AccessControl.SemaphoreAuditRule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAuditRuleAll (System.Security.AccessControl.SemaphoreAuditRule)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAuditRuleSpecific (System.Security.AccessControl.SemaphoreAuditRule)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.Switch",
      "System.Object"
    ],
    "name": "System.Diagnostics.BooleanSwitch",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Diagnostics.TextWriterTraceListener",
      "System.Diagnostics.TraceListener",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.ConsoleTraceListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.CorrelationManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "StartLogicalOperation (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "StartLogicalOperation ()",
        "returnType": "System.Void"
      },
      {
        "name": "StopLogicalOperation ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Debug",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL, CHARACTER, CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Print (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Print (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Indent ()",
        "returnType": "System.Void"
      },
      {
        "name": "Unindent ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.TraceListener",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.DefaultTraceListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Fail (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.TextWriterTraceListener",
      "System.Diagnostics.TraceListener",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.DelimitedListTraceListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.TraceFilter",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventTypeFilter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ShouldTrace (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[], System.Object, System.Object[])",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.TraceFilter",
      "System.Object"
    ],
    "name": "System.Diagnostics.SourceFilter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ShouldTrace (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[], System.Object, System.Object[])",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SourceLevels",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Diagnostics.Switch",
      "System.Object"
    ],
    "name": "System.Diagnostics.SourceSwitch",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ShouldTrace (System.Diagnostics.TraceEventType)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Switch",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.SwitchAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetAll (System.Reflection.Assembly)",
        "returnType": "System.Diagnostics.SwitchAttribute[]"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.SwitchLevelAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Diagnostics.TraceListener",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.TextWriterTraceListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Trace",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Assert (LOGICAL, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Refresh ()",
        "returnType": "System.Void"
      },
      {
        "name": "TraceInformation (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceInformation (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceWarning (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceWarning (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceError (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceError (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteIf (LOGICAL, System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineIf (LOGICAL, System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Indent ()",
        "returnType": "System.Void"
      },
      {
        "name": "Unindent ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceEventCache",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceEventType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceFilter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ShouldTrace (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[], System.Object, System.Object[])",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceListener",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceTransfer (System.Diagnostics.TraceEventCache, CHARACTER, INTEGER, CHARACTER, System.Guid)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceListenerCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Diagnostics.TraceListener)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.Diagnostics.TraceListener[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Diagnostics.TraceListenerCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Diagnostics.TraceListener)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Diagnostics.TraceListener[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.Diagnostics.TraceListener)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Diagnostics.TraceListener)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Diagnostics.TraceListener)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceSource",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventType, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventType, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventType, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventType, INTEGER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceInformation (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceInformation (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceTransfer (INTEGER, CHARACTER, System.Guid)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.Switch",
      "System.Object"
    ],
    "name": "System.Diagnostics.TraceSwitch",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Diagnostics.TextWriterTraceListener",
      "System.Diagnostics.TraceListener",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.XmlWriterTraceListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceTransfer (System.Diagnostics.TraceEventCache, CHARACTER, INTEGER, CHARACTER, System.Guid)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Fail (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.StackFrameExtensions",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "HasNativeImage (System.Diagnostics.StackFrame)",
        "returnType": "LOGICAL"
      },
      {
        "name": "HasMethod (System.Diagnostics.StackFrame)",
        "returnType": "LOGICAL"
      },
      {
        "name": "HasILOffset (System.Diagnostics.StackFrame)",
        "returnType": "LOGICAL"
      },
      {
        "name": "HasSource (System.Diagnostics.StackFrame)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetNativeIP (System.Diagnostics.StackFrame)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "GetNativeImageBase (System.Diagnostics.StackFrame)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.CounterCreationData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.Diagnostics.CounterCreationDataCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Diagnostics.CounterCreationData)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.Diagnostics.CounterCreationData[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Diagnostics.CounterCreationDataCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Diagnostics.CounterCreationData)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Diagnostics.CounterCreationData[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Diagnostics.CounterCreationData)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Diagnostics.CounterCreationData)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Diagnostics.CounterCreationData)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.CounterSample",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Diagnostics.CounterSample)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "Calculate (System.Diagnostics.CounterSample)",
        "returnType": "DECIMAL"
      },
      {
        "name": "Calculate (System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)",
        "returnType": "DECIMAL"
      },
      {
        "name": "op_Equality (System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.CounterSampleCalculator",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "ComputeCounterValue (System.Diagnostics.CounterSample)",
        "returnType": "DECIMAL"
      },
      {
        "name": "ComputeCounterValue (System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)",
        "returnType": "DECIMAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Diagnostics.DataReceivedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Diagnostics.DataReceivedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Diagnostics.DataReceivedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Diagnostics.DataReceivedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.DiagnosticsConfigurationHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Object, System.Object, System.Xml.XmlNode)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Diagnostics.EntryWrittenEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Diagnostics.EntryWrittenEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.Diagnostics.EntryWrittenEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.Diagnostics.EntryWrittenEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.EventInstance",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLog",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "EntryWritten",
      "Disposed"
    ],
    "methods": [
      {
        "name": "BeginInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "add_EntryWritten (System.Diagnostics.EntryWrittenEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_EntryWritten (System.Diagnostics.EntryWrittenEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "ModifyOverflowPolicy (System.Diagnostics.OverflowAction, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "RegisterDisplayName (CHARACTER, INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER, System.Diagnostics.EventLogEntryType)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER, System.Diagnostics.EventLogEntryType, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER, System.Diagnostics.EventLogEntryType, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER, System.Diagnostics.EventLogEntryType, INTEGER, INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEvent (System.Diagnostics.EventInstance, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEvent (System.Diagnostics.EventInstance, MEMPTR, System.Object[])",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "CreateEventSource (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Void",
        "obsolete": {
          "message": "This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "SourceExists (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "LogNameFromSourceName (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "WriteEntry (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER, CHARACTER, System.Diagnostics.EventLogEntryType)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER, CHARACTER, System.Diagnostics.EventLogEntryType, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEntry (CHARACTER, CHARACTER, System.Diagnostics.EventLogEntryType, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateEventSource (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateEventSource (System.Diagnostics.EventSourceCreationData)",
        "returnType": "System.Void"
      },
      {
        "name": "Delete (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Delete (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteEventSource (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "DeleteEventSource (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Exists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Exists (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEventLogs ()",
        "returnType": "System.Diagnostics.EventLog[]"
      },
      {
        "name": "GetEventLogs (CHARACTER)",
        "returnType": "System.Diagnostics.EventLog[]"
      },
      {
        "name": "SourceExists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WriteEntry (CHARACTER, CHARACTER, System.Diagnostics.EventLogEntryType, INTEGER, INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEvent (CHARACTER, System.Diagnostics.EventInstance, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteEvent (CHARACTER, System.Diagnostics.EventInstance, MEMPTR, System.Object[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "Equals (System.Diagnostics.EventLogEntry)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogEntryCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.Diagnostics.EventLogEntry[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogEntryType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.ResourcePermissionBase",
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogPermissionAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogPermissionEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogPermissionEntryCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Diagnostics.EventLogPermissionEntry)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.Diagnostics.EventLogPermissionEntry[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Diagnostics.EventLogPermissionEntryCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Diagnostics.EventLogPermissionEntry)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Diagnostics.EventLogPermissionEntry[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Diagnostics.EventLogPermissionEntry)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Diagnostics.EventLogPermissionEntry)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Diagnostics.EventLogPermissionEntry)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Diagnostics.TraceListener",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogTraceListener",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "TraceEvent (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "TraceData (System.Diagnostics.TraceEventCache, CHARACTER, System.Diagnostics.TraceEventType, INTEGER, System.Object[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.EventSourceCreationData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.FileVersionInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "GetVersionInfo (CHARACTER)",
        "returnType": "System.Diagnostics.FileVersionInfo"
      }
    ]
  },
  {
    "name": "System.Diagnostics.ICollectData",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CollectData (INTEGER, System.IntPtr, System.IntPtr, INTEGER, output System.IntPtr&)",
        "returnType": "System.Void"
      },
      {
        "name": "CloseData ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.InstanceData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.DictionaryBase",
      "System.Object"
    ],
    "name": "System.Diagnostics.InstanceDataCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Diagnostics.InstanceData[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.DictionaryBase",
      "System.Object"
    ],
    "name": "System.Diagnostics.InstanceDataCollectionCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Diagnostics.InstanceDataCollection[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.DescriptionAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.MonitoringDescriptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.OverflowAction",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "BeginInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Decrement ()",
        "returnType": "INT64"
      },
      {
        "name": "IncrementBy (INT64)",
        "returnType": "INT64"
      },
      {
        "name": "Increment ()",
        "returnType": "INT64"
      },
      {
        "name": "NextSample ()",
        "returnType": "System.Diagnostics.CounterSample"
      },
      {
        "name": "NextValue ()",
        "returnType": "DECIMAL"
      },
      {
        "name": "RemoveInstance ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "CloseSharedResources ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterCategory",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CounterExists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCounters ()",
        "returnType": "System.Diagnostics.PerformanceCounter[]"
      },
      {
        "name": "GetInstanceNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "InstanceExists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ReadCategory ()",
        "returnType": "System.Diagnostics.InstanceDataCollectionCollection"
      },
      {
        "name": "GetCounters (CHARACTER)",
        "returnType": "System.Diagnostics.PerformanceCounter[]"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (CHARACTER, CHARACTER, System.Diagnostics.CounterCreationDataCollection)",
        "returnType": "System.Diagnostics.PerformanceCounterCategory",
        "obsolete": {
          "message": "This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "CounterExists (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CounterExists (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Create (CHARACTER, CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "System.Diagnostics.PerformanceCounterCategory",
        "obsolete": {
          "message": "This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http:\/\/go.microsoft.com\/fwlink\/?linkid=14202",
          "error": false
        }
      },
      {
        "name": "Create (CHARACTER, CHARACTER, System.Diagnostics.PerformanceCounterCategoryType, CHARACTER, CHARACTER)",
        "returnType": "System.Diagnostics.PerformanceCounterCategory"
      },
      {
        "name": "Create (CHARACTER, CHARACTER, System.Diagnostics.PerformanceCounterCategoryType, System.Diagnostics.CounterCreationDataCollection)",
        "returnType": "System.Diagnostics.PerformanceCounterCategory"
      },
      {
        "name": "Delete (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Exists (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Exists (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCategories ()",
        "returnType": "System.Diagnostics.PerformanceCounterCategory[]"
      },
      {
        "name": "GetCategories (CHARACTER)",
        "returnType": "System.Diagnostics.PerformanceCounterCategory[]"
      },
      {
        "name": "InstanceExists (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "InstanceExists (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterCategoryType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterInstanceLifetime",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.ResourcePermissionBase",
      "System.Security.CodeAccessPermission",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterPermission",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterPermissionAccess",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Security.Permissions.CodeAccessSecurityAttribute",
      "System.Security.Permissions.SecurityAttribute",
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterPermissionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreatePermission ()",
        "returnType": "System.Security.IPermission"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterPermissionEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterPermissionEntryCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Diagnostics.PerformanceCounterPermissionEntry)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.Diagnostics.PerformanceCounterPermissionEntry[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.Diagnostics.PerformanceCounterPermissionEntryCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.Diagnostics.PerformanceCounterPermissionEntry)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Diagnostics.PerformanceCounterPermissionEntry[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Diagnostics.PerformanceCounterPermissionEntry)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Diagnostics.PerformanceCounterPermissionEntry)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.Diagnostics.PerformanceCounterPermissionEntry)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.PerformanceCounterType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.Process",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "OutputDataReceived",
      "ErrorDataReceived",
      "Exited",
      "Disposed"
    ],
    "methods": [
      {
        "name": "add_OutputDataReceived (System.Diagnostics.DataReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_OutputDataReceived (System.Diagnostics.DataReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ErrorDataReceived (System.Diagnostics.DataReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ErrorDataReceived (System.Diagnostics.DataReceivedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_Exited (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Exited (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "CloseMainWindow ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Refresh ()",
        "returnType": "System.Void"
      },
      {
        "name": "Start ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Kill ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "WaitForExit (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitForExit ()",
        "returnType": "System.Void"
      },
      {
        "name": "WaitForInputIdle (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "WaitForInputIdle ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginOutputReadLine ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginErrorReadLine ()",
        "returnType": "System.Void"
      },
      {
        "name": "CancelOutputRead ()",
        "returnType": "System.Void"
      },
      {
        "name": "CancelErrorRead ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "Start (CHARACTER, CHARACTER, System.Security.SecureString, CHARACTER)",
        "returnType": "System.Diagnostics.Process"
      },
      {
        "name": "Start (CHARACTER, CHARACTER, CHARACTER, System.Security.SecureString, CHARACTER)",
        "returnType": "System.Diagnostics.Process"
      },
      {
        "name": "Start (CHARACTER)",
        "returnType": "System.Diagnostics.Process"
      },
      {
        "name": "Start (CHARACTER, CHARACTER)",
        "returnType": "System.Diagnostics.Process"
      },
      {
        "name": "Start (System.Diagnostics.ProcessStartInfo)",
        "returnType": "System.Diagnostics.Process"
      },
      {
        "name": "EnterDebugMode ()",
        "returnType": "System.Void"
      },
      {
        "name": "LeaveDebugMode ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetProcessById (INTEGER, CHARACTER)",
        "returnType": "System.Diagnostics.Process"
      },
      {
        "name": "GetProcessById (INTEGER)",
        "returnType": "System.Diagnostics.Process"
      },
      {
        "name": "GetProcesses ()",
        "returnType": "System.Diagnostics.Process[]"
      },
      {
        "name": "GetProcessesByName (CHARACTER)",
        "returnType": "System.Diagnostics.Process[]"
      },
      {
        "name": "GetProcessesByName (CHARACTER, CHARACTER)",
        "returnType": "System.Diagnostics.Process[]"
      },
      {
        "name": "GetProcesses (CHARACTER)",
        "returnType": "System.Diagnostics.Process[]"
      },
      {
        "name": "GetCurrentProcess ()",
        "returnType": "System.Diagnostics.Process"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessModule",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ReadOnlyCollectionBase",
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessModuleCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IndexOf (System.Diagnostics.ProcessModule)",
        "returnType": "INTEGER"
      },
      {
        "name": "Contains (System.Diagnostics.ProcessModule)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.Diagnostics.ProcessModule[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessPriorityClass",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessStartInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessThread",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "ResetIdealProcessor ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ReadOnlyCollectionBase",
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessThreadCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.Diagnostics.ProcessThread)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.Diagnostics.ProcessThread)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.Diagnostics.ProcessThread)",
        "returnType": "INTEGER"
      },
      {
        "name": "Contains (System.Diagnostics.ProcessThread)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove (System.Diagnostics.ProcessThread)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.Diagnostics.ProcessThread[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessWindowStyle",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.Stopwatch",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Start ()",
        "returnType": "System.Void"
      },
      {
        "name": "Stop ()",
        "returnType": "System.Void"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Restart ()",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "StartNew ()",
        "returnType": "System.Diagnostics.Stopwatch"
      },
      {
        "name": "GetTimestamp ()",
        "returnType": "INT64"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.ThreadPriorityLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.ThreadState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.ThreadWaitReason",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.AddingNewEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.AddingNewEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.AddingNewEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.AddingNewEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.AmbientValueAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.CollectionConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.ArrayConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.AsyncCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.AsyncCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.AsyncCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.AsyncCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.AsyncOperation",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Post (System.Threading.SendOrPostCallback, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "PostOperationCompleted (System.Threading.SendOrPostCallback, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "OperationCompleted ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.AsyncOperationManager",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CreateOperation (System.Object)",
        "returnType": "System.ComponentModel.AsyncOperation"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.AttributeCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (System.Attribute)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Contains (System.Attribute[])",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Matches (System.Attribute)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Matches (System.Attribute[])",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "FromExisting (System.ComponentModel.AttributeCollection, System.Attribute[])",
        "returnType": "System.ComponentModel.AttributeCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.AttributeProviderAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.ComponentModel.BackgroundWorker",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "DoWork",
      "ProgressChanged",
      "RunWorkerCompleted",
      "Disposed"
    ],
    "methods": [
      {
        "name": "CancelAsync ()",
        "returnType": "System.Void"
      },
      {
        "name": "add_DoWork (System.ComponentModel.DoWorkEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DoWork (System.ComponentModel.DoWorkEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ProgressChanged (System.ComponentModel.ProgressChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "RunWorkerAsync ()",
        "returnType": "System.Void"
      },
      {
        "name": "RunWorkerAsync (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "add_RunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_RunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ProgressChanged (System.ComponentModel.ProgressChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "ReportProgress (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "ReportProgress (INTEGER, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.ComponentEditor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "EditComponent (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "EditComponent (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.BaseNumberConverter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.BindableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.BindableSupport",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.BindingDirection",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.ComponentModel.BindingList`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "AddingNew",
      "ListChanged"
    ],
    "methods": [
      {
        "name": "add_AddingNew (System.ComponentModel.AddingNewEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_AddingNew (System.ComponentModel.AddingNewEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ListChanged (System.ComponentModel.ListChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ListChanged (System.ComponentModel.ListChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetBindings ()",
        "returnType": "System.Void"
      },
      {
        "name": "ResetItem (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "CancelNew (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "EndNew (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddNew ()",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.BooleanConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "GetStandardValues (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "System.ComponentModel.TypeConverter+StandardValuesCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.BrowsableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.ByteConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.CancelEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.CancelEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.CancelEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object, System.ComponentModel.CancelEventArgs)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.CategoryAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.CharConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.CollectionChangeAction",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.CollectionChangeEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.CollectionChangeEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.CollectionChangeEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.CollectionChangeEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.CollectionConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ComplexBindingPropertiesAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.ComponentModel.Component",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "add_Disposed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Disposed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.ReadOnlyCollectionBase",
      "System.Object"
    ],
    "name": "System.ComponentModel.ComponentCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (System.ComponentModel.IComponent[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.ReferenceConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.ComponentConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Resources.ResourceManager",
      "System.Object"
    ],
    "name": "System.ComponentModel.ComponentResourceManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ApplyResources (System.Object, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ApplyResources (System.Object, CHARACTER, System.Globalization.CultureInfo)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Container",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.ComponentModel.IComponent)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.ComponentModel.IComponent)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.ComponentModel.IComponent, CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.ContainerFilterService",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "FilterComponents (System.ComponentModel.ComponentCollection)",
        "returnType": "System.ComponentModel.ComponentCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.CultureInfoConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetStandardValues (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "System.ComponentModel.TypeConverter+StandardValuesCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.CustomTypeDescriptor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProperties (System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetAttributes ()",
        "returnType": "System.ComponentModel.AttributeCollection"
      },
      {
        "name": "GetClassName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetComponentName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetConverter ()",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GetDefaultEvent ()",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "GetDefaultProperty ()",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "GetEditor (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetEvents (System.Attribute[])",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetProperties ()",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertyOwner (System.ComponentModel.PropertyDescriptor)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.DataErrorsChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DataObjectAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DataObjectFieldAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DataObjectMethodAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Match (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.DataObjectMethodType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.DateTimeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.DateTimeOffsetConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.DecimalConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DefaultBindingPropertyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DefaultEventAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DefaultPropertyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DefaultValueAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DescriptionAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DesignerAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DesignerCategoryAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.DesignerSerializationVisibility",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DesignerSerializationVisibilityAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DesignOnlyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DesignTimeVisibleAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.DisplayNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.DoubleConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.CancelEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.DoWorkEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.DoWorkEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.DoWorkEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.DoWorkEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.EditorAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.EditorBrowsableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.EditorBrowsableState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.EnumConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetStandardValues (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "System.ComponentModel.TypeConverter+StandardValuesCollection"
      },
      {
        "name": "GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValid (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.MemberDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.EventDescriptor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddEventHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveEventHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.EventDescriptorCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.ComponentModel.EventDescriptor)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Find (CHARACTER, LOGICAL)",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "Insert (INTEGER, System.ComponentModel.EventDescriptor)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "Sort ()",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "Sort (System.String[])",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "Sort (System.String[], System.Collections.IComparer)",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "Sort (System.Collections.IComparer)",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "Contains (System.ComponentModel.EventDescriptor)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IndexOf (System.ComponentModel.EventDescriptor)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.ComponentModel.EventDescriptor)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.EventHandlerList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      },
      {
        "name": "AddHandlers (System.ComponentModel.EventHandlerList)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveHandler (System.Object, System.Delegate)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.ExpandableObjectConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ExtenderProvidedPropertyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.GuidConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.HandledEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.HandledEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.HandledEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.HandledEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IBindingList",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "ListChanged"
    ],
    "methods": [
      {
        "name": "AddNew ()",
        "returnType": "System.Object"
      },
      {
        "name": "add_ListChanged (System.ComponentModel.ListChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ListChanged (System.ComponentModel.ListChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "AddIndex (System.ComponentModel.PropertyDescriptor)",
        "returnType": "System.Void"
      },
      {
        "name": "ApplySort (System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)",
        "returnType": "System.Void"
      },
      {
        "name": "Find (System.ComponentModel.PropertyDescriptor, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "RemoveIndex (System.ComponentModel.PropertyDescriptor)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveSort ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IBindingListView",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "ApplySort (System.ComponentModel.ListSortDescriptionCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveFilter ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.ICancelAddNew",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CancelNew (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "EndNew (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IChangeTracking",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AcceptChanges ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IComNativeDescriptorHandler",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetAttributes (System.Object)",
        "returnType": "System.ComponentModel.AttributeCollection"
      },
      {
        "name": "GetClassName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetConverter (System.Object)",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GetDefaultEvent (System.Object)",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "GetDefaultProperty (System.Object)",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "GetEditor (System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEvents (System.Object)",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetEvents (System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetProperties (System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertyValue (System.Object, CHARACTER, System.Boolean&)",
        "returnType": "System.Object"
      },
      {
        "name": "GetPropertyValue (System.Object, INTEGER, System.Boolean&)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IComponent",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "add_Disposed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Disposed (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IContainer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Add (System.ComponentModel.IComponent)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.ComponentModel.IComponent, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.ComponentModel.IComponent)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.ICustomTypeDescriptor",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetAttributes ()",
        "returnType": "System.ComponentModel.AttributeCollection"
      },
      {
        "name": "GetClassName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetComponentName ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetConverter ()",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GetDefaultEvent ()",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "GetDefaultProperty ()",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "GetEditor (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetEvents ()",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetEvents (System.Attribute[])",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetProperties ()",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetProperties (System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertyOwner (System.ComponentModel.PropertyDescriptor)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IDataErrorInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ComponentModel.IEditableObject",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "BeginEdit ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndEdit ()",
        "returnType": "System.Void"
      },
      {
        "name": "CancelEdit ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IExtenderProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CanExtend (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IIntellisenseBuilder",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Show (CHARACTER, CHARACTER, System.String&)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.ComponentModel.IListSource",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetList ()",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ImmutableObjectAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.ComponentModel.INestedContainer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ComponentModel.INestedSite",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.InitializationEventAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.ComponentModel.INotifyDataErrorInfo",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "ErrorsChanged"
    ],
    "methods": [
      {
        "name": "GetErrors (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "add_ErrorsChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ErrorsChanged (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.INotifyPropertyChanged",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "PropertyChanged"
    ],
    "methods": [
      {
        "name": "add_PropertyChanged (System.ComponentModel.PropertyChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PropertyChanged (System.ComponentModel.PropertyChangedEventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.INotifyPropertyChanging",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "PropertyChanging"
    ],
    "methods": [
      {
        "name": "add_PropertyChanging (System.ComponentModel.PropertyChangingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PropertyChanging (System.ComponentModel.PropertyChangingEventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.InstallerTypeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.InstanceCreationEditor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateInstance (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.Int16Converter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.Int32Converter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.Int64Converter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ComponentModel.InvalidAsynchronousStateException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ArgumentException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ComponentModel.InvalidEnumArgumentException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.ComponentModel.IRaiseItemChangedEvents",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ComponentModel.IRevertibleChangeTracking",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "RejectChanges ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.ISite",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ComponentModel.ISupportInitialize",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "BeginInit ()",
        "returnType": "System.Void"
      },
      {
        "name": "EndInit ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.ISupportInitializeNotification",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "Initialized"
    ],
    "methods": [
      {
        "name": "add_Initialized (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Initialized (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.ISynchronizeInvoke",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "BeginInvoke (System.Delegate, System.Object[])",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Object"
      },
      {
        "name": "Invoke (System.Delegate, System.Object[])",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.ComponentModel.ITypeDescriptorContext",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "OnComponentChanging ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "OnComponentChanged ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.ITypedList",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetListName (System.ComponentModel.PropertyDescriptor[])",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetItemProperties (System.ComponentModel.PropertyDescriptor[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.License",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetSavedLicenseKey (System.Type, System.Reflection.Assembly)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetService (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "SetSavedLicenseKey (System.Type, CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseManager",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "LockContext (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateWithContext (System.Type, System.ComponentModel.LicenseContext, System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "IsLicensed (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValid (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValid (System.Type, System.Object, output System.ComponentModel.License&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "UnlockContext (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Validate (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "Validate (System.Type, System.Object)",
        "returnType": "System.ComponentModel.License"
      },
      {
        "name": "CreateWithContext (System.Type, System.ComponentModel.LicenseContext)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseProvider",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetLicense (System.ComponentModel.LicenseContext, System.Type, System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.License"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseProviderAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseUsageMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.LicenseProvider",
      "System.Object"
    ],
    "name": "System.ComponentModel.LicFileLicenseProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetLicense (System.ComponentModel.LicenseContext, System.Type, System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.License"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ListBindableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.ListChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.ListChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.ListChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.ListChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.ListChangedType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.ListSortDescription",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.ListSortDescriptionCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IndexOf (System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.ListSortDirection",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.LocalizableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.LookupBindingPropertiesAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.MarshalByValueComponent",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "add_Disposed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Disposed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetService (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.MaskedTextProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (CHARACTER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Add (CHARACTER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Clear (output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "System.Void"
      },
      {
        "name": "FindAssignedEditPositionFrom (INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindAssignedEditPositionInRange (INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindEditPositionFrom (INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindEditPositionInRange (INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindNonEditPositionFrom (INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindNonEditPositionInRange (INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindUnassignedEditPositionFrom (INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "FindUnassignedEditPositionInRange (INTEGER, INTEGER, LOGICAL)",
        "returnType": "INTEGER"
      },
      {
        "name": "InsertAt (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "InsertAt (CHARACTER, INTEGER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "InsertAt (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "InsertAt (CHARACTER, INTEGER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsAvailablePosition (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsEditPosition (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove (output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAt (INTEGER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAt (INTEGER, INTEGER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Replace (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Replace (CHARACTER, INTEGER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Replace (CHARACTER, INTEGER, INTEGER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Replace (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Replace (CHARACTER, INTEGER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Replace (CHARACTER, INTEGER, INTEGER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Set (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Set (CHARACTER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToDisplayString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (LOGICAL, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (LOGICAL, LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (LOGICAL, LOGICAL, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ToString (LOGICAL, LOGICAL, LOGICAL, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "VerifyChar (CHARACTER, INTEGER, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "VerifyEscapeChar (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "VerifyString (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "VerifyString (CHARACTER, output System.Int32&, output System.ComponentModel.MaskedTextResultHint&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clone ()",
        "returnType": "System.Object"
      }
    ],
    "staticMethods": [
      {
        "name": "GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValidInputChar (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValidMaskChar (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValidPasswordChar (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.MaskedTextResultHint",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.MemberDescriptor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.MergablePropertyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.MultilineStringConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Container",
      "System.Object"
    ],
    "name": "System.ComponentModel.NestedContainer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.NullableConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateInstance (System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)",
        "returnType": "System.Object"
      },
      {
        "name": "GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValid (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetStandardValues (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "System.ComponentModel.TypeConverter+StandardValuesCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.PasswordPropertyTextAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.ProgressChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.ProgressChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.ProgressChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.ProgressChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.PropertyChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.PropertyChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyChangingEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyChangingEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.PropertyChangingEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object, System.ComponentModel.PropertyChangingEventArgs)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.MemberDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyDescriptor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddValueChanged (System.Object, System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetChildProperties ()",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetChildProperties (System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetChildProperties (System.Object)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetChildProperties (System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "RemoveValueChanged (System.Object, System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "CanResetValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEditor (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ResetValue (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ShouldSerializeValue (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyDescriptorCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.ComponentModel.PropertyDescriptor)",
        "returnType": "INTEGER"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Find (CHARACTER, LOGICAL)",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "Insert (INTEGER, System.ComponentModel.PropertyDescriptor)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Sort ()",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "Sort (System.String[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "Sort (System.String[], System.Collections.IComparer)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "Sort (System.Collections.IComparer)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "Contains (System.ComponentModel.PropertyDescriptor)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IndexOf (System.ComponentModel.PropertyDescriptor)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (System.ComponentModel.PropertyDescriptor)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ProvidePropertyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ReadOnlyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.RecommendedAsConfigurableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.ReferenceConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetStandardValues (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "System.ComponentModel.TypeConverter+StandardValuesCollection"
      },
      {
        "name": "GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.RefreshEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.RefreshEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.ComponentModel.RefreshEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.ComponentModel.RefreshEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.RunInstallerAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.AsyncCompletedEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.RunWorkerCompletedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.RunWorkerCompletedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.RunWorkerCompletedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.RunWorkerCompletedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.SByteConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.SettingsBindableAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.SingleConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.StringConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.SyntaxCheck",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "CheckMachineName (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CheckRootedPath (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CheckPath (CHARACTER)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.TimeSpanConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ToolboxItemFilterAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Match (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.ToolboxItemFilterType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertFromInvariantString (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertFromString (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertFromString (System.ComponentModel.ITypeDescriptorContext, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertFromString (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertToInvariantString (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ConvertToString (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ConvertToString (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "ConvertToString (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CreateInstance (System.Collections.IDictionary)",
        "returnType": "System.Object"
      },
      {
        "name": "CreateInstance (System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)",
        "returnType": "System.Object"
      },
      {
        "name": "GetCreateInstanceSupported ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetProperties (System.Object)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetPropertiesSupported ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValues ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetStandardValues (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "System.ComponentModel.TypeConverter+StandardValuesCollection"
      },
      {
        "name": "GetStandardValuesExclusive ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValid (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsValid (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeConverterAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptionProvider",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetExtendedTypeDescriptor (System.Object)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      },
      {
        "name": "GetTypeDescriptor (System.Type, System.Object)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      },
      {
        "name": "CreateInstance (System.IServiceProvider, System.Type, System.Type[], System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetCache (System.Object)",
        "returnType": "System.Collections.IDictionary"
      },
      {
        "name": "GetFullComponentName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetReflectionType (System.Type)",
        "returnType": "System.Type"
      },
      {
        "name": "GetReflectionType (System.Object)",
        "returnType": "System.Type"
      },
      {
        "name": "GetReflectionType (System.Type, System.Object)",
        "returnType": "System.Type"
      },
      {
        "name": "GetRuntimeType (System.Type)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeDescriptor (System.Type)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      },
      {
        "name": "GetTypeDescriptor (System.Object)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      },
      {
        "name": "IsSupportedType (System.Type)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptionProviderAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Refreshed"
    ],
    "staticMethods": [
      {
        "name": "AddAttributes (System.Type, System.Attribute[])",
        "returnType": "System.ComponentModel.TypeDescriptionProvider"
      },
      {
        "name": "AddAttributes (System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.TypeDescriptionProvider"
      },
      {
        "name": "AddEditorTable (System.Type, System.Collections.Hashtable)",
        "returnType": "System.Void"
      },
      {
        "name": "AddProvider (System.ComponentModel.TypeDescriptionProvider, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddProvider (System.ComponentModel.TypeDescriptionProvider, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateAssociation (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateDesigner (System.ComponentModel.IComponent, System.Type)",
        "returnType": "System.ComponentModel.Design.IDesigner"
      },
      {
        "name": "CreateEvent (System.Type, CHARACTER, System.Type, System.Attribute[])",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "CreateEvent (System.Type, System.ComponentModel.EventDescriptor, System.Attribute[])",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "CreateInstance (System.IServiceProvider, System.Type, System.Type[], System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "CreateProperty (System.Type, CHARACTER, System.Type, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "CreateProperty (System.Type, System.ComponentModel.PropertyDescriptor, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "GetAssociation (System.Type, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "GetAttributes (System.Object)",
        "returnType": "System.ComponentModel.AttributeCollection"
      },
      {
        "name": "GetClassName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetClassName (System.Object, LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetComponentName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetComponentName (System.Object, LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetConverter (System.Object)",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GetConverter (System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GetDefaultEvent (System.Object)",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "GetDefaultEvent (System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "GetDefaultProperty (System.Object)",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "GetDefaultProperty (System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "GetEditor (System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetEditor (System.Object, System.Type, LOGICAL)",
        "returnType": "System.Object"
      },
      {
        "name": "GetEvents (System.Object)",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetEvents (System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetEvents (System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetFullComponentName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetProperties (System.Object)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetProperties (System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetProperties (System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetProperties (System.Object, System.Attribute[], LOGICAL)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetProvider (System.Type)",
        "returnType": "System.ComponentModel.TypeDescriptionProvider"
      },
      {
        "name": "GetProvider (System.Object)",
        "returnType": "System.ComponentModel.TypeDescriptionProvider"
      },
      {
        "name": "GetReflectionType (System.Type)",
        "returnType": "System.Type"
      },
      {
        "name": "GetReflectionType (System.Object)",
        "returnType": "System.Type"
      },
      {
        "name": "Refresh (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Refresh (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "Refresh (System.Reflection.Module)",
        "returnType": "System.Void"
      },
      {
        "name": "Refresh (System.Reflection.Assembly)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAssociation (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveAssociations (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveProvider (System.ComponentModel.TypeDescriptionProvider, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveProvider (System.ComponentModel.TypeDescriptionProvider, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider, System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SortDescriptorArray (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Refreshed (System.ComponentModel.RefreshEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "GetClassName (System.Type)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetDefaultEvent (System.Type)",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "GetDefaultProperty (System.Type)",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "GetEditor (System.Type, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetEvents (System.Type, System.Attribute[])",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetEvents (System.Object, System.Attribute[], LOGICAL)",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetProperties (System.Type, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "add_Refreshed (System.ComponentModel.RefreshEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "GetAttributes (System.Type)",
        "returnType": "System.ComponentModel.AttributeCollection"
      },
      {
        "name": "GetAttributes (System.Object, LOGICAL)",
        "returnType": "System.ComponentModel.AttributeCollection"
      },
      {
        "name": "GetConverter (System.Type)",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "GetEvents (System.Type)",
        "returnType": "System.ComponentModel.EventDescriptorCollection"
      },
      {
        "name": "GetProperties (System.Type)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeListConverter",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CanConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetStandardValues (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "System.ComponentModel.TypeConverter+StandardValuesCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.UInt16Converter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.UInt32Converter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.BaseNumberConverter",
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.UInt64Converter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ComponentModel.WarningException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ComponentModel.Win32Exception",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetObjectData (System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.InheritanceAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.InheritanceLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.NotifyParentPropertyAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ParenthesizePropertyNameAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyTabAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.ComponentModel.PropertyTabAttribute)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyTabScope",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.RefreshProperties",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.RefreshPropertiesAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.ToolboxItemAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.TypeDescriptionProviderService",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProvider (System.Object)",
        "returnType": "System.ComponentModel.TypeDescriptionProvider"
      },
      {
        "name": "GetProvider (System.Type)",
        "returnType": "System.ComponentModel.TypeDescriptionProvider"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ActiveDesignerEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ActiveDesignerEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.ActiveDesignerEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.ActiveDesignerEventArgs)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Runtime.InteropServices.ExternalException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.CheckoutException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.CommandID",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentChangedEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentChangedEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.ComponentChangedEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.ComponentChangedEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentChangingEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentChangingEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.ComponentChangingEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.ComponentChangingEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.ComponentEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.ComponentEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentRenameEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ComponentRenameEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.ComponentRenameEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.ComponentRenameEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerOptionService",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerTransaction",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Cancel ()",
        "returnType": "System.Void"
      },
      {
        "name": "Commit ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerTransactionCloseEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerTransactionCloseEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.DesignerTransactionCloseEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.DesignerTransactionCloseEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.Design.MenuCommand",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerVerb",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "CommandChanged"
    ],
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerVerbCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.ComponentModel.Design.DesignerVerb)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.ComponentModel.Design.DesignerVerb[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.ComponentModel.Design.DesignerVerbCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Insert (INTEGER, System.ComponentModel.Design.DesignerVerb)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.ComponentModel.Design.DesignerVerb)",
        "returnType": "INTEGER"
      },
      {
        "name": "Contains (System.ComponentModel.Design.DesignerVerb)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Remove (System.ComponentModel.Design.DesignerVerb)",
        "returnType": "System.Void"
      },
      {
        "name": "CopyTo (System.ComponentModel.Design.DesignerVerb[], INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.LicenseContext",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesigntimeLicenseContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetSavedLicenseKey (System.Type, System.Reflection.Assembly)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SetSavedLicenseKey (System.Type, CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesigntimeLicenseContextSerializer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Serialize (System.IO.Stream, CHARACTER, System.ComponentModel.Design.DesigntimeLicenseContext)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.DesignerEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.DesignerEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.HelpContextType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.HelpKeywordAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "IsDefaultAttribute ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.HelpKeywordType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.ComponentModel.Design.IComponentChangeService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "ComponentAdded",
      "ComponentAdding",
      "ComponentChanged",
      "ComponentChanging",
      "ComponentRemoved",
      "ComponentRemoving",
      "ComponentRename"
    ],
    "methods": [
      {
        "name": "add_ComponentAdded (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ComponentAdding (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ComponentRemoved (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ComponentRename (System.ComponentModel.Design.ComponentRenameEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ComponentAdded (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ComponentAdding (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ComponentChanged (System.ComponentModel.Design.ComponentChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ComponentChanged (System.ComponentModel.Design.ComponentChangedEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ComponentChanging (System.ComponentModel.Design.ComponentChangingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ComponentChanging (System.ComponentModel.Design.ComponentChangingEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ComponentRemoved (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_ComponentRemoving (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ComponentRemoving (System.ComponentModel.Design.ComponentEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ComponentRename (System.ComponentModel.Design.ComponentRenameEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "OnComponentChanged (System.Object, System.ComponentModel.MemberDescriptor, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "OnComponentChanging (System.Object, System.ComponentModel.MemberDescriptor)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IComponentDiscoveryService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetComponentTypes (System.ComponentModel.Design.IDesignerHost, System.Type)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IComponentInitializer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "InitializeExistingComponent (System.Collections.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "InitializeNewComponent (System.Collections.IDictionary)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IDesigner",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "DoDefaultAction ()",
        "returnType": "System.Void"
      },
      {
        "name": "Initialize (System.ComponentModel.IComponent)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IDesignerEventService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "ActiveDesignerChanged",
      "DesignerCreated",
      "DesignerDisposed",
      "SelectionChanged"
    ],
    "methods": [
      {
        "name": "add_ActiveDesignerChanged (System.ComponentModel.Design.ActiveDesignerEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ActiveDesignerChanged (System.ComponentModel.Design.ActiveDesignerEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DesignerCreated (System.ComponentModel.Design.DesignerEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DesignerCreated (System.ComponentModel.Design.DesignerEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_DesignerDisposed (System.ComponentModel.Design.DesignerEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_DesignerDisposed (System.ComponentModel.Design.DesignerEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SelectionChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SelectionChanged (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IDesignerFilter",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "PostFilterAttributes (System.Collections.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "PostFilterEvents (System.Collections.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "PostFilterProperties (System.Collections.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "PreFilterAttributes (System.Collections.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "PreFilterEvents (System.Collections.IDictionary)",
        "returnType": "System.Void"
      },
      {
        "name": "PreFilterProperties (System.Collections.IDictionary)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IDesignerHost",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "Activated",
      "Deactivated",
      "LoadComplete",
      "TransactionClosed",
      "TransactionClosing",
      "TransactionOpened",
      "TransactionOpening"
    ],
    "methods": [
      {
        "name": "add_LoadComplete (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TransactionClosed (System.ComponentModel.Design.DesignerTransactionCloseEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TransactionClosing (System.ComponentModel.Design.DesignerTransactionCloseEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TransactionOpened (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "GetDesigner (System.ComponentModel.IComponent)",
        "returnType": "System.ComponentModel.Design.IDesigner"
      },
      {
        "name": "add_Activated (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Activated (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_Deactivated (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Deactivated (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_LoadComplete (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TransactionClosed (System.ComponentModel.Design.DesignerTransactionCloseEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TransactionClosing (System.ComponentModel.Design.DesignerTransactionCloseEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TransactionOpened (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_TransactionOpening (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_TransactionOpening (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Activate ()",
        "returnType": "System.Void"
      },
      {
        "name": "CreateComponent (System.Type)",
        "returnType": "System.ComponentModel.IComponent"
      },
      {
        "name": "CreateComponent (System.Type, CHARACTER)",
        "returnType": "System.ComponentModel.IComponent"
      },
      {
        "name": "CreateTransaction ()",
        "returnType": "System.ComponentModel.Design.DesignerTransaction"
      },
      {
        "name": "CreateTransaction (CHARACTER)",
        "returnType": "System.ComponentModel.Design.DesignerTransaction"
      },
      {
        "name": "DestroyComponent (System.ComponentModel.IComponent)",
        "returnType": "System.Void"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IDesignerHostTransactionState",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ComponentModel.Design.IDesignerOptionService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetOptionValue (CHARACTER, CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "SetOptionValue (CHARACTER, CHARACTER, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IDictionaryService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetKey (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IEventBindingService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CreateUniqueMethodName (System.ComponentModel.IComponent, System.ComponentModel.EventDescriptor)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetCompatibleMethods (System.ComponentModel.EventDescriptor)",
        "returnType": "MEMPTR"
      },
      {
        "name": "GetEvent (System.ComponentModel.PropertyDescriptor)",
        "returnType": "System.ComponentModel.EventDescriptor"
      },
      {
        "name": "GetEventProperties (System.ComponentModel.EventDescriptorCollection)",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "GetEventProperty (System.ComponentModel.EventDescriptor)",
        "returnType": "System.ComponentModel.PropertyDescriptor"
      },
      {
        "name": "ShowCode ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "ShowCode (INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ShowCode (System.ComponentModel.IComponent, System.ComponentModel.EventDescriptor)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IExtenderListService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetExtenderProviders ()",
        "returnType": "System.ComponentModel.IExtenderProvider[]"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IExtenderProviderService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddExtenderProvider (System.ComponentModel.IExtenderProvider)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveExtenderProvider (System.ComponentModel.IExtenderProvider)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IHelpService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddContextAttribute (CHARACTER, CHARACTER, System.ComponentModel.Design.HelpKeywordType)",
        "returnType": "System.Void"
      },
      {
        "name": "ClearContextAttributes ()",
        "returnType": "System.Void"
      },
      {
        "name": "CreateLocalContext (System.ComponentModel.Design.HelpContextType)",
        "returnType": "System.ComponentModel.Design.IHelpService"
      },
      {
        "name": "RemoveContextAttribute (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveLocalContext (System.ComponentModel.Design.IHelpService)",
        "returnType": "System.Void"
      },
      {
        "name": "ShowHelpFromKeyword (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ShowHelpFromUrl (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IInheritanceService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddInheritedComponents (System.ComponentModel.IComponent, System.ComponentModel.IContainer)",
        "returnType": "System.Void"
      },
      {
        "name": "GetInheritanceAttribute (System.ComponentModel.IComponent)",
        "returnType": "System.ComponentModel.InheritanceAttribute"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IMenuCommandService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddCommand (System.ComponentModel.Design.MenuCommand)",
        "returnType": "System.Void"
      },
      {
        "name": "AddVerb (System.ComponentModel.Design.DesignerVerb)",
        "returnType": "System.Void"
      },
      {
        "name": "FindCommand (System.ComponentModel.Design.CommandID)",
        "returnType": "System.ComponentModel.Design.MenuCommand"
      },
      {
        "name": "GlobalInvoke (System.ComponentModel.Design.CommandID)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveCommand (System.ComponentModel.Design.MenuCommand)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveVerb (System.ComponentModel.Design.DesignerVerb)",
        "returnType": "System.Void"
      },
      {
        "name": "ShowContextMenu (System.ComponentModel.Design.CommandID, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IReferenceService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetComponent (System.Object)",
        "returnType": "System.ComponentModel.IComponent"
      },
      {
        "name": "GetReference (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetReferences ()",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetReferences (System.Type)",
        "returnType": "System.Object[]"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IResourceService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetResourceReader (System.Globalization.CultureInfo)",
        "returnType": "System.Resources.IResourceReader"
      },
      {
        "name": "GetResourceWriter (System.Globalization.CultureInfo)",
        "returnType": "System.Resources.IResourceWriter"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IRootDesigner",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetView (System.ComponentModel.Design.ViewTechnology)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.ISelectionService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "SelectionChanged",
      "SelectionChanging"
    ],
    "methods": [
      {
        "name": "add_SelectionChanging (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SelectionChanging (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SelectionChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SelectionChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "GetComponentSelected (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetSelectedComponents ()",
        "returnType": "MEMPTR"
      },
      {
        "name": "SetSelectedComponents (MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "SetSelectedComponents (MEMPTR, System.ComponentModel.Design.SelectionTypes)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.IServiceContainer",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddService (System.Type, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "AddService (System.Type, System.Object, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddService (System.Type, System.ComponentModel.Design.ServiceCreatorCallback)",
        "returnType": "System.Void"
      },
      {
        "name": "AddService (System.Type, System.ComponentModel.Design.ServiceCreatorCallback, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveService (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveService (System.Type, LOGICAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.ITreeDesigner",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ComponentModel.Design.ITypeDescriptorFilterService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "FilterAttributes (System.ComponentModel.IComponent, System.Collections.IDictionary)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FilterEvents (System.ComponentModel.IComponent, System.Collections.IDictionary)",
        "returnType": "LOGICAL"
      },
      {
        "name": "FilterProperties (System.ComponentModel.IComponent, System.Collections.IDictionary)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.ITypeDiscoveryService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetTypes (System.Type, LOGICAL)",
        "returnType": "MEMPTR"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.ITypeResolutionService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetAssembly (System.Reflection.AssemblyName)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetAssembly (System.Reflection.AssemblyName, LOGICAL)",
        "returnType": "System.Reflection.Assembly"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "GetType (CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Type"
      },
      {
        "name": "ReferenceAssembly (System.Reflection.AssemblyName)",
        "returnType": "System.Void"
      },
      {
        "name": "GetPathOfAssembly (System.Reflection.AssemblyName)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.MenuCommand",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "CommandChanged"
    ],
    "methods": [
      {
        "name": "add_CommandChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_CommandChanged (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke ()",
        "returnType": "System.Void"
      },
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.SelectionTypes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ServiceCreatorCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.ComponentModel.Design.IServiceContainer, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "BeginInvoke (System.ComponentModel.Design.IServiceContainer, System.Type, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ServiceContainer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddService (System.Type, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "AddService (System.Type, System.ComponentModel.Design.ServiceCreatorCallback)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "RemoveService (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddService (System.Type, System.Object, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "AddService (System.Type, System.ComponentModel.Design.ServiceCreatorCallback, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "GetService (System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "RemoveService (System.Type, LOGICAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.StandardCommands",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.StandardToolWindows",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ViewTechnology",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.ComponentSerializationService",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore, System.ComponentModel.IContainer)",
        "returnType": "System.Void"
      },
      {
        "name": "DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore, System.ComponentModel.IContainer, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateStore ()",
        "returnType": "System.ComponentModel.Design.Serialization.SerializationStore"
      },
      {
        "name": "LoadStore (System.IO.Stream)",
        "returnType": "System.ComponentModel.Design.Serialization.SerializationStore"
      },
      {
        "name": "Serialize (System.ComponentModel.Design.Serialization.SerializationStore, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore, System.Object, System.ComponentModel.MemberDescriptor)",
        "returnType": "System.Void"
      },
      {
        "name": "SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore, System.Object, System.ComponentModel.MemberDescriptor)",
        "returnType": "System.Void"
      },
      {
        "name": "Deserialize (System.ComponentModel.Design.Serialization.SerializationStore)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Deserialize (System.ComponentModel.Design.Serialization.SerializationStore, System.ComponentModel.IContainer)",
        "returnType": "MEMPTR"
      },
      {
        "name": "DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore, System.ComponentModel.IContainer, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.ContextStack",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Append (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Pop ()",
        "returnType": "System.Object"
      },
      {
        "name": "Push (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.DesignerLoader",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost)",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.DesignerSerializerAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.ComponentModel.Design.Serialization.IDesignerLoaderHost",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "EndLoad (CHARACTER, LOGICAL, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Reload ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.Serialization.IDesignerLoaderHost2",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "name": "System.ComponentModel.Design.Serialization.IDesignerLoaderService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "AddLoadDependency ()",
        "returnType": "System.Void"
      },
      {
        "name": "DependentLoadComplete (LOGICAL, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "Reload ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.Serialization.IDesignerSerializationManager",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "events": [
      "ResolveName",
      "SerializationComplete"
    ],
    "methods": [
      {
        "name": "add_ResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_ResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_SerializationComplete (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_SerializationComplete (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateInstance (System.Type, MEMPTR, CHARACTER, LOGICAL)",
        "returnType": "System.Object"
      },
      {
        "name": "GetInstance (CHARACTER)",
        "returnType": "System.Object"
      },
      {
        "name": "GetName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetSerializer (System.Type, System.Type)",
        "returnType": "System.Object"
      },
      {
        "name": "GetType (CHARACTER)",
        "returnType": "System.Type"
      },
      {
        "name": "RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)",
        "returnType": "System.Void"
      },
      {
        "name": "ReportError (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetName (System.Object, CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.Serialization.IDesignerSerializationProvider",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager, System.Object, System.Type, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.Serialization.IDesignerSerializationService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Deserialize (System.Object)",
        "returnType": "MEMPTR"
      },
      {
        "name": "Serialize (MEMPTR)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "name": "System.ComponentModel.Design.Serialization.INameCreationService",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CreateName (System.ComponentModel.IContainer, System.Type)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsValidName (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ValidateName (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.InstanceDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke ()",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.MemberRelationshipService",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship, System.ComponentModel.Design.Serialization.MemberRelationship)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.MemberRelationship",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.ComponentModel.Design.Serialization.MemberRelationship, System.ComponentModel.Design.Serialization.MemberRelationship)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.ComponentModel.Design.Serialization.MemberRelationship, System.ComponentModel.Design.Serialization.MemberRelationship)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.ResolveNameEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.ResolveNameEventHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, System.ComponentModel.Design.Serialization.ResolveNameEventArgs)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.ComponentModel.Design.Serialization.ResolveNameEventArgs, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.SerializationStore",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Save (System.IO.Stream)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeArgumentReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeArrayCreateExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeArrayIndexerExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeAssignStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeAttachEventStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.CodeAttributeArgument",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeAttributeArgumentCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeAttributeArgument)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeAttributeArgument[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeAttributeArgumentCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeAttributeArgument)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeAttributeArgument[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeAttributeArgument)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeAttributeArgument)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeAttributeArgument)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.CodeAttributeDeclaration",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeAttributeDeclarationCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeAttributeDeclaration)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeAttributeDeclaration[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeAttributeDeclarationCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeAttributeDeclaration)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeAttributeDeclaration[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeAttributeDeclaration)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeAttributeDeclaration)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeAttributeDeclaration)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeBaseReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeBinaryOperatorExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeBinaryOperatorType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeCastExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.CodeCatchClause",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeCatchClauseCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeCatchClause)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeCatchClause[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeCatchClauseCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeCatchClause)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeCatchClause[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeCatchClause)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeCatchClause)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeCatchClause)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeDirective",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeChecksumPragma",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeComment",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeCommentStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeCommentStatementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeCommentStatement)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeCommentStatement[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeCommentStatementCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeCommentStatement)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeCommentStatement[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeCommentStatement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeCommentStatement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeCommentStatement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeCompileUnit",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeConditionStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeMemberMethod",
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeConstructor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PopulateParameters",
      "PopulateStatements",
      "PopulateImplementationTypes"
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeDefaultValueExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeDelegateCreateExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeDelegateInvokeExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeDirectionExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeDirective",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeDirectiveCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeDirective)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeDirective[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeDirectiveCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeDirective)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeDirective[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeDirective)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeDirective)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeDirective)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeMemberMethod",
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeEntryPointMethod",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PopulateParameters",
      "PopulateStatements",
      "PopulateImplementationTypes"
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeEventReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeExpressionCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeExpression)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeExpression[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeExpressionCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeExpression)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeExpression[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeExpression)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeExpression)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeExpression)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeExpressionStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeFieldReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeGotoStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeIndexerExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeIterationStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeLabeledStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.CodeLinePragma",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeMemberEvent",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeMemberField",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeMemberMethod",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PopulateParameters",
      "PopulateStatements",
      "PopulateImplementationTypes"
    ],
    "methods": [
      {
        "name": "add_PopulateParameters (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateParameters (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PopulateStatements (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateStatements (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PopulateImplementationTypes (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateImplementationTypes (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeMemberProperty",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeMethodInvokeExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeMethodReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeMethodReturnStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeNamespace",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PopulateComments",
      "PopulateImports",
      "PopulateTypes"
    ],
    "methods": [
      {
        "name": "add_PopulateComments (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateComments (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PopulateImports (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateImports (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PopulateTypes (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateTypes (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeNamespaceCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeNamespace)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeNamespace[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeNamespaceCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeNamespace)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeNamespace[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeNamespace)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeNamespace)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeNamespace)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeNamespaceImport",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.CodeNamespaceImportCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeNamespaceImport)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeNamespaceImport[])",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.CodeObject",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeObjectCreateExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeParameterDeclarationExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeParameterDeclarationExpressionCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeParameterDeclarationExpression)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeParameterDeclarationExpression[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeParameterDeclarationExpressionCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeParameterDeclarationExpression)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeParameterDeclarationExpression[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeParameterDeclarationExpression)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeParameterDeclarationExpression)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeParameterDeclarationExpression)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodePrimitiveExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodePropertyReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodePropertySetValueReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeDirective",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeRegionDirective",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeRegionMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeRemoveEventStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeCompileUnit",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeSnippetCompileUnit",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeSnippetExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeSnippetStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeSnippetTypeMember",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeStatementCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeStatement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Add (System.CodeDom.CodeExpression)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeStatement[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeStatementCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeStatement)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeStatement[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeStatement)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeStatement)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeStatement)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeThisReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeThrowExceptionStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTryCatchFinallyStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeMemberMethod",
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeConstructor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PopulateParameters",
      "PopulateStatements",
      "PopulateImplementationTypes"
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeDeclaration",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PopulateBaseTypes",
      "PopulateMembers"
    ],
    "methods": [
      {
        "name": "add_PopulateBaseTypes (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateBaseTypes (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "add_PopulateMembers (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_PopulateMembers (System.EventHandler)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeDeclarationCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeTypeDeclaration)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeDeclaration[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeDeclarationCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeTypeDeclaration)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeTypeDeclaration[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeTypeDeclaration)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeTypeDeclaration)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeTypeDeclaration)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeTypeDeclaration",
      "System.CodeDom.CodeTypeMember",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "PopulateBaseTypes",
      "PopulateMembers"
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeMember",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeMemberCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeTypeMember)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeMember[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeMemberCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeTypeMember)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeTypeMember[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeTypeMember)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeTypeMember)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeTypeMember)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeOfExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeParameter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeParameterCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeTypeParameter)",
        "returnType": "INTEGER"
      },
      {
        "name": "Add (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeParameter[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeParameterCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeTypeParameter)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeTypeParameter[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeTypeParameter)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeTypeParameter)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeTypeParameter)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeReferenceOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeReference",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeReferenceCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.CodeTypeReference)",
        "returnType": "INTEGER"
      },
      {
        "name": "Add (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Add (System.Type)",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeReference[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.CodeTypeReferenceCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.CodeTypeReference)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.CodeTypeReference[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.CodeTypeReference)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.CodeTypeReference)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.CodeTypeReference)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeTypeReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeStatement",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeVariableDeclarationStatement",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.CodeExpression",
      "System.CodeDom.CodeObject",
      "System.Object"
    ],
    "name": "System.CodeDom.CodeVariableReferenceExpression",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.CodeDom.FieldDirection",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.CodeDom.MemberAttributes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.CodeDom.Compiler.CodeGenerator",
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CodeCompiler",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.Component",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CodeDomProvider",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Disposed"
    ],
    "methods": [
      {
        "name": "CreateGenerator (System.IO.TextWriter)",
        "returnType": "System.CodeDom.Compiler.ICodeGenerator"
      },
      {
        "name": "CreateGenerator (CHARACTER)",
        "returnType": "System.CodeDom.Compiler.ICodeGenerator"
      },
      {
        "name": "CreateParser ()",
        "returnType": "System.CodeDom.Compiler.ICodeParser",
        "obsolete": {
          "message": "Callers should not use the ICodeParser interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.",
          "error": false
        }
      },
      {
        "name": "GetConverter (System.Type)",
        "returnType": "System.ComponentModel.TypeConverter"
      },
      {
        "name": "CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters, System.CodeDom.CodeCompileUnit[])",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters, System.String[])",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters, System.String[])",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "IsValidIdentifier (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateEscapedIdentifier (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CreateValidIdentifier (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeOutput (System.CodeDom.CodeTypeReference)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Supports (System.CodeDom.Compiler.GeneratorSupport)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GenerateCodeFromExpression (System.CodeDom.CodeExpression, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromStatement (System.CodeDom.CodeStatement, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromNamespace (System.CodeDom.CodeNamespace, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromMember (System.CodeDom.CodeTypeMember, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "Parse (System.IO.TextReader)",
        "returnType": "System.CodeDom.CodeCompileUnit"
      },
      {
        "name": "CreateGenerator ()",
        "returnType": "System.CodeDom.Compiler.ICodeGenerator",
        "obsolete": {
          "message": "Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.",
          "error": false
        }
      },
      {
        "name": "CreateCompiler ()",
        "returnType": "System.CodeDom.Compiler.ICodeCompiler",
        "obsolete": {
          "message": "Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.",
          "error": false
        }
      }
    ],
    "staticMethods": [
      {
        "name": "CreateProvider (CHARACTER, System.Collections.Generic.IDictionary)",
        "returnType": "System.CodeDom.Compiler.CodeDomProvider"
      },
      {
        "name": "CreateProvider (CHARACTER)",
        "returnType": "System.CodeDom.Compiler.CodeDomProvider"
      },
      {
        "name": "IsDefinedLanguage (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsDefinedExtension (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetAllCompilerInfo ()",
        "returnType": "System.CodeDom.Compiler.CompilerInfo[]"
      },
      {
        "name": "GetLanguageFromExtension (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetCompilerInfo (CHARACTER)",
        "returnType": "System.CodeDom.Compiler.CompilerInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CodeGenerator",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GenerateCodeFromMember (System.CodeDom.CodeTypeMember, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      }
    ],
    "staticMethods": [
      {
        "name": "IsValidLanguageIndependentIdentifier (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ValidateIdentifiers (System.CodeDom.CodeObject)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CodeGeneratorOptions",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CodeParser",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Parse (System.IO.TextReader)",
        "returnType": "System.CodeDom.CodeCompileUnit"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CompilerError",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Collections.CollectionBase",
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CompilerErrorCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (System.CodeDom.Compiler.CompilerError)",
        "returnType": "INTEGER"
      },
      {
        "name": "AddRange (System.CodeDom.Compiler.CompilerError[])",
        "returnType": "System.Void"
      },
      {
        "name": "AddRange (System.CodeDom.Compiler.CompilerErrorCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (System.CodeDom.Compiler.CompilerError)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.CodeDom.Compiler.CompilerError[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "IndexOf (System.CodeDom.Compiler.CompilerError)",
        "returnType": "INTEGER"
      },
      {
        "name": "Insert (INTEGER, System.CodeDom.Compiler.CompilerError)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (System.CodeDom.Compiler.CompilerError)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CompilerInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetLanguages ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetExtensions ()",
        "returnType": "System.String[]"
      },
      {
        "name": "CreateDefaultCompilerParameters ()",
        "returnType": "System.CodeDom.Compiler.CompilerParameters"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CreateProvider ()",
        "returnType": "System.CodeDom.Compiler.CodeDomProvider"
      },
      {
        "name": "CreateProvider (System.Collections.Generic.IDictionary)",
        "returnType": "System.CodeDom.Compiler.CodeDomProvider"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CompilerParameters",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CompilerResults",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.Executor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "ExecWait (CHARACTER, System.CodeDom.Compiler.TempFileCollection)",
        "returnType": "System.Void"
      },
      {
        "name": "ExecWaitWithCapture (CHARACTER, System.CodeDom.Compiler.TempFileCollection, System.String&, System.String&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecWaitWithCapture (CHARACTER, CHARACTER, System.CodeDom.Compiler.TempFileCollection, System.String&, System.String&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecWaitWithCapture (System.IntPtr, CHARACTER, System.CodeDom.Compiler.TempFileCollection, System.String&, System.String&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ExecWaitWithCapture (System.IntPtr, CHARACTER, CHARACTER, System.CodeDom.Compiler.TempFileCollection, System.String&, System.String&)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Attribute",
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.GeneratedCodeAttribute",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.GeneratorSupport",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "name": "System.CodeDom.Compiler.ICodeCompiler",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters, System.CodeDom.CodeCompileUnit)",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters, CHARACTER)",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters, CHARACTER)",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "CompileAssemblyFromDomBatch (System.CodeDom.Compiler.CompilerParameters, System.CodeDom.CodeCompileUnit[])",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "CompileAssemblyFromFileBatch (System.CodeDom.Compiler.CompilerParameters, System.String[])",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      },
      {
        "name": "CompileAssemblyFromSourceBatch (System.CodeDom.Compiler.CompilerParameters, System.String[])",
        "returnType": "System.CodeDom.Compiler.CompilerResults"
      }
    ]
  },
  {
    "name": "System.CodeDom.Compiler.ICodeGenerator",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "IsValidIdentifier (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ValidateIdentifier (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "CreateEscapedIdentifier (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "CreateValidIdentifier (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetTypeOutput (System.CodeDom.CodeTypeReference)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Supports (System.CodeDom.Compiler.GeneratorSupport)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GenerateCodeFromExpression (System.CodeDom.CodeExpression, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromStatement (System.CodeDom.CodeStatement, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromNamespace (System.CodeDom.CodeNamespace, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      },
      {
        "name": "GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration, System.IO.TextWriter, System.CodeDom.Compiler.CodeGeneratorOptions)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.CodeDom.Compiler.ICodeParser",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "Parse (System.IO.TextReader)",
        "returnType": "System.CodeDom.CodeCompileUnit"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.TextWriter",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.IndentedTextWriter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine ()",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Char[], INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (DECIMAL)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (CHARACTER, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLine (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteLineNoTabs (CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.LanguageOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.TempFileCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "AddExtension (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "CopyTo (System.String[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "AddExtension (CHARACTER, LOGICAL)",
        "returnType": "CHARACTER"
      },
      {
        "name": "AddFile (CHARACTER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "Delete ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.Regex",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "GroupNameFromNumber (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GroupNumberFromName (CHARACTER)",
        "returnType": "INTEGER"
      },
      {
        "name": "IsMatch (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsMatch (CHARACTER, INTEGER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Match (CHARACTER)",
        "returnType": "System.Text.RegularExpressions.Match"
      },
      {
        "name": "Match (CHARACTER, INTEGER)",
        "returnType": "System.Text.RegularExpressions.Match"
      },
      {
        "name": "Match (CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.Text.RegularExpressions.Match"
      },
      {
        "name": "Matches (CHARACTER)",
        "returnType": "System.Text.RegularExpressions.MatchCollection"
      },
      {
        "name": "Matches (CHARACTER, INTEGER)",
        "returnType": "System.Text.RegularExpressions.MatchCollection"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, System.Text.RegularExpressions.MatchEvaluator)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, System.Text.RegularExpressions.MatchEvaluator, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, System.Text.RegularExpressions.MatchEvaluator, INTEGER, INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Split (CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (CHARACTER, INTEGER)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (CHARACTER, INTEGER, INTEGER)",
        "returnType": "System.String[]"
      },
      {
        "name": "GetGroupNames ()",
        "returnType": "System.String[]"
      },
      {
        "name": "GetGroupNumbers ()",
        "returnType": "System.Int32[]"
      }
    ],
    "staticMethods": [
      {
        "name": "Escape (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Unescape (CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "IsMatch (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Match (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions)",
        "returnType": "System.Text.RegularExpressions.Match"
      },
      {
        "name": "Match (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)",
        "returnType": "System.Text.RegularExpressions.Match"
      },
      {
        "name": "Matches (CHARACTER, CHARACTER)",
        "returnType": "System.Text.RegularExpressions.MatchCollection"
      },
      {
        "name": "Matches (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions)",
        "returnType": "System.Text.RegularExpressions.MatchCollection"
      },
      {
        "name": "Matches (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)",
        "returnType": "System.Text.RegularExpressions.MatchCollection"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, CHARACTER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, System.Text.RegularExpressions.MatchEvaluator)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, System.Text.RegularExpressions.MatchEvaluator, System.Text.RegularExpressions.RegexOptions)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Replace (CHARACTER, CHARACTER, System.Text.RegularExpressions.MatchEvaluator, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)",
        "returnType": "CHARACTER"
      },
      {
        "name": "Split (CHARACTER, CHARACTER)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions)",
        "returnType": "System.String[]"
      },
      {
        "name": "Split (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)",
        "returnType": "System.String[]"
      },
      {
        "name": "CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[], System.Reflection.AssemblyName)",
        "returnType": "System.Void"
      },
      {
        "name": "CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[], System.Reflection.AssemblyName, System.Reflection.Emit.CustomAttributeBuilder[])",
        "returnType": "System.Void"
      },
      {
        "name": "CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[], System.Reflection.AssemblyName, System.Reflection.Emit.CustomAttributeBuilder[], CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "IsMatch (CHARACTER, CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "IsMatch (CHARACTER, CHARACTER, System.Text.RegularExpressions.RegexOptions)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Match (CHARACTER, CHARACTER)",
        "returnType": "System.Text.RegularExpressions.Match"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.MatchEvaluator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Text.RegularExpressions.Match)",
        "returnType": "CHARACTER"
      },
      {
        "name": "BeginInvoke (System.Text.RegularExpressions.Match, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.Capture",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.CaptureCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexCompilationInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Text.RegularExpressions.Capture",
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.Group",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Synchronized (System.Text.RegularExpressions.Group)",
        "returnType": "System.Text.RegularExpressions.Group"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.GroupCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Text.RegularExpressions.Group",
      "System.Text.RegularExpressions.Capture",
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.Match",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "NextMatch ()",
        "returnType": "System.Text.RegularExpressions.Match"
      },
      {
        "name": "Result (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "Synchronized (System.Text.RegularExpressions.Match)",
        "returnType": "System.Text.RegularExpressions.Match"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.MatchCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.TimeoutException",
      "System.SystemException",
      "System.Exception",
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexMatchTimeoutException",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexOptions",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexRunner",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexRunnerFactory",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Interop+SChannel",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+TEXTMETRIC",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+STARTUPINFO",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+LogonFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+WNDCLASS_I",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+WNDCLASS",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+MSG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+StructFormatEnum",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+StructFormat",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+RTL_OSVERSIONINFOEX",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+WndProc",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IntPtr, INTEGER, System.IntPtr, System.IntPtr)",
        "returnType": "System.IntPtr"
      },
      {
        "name": "BeginInvoke (System.IntPtr, INTEGER, System.IntPtr, System.IntPtr, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+ConHndlr",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginInvoke (INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+PERF_COUNTER_BLOCK",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+PERF_COUNTER_DEFINITION",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+PERF_DATA_BLOCK",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+PERF_INSTANCE_DEFINITION",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+PERF_OBJECT_TYPE",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+NtModuleInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+WinProcessEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+WinThreadEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+WinModuleEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+ShellExecuteInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+NtProcessBasicInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+LUID",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+TokenPrivileges",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IntPtr, System.IntPtr)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (System.IntPtr, System.IntPtr, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+SYSTEMTIME",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+VS_FIXEDFILEINFO",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+USEROBJECTFLAGS",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+Util",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "HIWORD (INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "LOWORD (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.NativeMethods+MEMORY_BASIC_INFORMATION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.SystemEvents+SystemEventInvokeInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Invoke (LOGICAL, System.Object[])",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+AppPolicyClrCompat",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+WIN32_FILE_ATTRIBUTE_DATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+DCB",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+COMSTAT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+COMMTIMEOUTS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+COMMPROP",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "Microsoft.Win32.UnsafeNativeMethods+IMarshal",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "GetUnmarshalClass (System.Guid&, System.IntPtr, INTEGER, System.IntPtr, INTEGER, output System.Guid&)",
        "returnType": "INTEGER"
      },
      {
        "name": "GetMarshalSizeMax (System.Guid&, System.IntPtr, INTEGER, System.IntPtr, INTEGER, output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "MarshalInterface (System.IntPtr, System.Guid&, System.IntPtr, INTEGER, System.IntPtr, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "UnmarshalInterface (System.IntPtr, System.Guid&, output System.IntPtr&)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReleaseMarshalData (System.IntPtr)",
        "returnType": "INTEGER"
      },
      {
        "name": "DisconnectObject (INTEGER)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "Microsoft.Win32.UnsafeNativeMethods+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.FileStream",
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.WinInetCache+ReadStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "CloseEx (System.Net.CloseExState)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.FileStream",
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "Microsoft.Win32.WinInetCache+WriteStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "CloseEx (System.Net.CloseExState)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.UriParser+UriQuirksVersion",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.UriParser",
      "System.Object"
    ],
    "name": "System.UriParser+BuiltInUriParser",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Uri+Flags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Uri+UriInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Uri+Offset",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Uri+MoreInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Uri+Check",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.PinnableBufferCache+<>c__DisplayClass0_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.LocalAppContext+TryGetSwitchDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (CHARACTER, output System.Boolean&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (CHARACTER, output System.Boolean&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (output System.Boolean&, System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Timers.Timer+FILE_TIME",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.Configuration.IdnElement+UriIdnScopeTypeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.Internal.DelegatingConfigHost",
      "System.Object"
    ],
    "name": "System.Configuration.ClientSettingsStore+ClientSettingsConfigurationHost",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Init (System.Configuration.Internal.IInternalConfigRoot, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "InitForConfiguration (System.String&, output System.String&, output System.String&, System.Configuration.Internal.IInternalConfigRoot, System.Object[])",
        "returnType": "System.Void"
      },
      {
        "name": "OpenStreamForRead (CHARACTER)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "OpenStreamForWrite (CHARACTER, CHARACTER, System.Object&)",
        "returnType": "System.IO.Stream"
      },
      {
        "name": "WriteCompleted (CHARACTER, LOGICAL, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Configuration.ClientSettingsStore+QuotaEnforcedStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "ReadByte ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "WriteByte (INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Configuration.LocalFileSettingsProvider+XmlEscaper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.AuthenticationManager2+<>c__DisplayClass6_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.AuthenticationManager2+<>c__DisplayClass12_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.BaseWebProxyFinder+AutoWebProxyState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.CertPolicyValidationCallback+CallbackContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ServerCertValidationCallback+CallbackContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.ConnectionPool+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ConnectionPool+AsyncConnectionPoolRequest",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.CookieTokenizer+RecognizedAttribute",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.CookieCollection+Stamp",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.CookieCollection+CookieCollectionEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.PathList+PathListComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.CredentialCache+CredentialEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.ContextAwareResult",
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Dns+ResolveAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequestMethods+Ftp",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequestMethods+Http",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequestMethods+File",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.FtpWebRequest+RequestStage",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.MemoryStream",
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.FtpWebResponse+EmptyStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListener+AuthenticationSelectorInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.HttpListener+ExtendedProtectionSelector",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Net.HttpListenerRequest)",
        "returnType": "System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy"
      },
      {
        "name": "BeginInvoke (System.Net.HttpListenerRequest, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpListener+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpListener+DigestContext",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListener+DisconnectAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpListenerRequest+SslStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListenerRequest+Helpers",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpListenerRequestUriBuilder+ParsingResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpListenerRequestUriBuilder+EncodingType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpListenerResponse+ResponseState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpWebRequest+AbortState",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpWebRequest+Booleans",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.RtcState+ControlChannelTriggerStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.SSL_EXTRA_CERT_CHAIN_POLICY_PARA+U",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.SecureCredential+Flags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.SecureCredential2+Flags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.TlsParamaters+Flags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Diagnostics.TraceSource",
      "System.Object"
    ],
    "name": "System.Net.Logging+NclTraceSource",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ServicePoint+HandshakeDoneProcedure",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ServicePoint+ConnectSocketState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.EndpointPermission+EndPointType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+ErrorCodes",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+NTStatus",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+FileCompletionNotificationModes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+RegistryHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+RasHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+SafeNetHandles_SECURITY",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+SafeNetHandlesSafeOverlappedFree",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+SafeNetHandlesXPOrLater",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+SafeNetHandles",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetModuleHandleW (CHARACTER)",
        "returnType": "System.IntPtr"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+NativePKI",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+NativeNTSSPI",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+UnsafeWinInetCache",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+SspiHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "TokenBindingVerifyMessage (System.Byte*, INTEGER, System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_KEY_PARAMETERS_TYPE, System.Byte*, INTEGER, output System.Net.UnsafeNclNativeMethods+HttpApi+HeapAllocHandle&)",
        "returnType": "INTEGER"
      },
      {
        "name": "TokenBindingVerifyMessage_V1 (System.Byte*, INTEGER, System.IntPtr, System.Byte*, INTEGER, output System.Net.UnsafeNclNativeMethods+HttpApi+HeapAllocHandle&)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+SecureStringHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+AppXHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+TokenBindingOSHelper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+ProgressData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+DownloadBitsState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+UploadBitsState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.WebClient+WebClientWriteStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass219_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass221_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass225_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass229_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass231_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass233_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass237_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass241_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebClient+<>c__DisplayClass245_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebHeaderCollection+HeaderEncoding",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebHeaderCollection+RfcChar",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequest+DesignerWebRequestCreate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Create (System.Uri)",
        "returnType": "System.Net.WebRequest"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequest+WebProxyWrapperOpaque",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetProxy (System.Uri)",
        "returnType": "System.Uri"
      },
      {
        "name": "IsBypassed (System.Uri)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetProxies (System.Uri)",
        "returnType": "System.Net.ProxyChain"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebRequest+WebProxyWrapperOpaque",
      "System.Object"
    ],
    "name": "System.Net.WebRequest+WebProxyWrapper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.WebRequest+DelEtwFireBeginWRGet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, CHARACTER, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, CHARACTER, LOGICAL, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.WebRequest+DelEtwFireEndWRGet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, LOGICAL, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.WebRequest+DelEtwFireEndWRespGet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object, LOGICAL, LOGICAL, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, LOGICAL, LOGICAL, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequest+<>c__DisplayClass77_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebRequest+<>c__DisplayClass78_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebUtility+UrlDecoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebUtility+HtmlEntities",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Lookup (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.AutoWebProxyScriptEngine+SyncStatus",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.AutoWebProxyScriptEngine+AutoDetector",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.AutoWebProxyScriptEngine+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Reflection.MethodInfo",
      "System.Reflection.MethodBase",
      "System.Reflection.MemberInfo",
      "System.Object"
    ],
    "name": "System.Net.WebProxyScriptHelper+MyMethodInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetCustomAttributes (LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "GetCustomAttributes (System.Type, LOGICAL)",
        "returnType": "System.Object[]"
      },
      {
        "name": "IsDefined (System.Type, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Invoke (System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)",
        "returnType": "System.Object"
      },
      {
        "name": "GetParameters ()",
        "returnType": "System.Reflection.ParameterInfo[]"
      },
      {
        "name": "GetMethodImplementationFlags ()",
        "returnType": "System.Reflection.MethodImplAttributes"
      },
      {
        "name": "GetBaseDefinition ()",
        "returnType": "System.Reflection.MethodInfo"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.ChunkParser+ReadState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.CommandStream+PipelineInstruction",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.CommandStream+PipelineEntryFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.CommandStream+PipelineEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.ConnectionReturnResult+RequestContext",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Connection+StatusLineValues",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Connection+WaitListItem",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Connection+AsyncTriState",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Connection+<>c__DisplayClass107_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ConnectStream+Nesting",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.ContextAwareResult+StateFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.HttpDigest+Charset",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.FtpControlStream+GetPathOption",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.LazyAsyncResult+ThreadContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.HttpRequestStream+HttpRequestStreamAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkingPerfCounters+CounterPair",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NTAuthentication+InitializeCallbackContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.PrefixLookup+PrefixValuePair",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ProxyChain+ProxyEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.RegBlobWebProxyDataBuilder+ProxyTypeFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Net.SafeCloseSocket+InnerSafeCloseSocket",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.ScatterGatherBuffers+MemoryChunk",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.ShellExpression+ShExpTokens",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.SpnDictionary+ValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.SpnDictionary+<GetEnumerator>d__23",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.SSPIWrapper+OP",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.TimerThread+Queue",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.TimerThread+Timer",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.TimerThread+Callback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Net.TimerThread+Timer, INTEGER, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Net.TimerThread+Timer, INTEGER, System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.TimerThread+TimerThreadState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.TimerThread+Queue",
      "System.Object"
    ],
    "name": "System.Net.TimerThread+TimerQueue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.TimerThread+Queue",
      "System.Object"
    ],
    "name": "System.Net.TimerThread+InfiniteTimerQueue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.TimerThread+Timer",
      "System.Object"
    ],
    "name": "System.Net.TimerThread+TimerNode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.TimerThread+Timer",
      "System.Object"
    ],
    "name": "System.Net.TimerThread+InfiniteTimer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Base64Stream+ReadAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Base64Stream+WriteAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Base64Stream+ReadStateInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.BufferedReadStream+ReadAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.BufferedReadStream+<ReadMoreAsync>d__14",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.TrackingValidationObjectDictionary+ValidateAndParseValue",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.ClientWebSocket+<ConnectAsyncCore>d__21",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+WebSocketOperation",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+KeepAliveTracker",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OnDataReceived ()",
        "returnType": "System.Void"
      },
      {
        "name": "OnDataSent ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "StartTimer (System.Net.WebSockets.WebSocketBase)",
        "returnType": "System.Void"
      },
      {
        "name": "ResetTimer ()",
        "returnType": "System.Void"
      },
      {
        "name": "ShouldSendKeepAlive ()",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "Create (System.TimeSpan)",
        "returnType": "System.Net.WebSockets.WebSocketBase+KeepAliveTracker"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+OutstandingOperationHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "TryStartOperation (System.Threading.CancellationToken, output System.Threading.CancellationToken&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CompleteOperation (LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "CancelIO ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "name": "System.Net.WebSockets.WebSocketBase+IWebSocketStream",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true,
    "methods": [
      {
        "name": "SwitchToOpaqueMode (System.Net.WebSockets.WebSocketBase)",
        "returnType": "System.Void"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "MultipleWriteAsync (System.Collections.Generic.IList, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "CloseNetworkConnectionAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+ReceiveState",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+Methods",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+<ReceiveAsyncCore>d__45",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+<SendAsyncCore>d__47",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+<SendFrameAsync>d__48",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+<CloseOutputAsyncCore>d__51",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+<StartOnCloseCompleted>d__53",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+<CloseAsyncCore>d__56",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+<OnKeepAlive>d__81",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBuffer+SendBufferState",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketConnectionStream+Methods",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.DelegatedStream",
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketConnectionStream+WebSocketConnection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CloseNetworkConnectionAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "ReadAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "FlushAsync (System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "Abort ()",
        "returnType": "System.Void"
      },
      {
        "name": "SwitchToOpaqueMode (System.Net.WebSockets.WebSocketBase)",
        "returnType": "System.Void"
      },
      {
        "name": "Close ()",
        "returnType": "System.Void"
      },
      {
        "name": "MultipleWriteAsync (System.Collections.Generic.IList, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      },
      {
        "name": "WriteAsync (MEMPTR, INTEGER, INTEGER, System.Threading.CancellationToken)",
        "returnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketConnectionStream+<CloseNetworkConnectionAsync>d__19",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketConnectionStream+<ReadAsync>d__21",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketConnectionStream+<WriteAsync>d__22",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketConnectionStream+<MultipleWriteAsync>d__24",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHelpers+MethodNames",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHelpers+<AcceptWebSocketAsyncCore>d__17",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Completed"
    ],
    "methods": [
      {
        "name": "add_Completed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "remove_Completed (System.EventHandler)",
        "returnType": "System.Void"
      },
      {
        "name": "SetShouldCloseOutput ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "SetBuffer (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHttpListenerDuplexStream+Methods",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHttpListenerDuplexStream+<ReadAsyncCore>d__30",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHttpListenerDuplexStream+<MultipleWriteAsyncCore>d__38",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHttpListenerDuplexStream+<WriteAsyncCore>d__41",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHttpListenerDuplexStream+<CloseNetworkConnectionAsync>d__50",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+Errors",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+Action",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+BufferType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+PropertyType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+ActionQueue",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+Property",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+Buffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+DataBuffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+CloseBuffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketProtocolComponent+HttpHeader",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.ContentDisposition+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.MediaTypeNames+Text",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.MediaTypeNames+Application",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.MediaTypeNames+Image",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Mime.MimeBasePart+MimePartAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.MimeMultiPart+MimePartContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.MimePart+MimePartContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.QEncodedStream+ReadStateInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Mime.QEncodedStream+WriteAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mime.QuotedPrintableStream+ReadStateInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Mime.QuotedPrintableStream+WriteAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.MailHeaderInfo+HeaderInfo",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mail.Message+EmptySendContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpClient+<>c__DisplayClass79_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpConnection+AuthenticateCallbackContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpConnection+ConnectAndHandshakeAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpReplyReaderFactory+ReadState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Mail.SmtpReplyReaderFactory+ReadLinesAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkChange+AvailabilityChangeListener",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.NetworkChange+AddressChangeListener",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+AsyncStateObject",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass55_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass56_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass57_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass58_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass59_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass60_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass61_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass62_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.NetworkInformation.Ping+<>c__DisplayClass63_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache.HttpRequestCacheValidator+RequestVars",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache.HttpRequestCacheValidator+Vars",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Net.Cache.HttpRequestCacheValidator+ParseCallback",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (CHARACTER, INTEGER, INTEGER, MEMPTR)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (CHARACTER, INTEGER, INTEGER, MEMPTR, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache._WinInetCache+EntryType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache._WinInetCache+Entry_FC",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache._WinInetCache+Status",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache._WinInetCache+FILETIME",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToLong ()",
        "returnType": "INT64"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache._WinInetCache+EntryBuffer",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Cache._WinInetCache+Entry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Cache.CombinedReadStream+InnerAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Cache.ForwardingReadStream+InnerAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache.Rfc2616+TriState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Cache.Rfc2616+Common",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "OnValidateRequest (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Net.Cache.CacheValidationStatus"
      },
      {
        "name": "ComputeFreshness (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Net.Cache.CacheFreshnessStatus"
      },
      {
        "name": "ValidateCacheByClientPolicy (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ValidateCacheAfterResponse (System.Net.Cache.HttpRequestCacheValidator, System.Net.HttpWebResponse)",
        "returnType": "System.Net.Cache.CacheValidationStatus"
      },
      {
        "name": "TryConditionalRequest (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Net.Cache.CacheValidationStatus"
      },
      {
        "name": "TryResponseFromCache (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Net.Cache.CacheValidationStatus"
      },
      {
        "name": "ConstructConditionalRequest (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Net.Cache.CacheValidationStatus"
      },
      {
        "name": "ReplaceOrUpdateCacheHeaders (System.Net.Cache.HttpRequestCacheValidator, System.Net.HttpWebResponse)",
        "returnType": "System.Void"
      },
      {
        "name": "ValidateCacheOn5XXResponse (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Net.Cache.CacheValidationStatus"
      },
      {
        "name": "Construct206PartialContent (System.Net.Cache.HttpRequestCacheValidator, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Construct200ok (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Void"
      },
      {
        "name": "ConstructUnconditionalRefreshRequest (System.Net.Cache.HttpRequestCacheValidator)",
        "returnType": "System.Void"
      },
      {
        "name": "GetBytesRange (CHARACTER, System.Int64&, System.Int64&, System.Int64&, LOGICAL)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.Cache.RequestCacheEntry",
      "System.Object"
    ],
    "name": "System.Net.Cache.SingleItemRequestCache+FrozenCacheEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "Create (System.Net.Cache.SingleItemRequestCache+FrozenCacheEntry)",
        "returnType": "System.Net.Cache.SingleItemRequestCache+FrozenCacheEntry"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.Cache.SingleItemRequestCache+ReadOnlyStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      }
    ]
  },
  {
    "baseTypes": [
      "System.IO.Stream",
      "System.MarshalByRefObject",
      "System.Object"
    ],
    "name": "System.Net.Cache.SingleItemRequestCache+WriteOnlyStream",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Flush ()",
        "returnType": "System.Void"
      },
      {
        "name": "BeginRead (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndRead (System.IAsyncResult)",
        "returnType": "INTEGER"
      },
      {
        "name": "Read (MEMPTR, INTEGER, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "Seek (INT64, System.IO.SeekOrigin)",
        "returnType": "INT64"
      },
      {
        "name": "SetLength (INT64)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginWrite (MEMPTR, INTEGER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndWrite (System.IAsyncResult)",
        "returnType": "System.Void"
      },
      {
        "name": "Write (MEMPTR, INTEGER, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationValidatorBase",
      "System.Object"
    ],
    "name": "System.Net.Configuration.HttpListenerTimeoutsElement+TimeSpanValidator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanValidate (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Validate (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationValidatorBase",
      "System.Object"
    ],
    "name": "System.Net.Configuration.HttpListenerTimeoutsElement+LongValidator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanValidate (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Validate (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ProxyElement+BypassOnLocalValues",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ProxyElement+UseSystemDefaultValues",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Configuration.ProxyElement+AutoDetectValues",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.Net.Configuration.SmtpSection+SmtpDeliveryMethodTypeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.Net.Configuration.SmtpSection+SmtpDeliveryFormatTypeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationValidatorBase",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebProxyScriptElement+RetryIntervalValidator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanValidate (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Validate (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebRequestModuleElement+TypeAndName",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebRequestModuleElement+TypeTypeConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WebUtilityElement+EnumTypeConverter`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ConvertFrom (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Configuration.ConfigurationValidatorBase",
      "System.Object"
    ],
    "name": "System.Net.Configuration.WindowsAuthenticationElement+CacheSizeValidator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanValidate (System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Validate (System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Security.SecureChannel+UnmanagedCertificateContext",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.SslSessionsCache+SslCredKey",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Net.Security.SslSessionsCache+SslCredKey, System.Net.Security.SslSessionsCache+SslCredKey)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Net.Security.SslSessionsCache+SslCredKey, System.Net.Security.SslSessionsCache+SslCredKey)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Security.NegotiateStream+<>c__DisplayClass27_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Security.NegotiateStream+<>c__DisplayClass29_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Security.NegotiateStream+<>c__DisplayClass33_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Security.SslStream+<>c__DisplayClass32_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Security.SslStream+<>c__DisplayClass35_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.SslState+CachedSessionStatus",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.SslState+Framing",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.SslState+FrameType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.AsyncProtocolRequest",
      "System.Object"
    ],
    "name": "System.Net.Security._SslStream+SplitWriteAsyncProtocolRequest",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+CacheSet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.ContextAwareResult",
      "System.Net.LazyAsyncResult",
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+MultipleAddressConnectAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+StateTaskCompletionSource`2",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      null,
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+StateTaskCompletionSource`3",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+CachedTaskEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.Sockets.SocketAsyncEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+TaskSocketAsyncEventArgs`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Completed"
    ]
  },
  {
    "baseTypes": [
      "System.Net.Sockets.Socket+TaskSocketAsyncEventArgs`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]",
      "System.Net.Sockets.SocketAsyncEventArgs",
      "System.EventArgs",
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+Int32TaskSocketAsyncEventArgs",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "events": [
      "Completed"
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.Socket+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.SocketAsyncEventArgs+PinState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.Sockets.UdpClient+<>c__DisplayClass63_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Sockets.MultipleConnectAsync+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SoundPlayer+IntSecurity",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SoundPlayer+NativeMethods",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SoundPlayer+UnsafeNativeMethods",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SystemSounds+NativeMethods",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SystemSound+SafeNativeMethods",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Specialized.BitVector32+Section",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Equals (System.Collections.Specialized.BitVector32+Section)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      },
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.Collections.Specialized.BitVector32+Section, System.Collections.Specialized.BitVector32+Section)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.Collections.Specialized.BitVector32+Section, System.Collections.Specialized.BitVector32+Section)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ToString (System.Collections.Specialized.BitVector32+Section)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.ListDictionary+NodeEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.ListDictionary+NodeKeyValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.ListDictionary+DictionaryNode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NameObjectCollectionBase+NameObjectKeysEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.NameObjectCollectionBase+KeysCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Get (INTEGER)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.OrderedDictionary+OrderedDictionaryEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.OrderedDictionary+OrderedDictionaryKeyValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringDictionary+GenericAdapter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (CHARACTER, CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "ContainsKey (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "TryGetValue (CHARACTER, output System.String&)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.ObjectModel.ObservableCollection`1+SimpleMonitor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Enter ()",
        "returnType": "System.Void"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.LinkedList`1+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.Queue`1+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedList`2+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedList`2+SortedListKeyEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedList`2+SortedListValueEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedList`2+KeyList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Insert (INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "IndexOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedList`2+ValueList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (?)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Insert (INTEGER, ?)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "IndexOf (?)",
        "returnType": "INTEGER"
      },
      {
        "name": "Remove (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "RemoveAt (INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.Stack`1+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+KeyCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+ValueCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetEnumerator ()",
        "returnType": "?"
      },
      {
        "name": "CopyTo (?, INTEGER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+KeyValuePairComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (?, ?)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+<>c__DisplayClass34_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+<>c__DisplayClass34_1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+TreeSubSet",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Contains (?)",
        "returnType": "LOGICAL"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "GetViewBetween (?, ?)",
        "returnType": "?"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+Node",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+ElementCount",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+<>c__DisplayClass52_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+<>c__DisplayClass53_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+<>c__DisplayClass99_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+<>c__DisplayClass101_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+<>c__DisplayClass103_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+<Reverse>d__104",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.BlockingCollection`1+<GetConsumingEnumerable>d__68",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentBag`1+Node",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentBag`1+ThreadLocalList",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Concurrent.ConcurrentBag`1+ListOperation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Threading.Semaphore+OpenExistingResult",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.StandardOleMarshalObject+GetMarshalSizeMax_Delegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IntPtr, System.Guid&, System.IntPtr, INTEGER, System.IntPtr, INTEGER, output System.Int32&)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginInvoke (System.IntPtr, System.Guid&, System.IntPtr, INTEGER, System.IntPtr, INTEGER, output System.Int32&, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.Guid&, output System.Int32&, System.IAsyncResult)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.StandardOleMarshalObject+MarshalInterface_Delegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IntPtr, System.IntPtr, System.Guid&, System.IntPtr, INTEGER, System.IntPtr, INTEGER)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginInvoke (System.IntPtr, System.IntPtr, System.Guid&, System.IntPtr, INTEGER, System.IntPtr, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.Guid&, System.IAsyncResult)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ICommandAdapterHelpers+<>c__DisplayClass0_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Runtime.InteropServices.WindowsRuntime.ICommandAdapterHelpers+<>c__DisplayClass1_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.FileSystemWatcher+FSWAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialStream+EventLoopRunner",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Ports.SerialStream+SerialStreamAsyncResult",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.DeflateInput+InputState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.DeflaterManaged+DeflaterState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+FlushCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+ErrorCode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+CompressionLevel",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+CompressionStrategy",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+CompressionMethod",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+ZStream",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+DeflateInit2_Delegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IO.Compression.ZLibNative+ZStream*, System.IO.Compression.ZLibNative+CompressionLevel, System.IO.Compression.ZLibNative+CompressionMethod, INTEGER, INTEGER, System.IO.Compression.ZLibNative+CompressionStrategy, CHARACTER, INTEGER)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "BeginInvoke (System.IO.Compression.ZLibNative+ZStream*, System.IO.Compression.ZLibNative+CompressionLevel, System.IO.Compression.ZLibNative+CompressionMethod, INTEGER, INTEGER, System.IO.Compression.ZLibNative+CompressionStrategy, CHARACTER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+DeflateDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IO.Compression.ZLibNative+ZStream*, System.IO.Compression.ZLibNative+FlushCode)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "BeginInvoke (System.IO.Compression.ZLibNative+ZStream*, System.IO.Compression.ZLibNative+FlushCode, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+DeflateEndDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IO.Compression.ZLibNative+ZStream*)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "BeginInvoke (System.IO.Compression.ZLibNative+ZStream*, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+InflateInit2_Delegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IO.Compression.ZLibNative+ZStream*, INTEGER, CHARACTER, INTEGER)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "BeginInvoke (System.IO.Compression.ZLibNative+ZStream*, INTEGER, CHARACTER, INTEGER, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+InflateDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IO.Compression.ZLibNative+ZStream*, System.IO.Compression.ZLibNative+FlushCode)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "BeginInvoke (System.IO.Compression.ZLibNative+ZStream*, System.IO.Compression.ZLibNative+FlushCode, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+InflateEndDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IO.Compression.ZLibNative+ZStream*)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "BeginInvoke (System.IO.Compression.ZLibNative+ZStream*, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+ZlibCompileFlagsDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke ()",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginInvoke (System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+NativeMethods",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+SafeLibraryHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+ZLibStreamHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "DeflateInit2_ (System.IO.Compression.ZLibNative+CompressionLevel, INTEGER, INTEGER, System.IO.Compression.ZLibNative+CompressionStrategy)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "DeflateEnd ()",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "Deflate (System.IO.Compression.ZLibNative+FlushCode)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "Inflate (System.IO.Compression.ZLibNative+FlushCode)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "GetErrorMessage ()",
        "returnType": "CHARACTER"
      },
      {
        "name": "InflateInit2_ (INTEGER)",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      },
      {
        "name": "InflateEnd ()",
        "returnType": "System.IO.Compression.ZLibNative+ErrorCode"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.IO.Compression.DeflateStream+AsyncWriteDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (MEMPTR, INTEGER, INTEGER, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (MEMPTR, INTEGER, INTEGER, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.DeflateStream+WorkerType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.GZipDecoder+GzipHeaderState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.GZipDecoder+GZipOptionalHeaderFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.OutputBuffer+BufferState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+BLOBHEADER",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY_UNION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS2_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_CHAIN_CONTEXT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_CHAIN_ELEMENT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_CHAIN_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_STATUS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_CONTEXT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_DSS_PARAMETERS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_ENHKEY_USAGE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_EXTENSION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_ID",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_ID_UNION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_ISSUER_SERIAL_NUMBER",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_KEY_USAGE_RESTRICTION_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_NAME_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_NAME_VALUE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_OTHER_NAME",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_POLICY_ID",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_POLICIES_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_POLICY_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_POLICY_QUALIFIER_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO2",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_RDN",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_RDN_ATTR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_SIMPLE_CHAIN",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_TEMPLATE_EXT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_TRUST_STATUS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CERT_USAGE_MATCH",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CMS_RECIPIENT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CMS_SIGNER_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CTRL_DECRYPT_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_TRANS_DECRYPT_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_RC2_AUX_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCODE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_ENVELOPED_ENCODE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_AGREE_DECRYPT_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_CERT_ID_RECIPIENT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_PUBLIC_KEY_RECIPIENT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_SIGNED_ENCODE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_SIGNER_ENCODE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_SIGNER_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+PFN_CMSG_STREAM_OUTPUT",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.IntPtr, System.IntPtr, INTEGER, LOGICAL)",
        "returnType": "LOGICAL"
      },
      {
        "name": "BeginInvoke (System.IntPtr, System.IntPtr, INTEGER, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CMSG_STREAM_INFO",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER2",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTES",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE_TYPE_VALUE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_BIT_BLOB",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_KEY_PROV_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_OID_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPT_RC2_CBC_PARAMETERS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+CRYPTOAPI_BLOB",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+DSSPUBKEY",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+KEY_USAGE_STRUCT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+PROV_ENUMALGS_EX",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.CAPIBase+RSAPUBKEY",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Certificate2Collection+FindProcDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Security.Cryptography.SafeCertContextHandle, System.Object)",
        "returnType": "INTEGER"
      },
      {
        "name": "BeginInvoke (System.Security.Cryptography.SafeCertContextHandle, System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Certificate2Collection+EnforceIterationCountLimitDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (MEMPTR, LOGICAL, LOGICAL)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (MEMPTR, LOGICAL, LOGICAL, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509Chain+X509ChainErrorMapping",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Security.Permissions.ResourcePermissionBase+UnsafeNativeMethods",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogInternal+LogListeningInfo",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogEntry+FieldOffsets",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.EventLogEntryCollection+EntriesEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Process+StreamReadMode",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.Process+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessManager+<>c__DisplayClass5_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.NtProcessManager+ValueId",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.NtProcessInfoHelper+SystemProcessInformation",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.NtProcessInfoHelper+SystemThreadInformation",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.ProcessThread+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.SharedPerformanceCounter+FileMapping",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SharedPerformanceCounter+CategoryEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SharedPerformanceCounter+InstanceEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SharedPerformanceCounter+CounterEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SharedPerformanceCounter+CounterEntryMisaligned",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Diagnostics.SharedPerformanceCounter+ProcessLifetimeEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Diagnostics.SharedPerformanceCounter+CategoryData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter+SimplePropertyDescriptor",
      "System.ComponentModel.PropertyDescriptor",
      "System.ComponentModel.MemberDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.ArrayConverter+ArrayPropertyDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.AttributeCollection+AttributeEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.MulticastDelegate",
      "System.Delegate",
      "System.Object"
    ],
    "name": "System.ComponentModel.BackgroundWorker+WorkerThreadStartDelegate",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Invoke (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "BeginInvoke (System.Object, System.AsyncCallback, System.Object)",
        "returnType": "System.IAsyncResult"
      },
      {
        "name": "EndInvoke (System.IAsyncResult)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Container+Site",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetService (System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.CultureInfoConverter+CultureComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Object, System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.CultureInfoConverter+CultureInfoMapper",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "staticMethods": [
      {
        "name": "GetCultureInfoName (CHARACTER)",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.EventHandlerList+ListEntry",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseManager+LicenseInteropHelper",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.License",
      "System.Object"
    ],
    "name": "System.ComponentModel.LicFileLicenseProvider+LicFileLicense",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.MaskedTextProvider+CaseConversion",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.MaskedTextProvider+CharType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.MaskedTextProvider+CharDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "ToString ()",
        "returnType": "CHARACTER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.NestedContainer+Site",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetService (System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.PropertyDescriptorCollection+PropertyDescriptorEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.ReferenceConverter+ReferenceComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Object, System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.ReflectTypeDescriptionProvider+ReflectedTypeData",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.PropertyDescriptor",
      "System.ComponentModel.MemberDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeConverter+SimplePropertyDescriptor",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanResetValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "ResetValue (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ShouldSerializeValue (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeConverter+StandardValuesCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.CustomTypeDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptionProvider+EmptyCustomTypeDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeDescriptionProvider",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+AttributeProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetTypeDescriptor (System.Type, System.Object)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeDescriptionProvider",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+ComNativeDescriptionProvider",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetTypeDescriptor (System.Type, System.Object)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+AttributeFilterCacheItem",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+FilterCacheItem",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "name": "System.ComponentModel.TypeDescriptor+IUnimplemented",
    "isAbstract": true,
    "isClass": false,
    "isEnum": false,
    "isInterface": true
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+MemberDescriptorComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Object, System.Object)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+MergedTypeDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeDescriptionProvider",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+TypeDescriptionNode",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CreateInstance (System.IServiceProvider, System.Type, System.Type[], System.Object[])",
        "returnType": "System.Object"
      },
      {
        "name": "GetCache (System.Object)",
        "returnType": "System.Collections.IDictionary"
      },
      {
        "name": "GetExtendedTypeDescriptor (System.Object)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      },
      {
        "name": "GetFullComponentName (System.Object)",
        "returnType": "CHARACTER"
      },
      {
        "name": "GetReflectionType (System.Type, System.Object)",
        "returnType": "System.Type"
      },
      {
        "name": "GetRuntimeType (System.Type)",
        "returnType": "System.Type"
      },
      {
        "name": "GetTypeDescriptor (System.Type, System.Object)",
        "returnType": "System.ComponentModel.ICustomTypeDescriptor"
      },
      {
        "name": "IsSupportedType (System.Type)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+TypeDescriptorComObject",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+TypeDescriptorInterface",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.WeakHashtable+WeakKeyComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.WeakReference",
      "System.Object"
    ],
    "name": "System.ComponentModel.WeakHashtable+EqualityWeakReference",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CopyTo (MEMPTR, INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.IEnumerator"
      },
      {
        "name": "IndexOf (System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection)",
        "returnType": "INTEGER"
      },
      {
        "name": "ShowDialog ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.TypeConverter",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerOptionService+DesignerOptionConverter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetProperties (System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])",
        "returnType": "System.ComponentModel.PropertyDescriptorCollection"
      },
      {
        "name": "ConvertTo (System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)",
        "returnType": "System.Object"
      }
    ]
  },
  {
    "baseTypes": [
      null,
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ServiceContainer+ServiceCollection`1",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.StandardCommands+VSStandardCommands",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.StandardCommands+ShellGuids",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.Serialization.MemberRelationshipService+RelationshipEntry",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode ()",
        "returnType": "INTEGER"
      }
    ],
    "staticMethods": [
      {
        "name": "op_Equality (System.ComponentModel.Design.Serialization.MemberRelationshipService+RelationshipEntry, System.ComponentModel.Design.Serialization.MemberRelationshipService+RelationshipEntry)",
        "returnType": "LOGICAL"
      },
      {
        "name": "op_Inequality (System.ComponentModel.Design.Serialization.MemberRelationshipService+RelationshipEntry, System.ComponentModel.Design.Serialization.MemberRelationshipService+RelationshipEntry)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.CodeDomCompilationConfiguration+SectionHandler",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.CodeDom.Compiler.FileIntegrity+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexCharClass+LowerCaseMapping",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexCharClass+SingleRangeComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Compare (System.Text.RegularExpressions.RegexCharClass+SingleRange, System.Text.RegularExpressions.RegexCharClass+SingleRange)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexCharClass+SingleRange",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Text.RegularExpressions.RegexCompiler+BacktrackNote",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=5",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=14",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=19",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=29",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=44",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=65",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=98",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=116",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=128",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1024",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2052",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "Interop+SChannel+SCHANNEL_ALERT_TOKEN",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.HttpListenerRequest+Helpers+UrlDecoder",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+RasHelper+RASCONN",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+RasHelper+RASCONNSTATUS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+RasHelper+RASDIALPARAMS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+RasHelper+RASCONNSTATE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOLCHAIN",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOL_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+ControlData",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+ControlDataIPv6",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+WSAMsg",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElementFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElement",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS_LIST",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitFileBuffersStruct",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+NativePKI+CRYPT_OBJID_BLOB",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+NativePKI+CERT_EXTENSION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+NativePKI+CERT_SELECT_CRITERIA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+NativePKI+CertificateSelect",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_CURRENT_USER_IE_PROXY_CONFIG",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp+AutoProxyFlags",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp+AccessType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp+AutoDetectType",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_AUTOPROXY_OPTIONS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_PROXY_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+WinHttp+ErrorCodes",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
      "System.Runtime.InteropServices.SafeHandle",
      "System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HeapAllocHandle",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_API_VERSION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVER_PROPERTY",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO_TYPE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO_TYPE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_TYPE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERSION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_KNOWN_HEADER",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTPAPI_VERSION",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_COOKED_URL",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+SOCKADDR",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TRANSPORT_ADDRESS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_CLIENT_CERT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_TYPE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_BASE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_CHANNEL_BIND_STATUS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_UNKNOWN_HEADER",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADERS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_HEADERS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERB",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK_TYPE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_V2",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_LIMIT_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_BINDING_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_TOKEN_BINDING_INFO",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_TOKEN_BINDING_INFO_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_HASH_ALGORITHM_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_SIGNATURE_ALGORITHM_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_TYPE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_EXTENSION_FORMAT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_KEY_PARAMETERS_TYPE",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_IDENTIFIER",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_IDENTIFIER_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_DATA",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_DATA_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_LIST",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_LIST_V1",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_FLAGS",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_HEADER_ID",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADER_ID",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+AppXHelper+GuiThreadInfo",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+AppXHelper+<>c",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.SpnDictionary+ValueCollection+<GetEnumerator>d__9",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.TimerThread+TimerNode+TimerState",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.WebSockets.WebSocketBase+WebSocketOperation",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+WebSocketOperation+ReceiveOperation",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.WebSockets.WebSocketBase+WebSocketOperation",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+WebSocketOperation+SendOperation",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.WebSockets.WebSocketBase+WebSocketOperation+SendOperation",
      "System.Net.WebSockets.WebSocketBase+WebSocketOperation",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+WebSocketOperation+CloseOutputOperation",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+WebSocketOperation+<Process>d__19",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Net.WebSockets.WebSocketBase+KeepAliveTracker",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+KeepAliveTracker+DisabledKeepAliveTracker",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OnDataReceived ()",
        "returnType": "System.Void"
      },
      {
        "name": "OnDataSent ()",
        "returnType": "System.Void"
      },
      {
        "name": "ResetTimer ()",
        "returnType": "System.Void"
      },
      {
        "name": "StartTimer (System.Net.WebSockets.WebSocketBase)",
        "returnType": "System.Void"
      },
      {
        "name": "ShouldSendKeepAlive ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Net.WebSockets.WebSocketBase+KeepAliveTracker",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketBase+KeepAliveTracker+DefaultKeepAliveTracker",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "OnDataReceived ()",
        "returnType": "System.Void"
      },
      {
        "name": "OnDataSent ()",
        "returnType": "System.Void"
      },
      {
        "name": "ResetTimer ()",
        "returnType": "System.Void"
      },
      {
        "name": "StartTimer (System.Net.WebSockets.WebSocketBase)",
        "returnType": "System.Void"
      },
      {
        "name": "ShouldSendKeepAlive ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketConnectionStream+WebSocketConnection+Methods",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs+HttpListenerAsyncOperation",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Cache._WinInetCache+EntryBuffer+Rsv",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.Security.SecureChannel+UnmanagedCertificateContext+_CERT_CONTEXT",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SoundPlayer+NativeMethods+MMCKINFO",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Media.SoundPlayer+NativeMethods+WAVEFORMATEX",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.ListDictionary+NodeKeyValueCollection+NodeKeyValueEnumerator",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      },
      {
        "name": "Reset ()",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringDictionary+GenericAdapter+KeyOrValue",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringDictionary+GenericAdapter+ICollectionToGenericCollectionAdapter",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Add (CHARACTER)",
        "returnType": "System.Void"
      },
      {
        "name": "Clear ()",
        "returnType": "System.Void"
      },
      {
        "name": "ThrowNotSupportedException ()",
        "returnType": "System.Void"
      },
      {
        "name": "Contains (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "CopyTo (System.String[], INTEGER)",
        "returnType": "System.Void"
      },
      {
        "name": "Remove (CHARACTER)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetEnumerator ()",
        "returnType": "System.Collections.Generic.IEnumerator"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringDictionary+GenericAdapter+<GetEnumerator>d__25",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+KeyCollection+<>c__DisplayClass5_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+KeyCollection+<>c__DisplayClass6_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Dispose ()",
        "returnType": "System.Void"
      },
      {
        "name": "MoveNext ()",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+ValueCollection+<>c__DisplayClass5_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedDictionary`2+ValueCollection+<>c__DisplayClass6_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Generic.SortedSet`1+TreeSubSet+<>c__DisplayClass11_0",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+ZLibStreamHandle+NativeZLibDLLStub",
    "isAbstract": true,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.IO.Compression.ZLibNative+ZLibStreamHandle+State",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.LicenseContext",
      "System.Object"
    ],
    "name": "System.ComponentModel.LicenseManager+LicenseInteropHelper+CLRLicenseContext",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetSavedLicenseKey (System.Type, System.Reflection.Assembly)",
        "returnType": "CHARACTER"
      },
      {
        "name": "SetSavedLicenseKey (System.Type, CHARACTER)",
        "returnType": "System.Void"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.CustomTypeDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+AttributeProvider+AttributeTypeDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "GetAttributes ()",
        "returnType": "System.ComponentModel.AttributeCollection"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+ComNativeDescriptionProvider+ComNativeTypeDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+TypeDescriptionNode+DefaultExtendedTypeDescriptor",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.ComponentModel.TypeDescriptor+TypeDescriptionNode+DefaultTypeDescriptor",
    "isAbstract": false,
    "isClass": false,
    "isEnum": false,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.ComponentModel.PropertyDescriptor",
      "System.ComponentModel.MemberDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection+WrappedPropertyDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanResetValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ResetValue (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ShouldSerializeValue (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.ComponentModel.PropertyDescriptor",
      "System.ComponentModel.MemberDescriptor",
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.DesignerOptionService+DesignerOptionConverter+OptionPropertyDescriptor",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "CanResetValue (System.Object)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetValue (System.Object)",
        "returnType": "System.Object"
      },
      {
        "name": "ResetValue (System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "SetValue (System.Object, System.Object)",
        "returnType": "System.Void"
      },
      {
        "name": "ShouldSerializeValue (System.Object)",
        "returnType": "LOGICAL"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.ComponentModel.Design.ServiceContainer+ServiceCollection`1+EmbeddedTypeAwareTypeComparer",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false,
    "methods": [
      {
        "name": "Equals (System.Type, System.Type)",
        "returnType": "LOGICAL"
      },
      {
        "name": "GetHashCode (System.Type)",
        "returnType": "INTEGER"
      }
    ]
  },
  {
    "baseTypes": [
      "System.Enum",
      "System.ValueType",
      "System.Object"
    ],
    "name": "System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADER_ID+Enum",
    "isAbstract": false,
    "isClass": false,
    "isEnum": true,
    "isInterface": false
  },
  {
    "baseTypes": [
      "System.Object"
    ],
    "name": "System.Collections.Specialized.StringDictionary+GenericAdapter+ICollectionToGenericCollectionAdapter+<GetEnumerator>d__14",
    "isAbstract": false,
    "isClass": true,
    "isEnum": false,
    "isInterface": false
  }
]
